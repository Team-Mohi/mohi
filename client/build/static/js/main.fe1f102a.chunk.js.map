{"version":3,"sources":["Containers/Home.jsx","Containers/App.jsx","serviceWorker.js","index.js"],"names":["Main","lazy","MyProfile","Messenger","SearchNavigation","menu","Item","target","rel","href","Home","Header","Layout","Search","Input","history","useHistory","path","useLocation","pathname","split","key","location","useState","loadingContent","setLoadingContent","antIcon","LoadingOutlined","style","fontSize","color","spin","useEffect","window","scrollTo","setTimeout","className","src","alt","title","placeholder","onSearch","value","push","enterButton","mode","to","trigger","overlay","placement","arrow","fallback","indicator","exact","component","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fe1f102a.chunk.js","sourcesContent":["import React, { Suspense, lazy, useEffect, useState } from 'react';\r\nimport './Home.css';\r\nimport { Link, Route, Switch, useHistory, useLocation} from 'react-router-dom';\r\nimport { Layout, Menu, Input, Dropdown } from 'antd';\r\nimport { FaUserFriends, FaFacebookMessenger, FaBell } from 'react-icons/fa';\r\nimport { AiFillCaretDown } from \"react-icons/ai\";\r\nimport { Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nconst Main = lazy(() => import('./../Components/NewFeed/Index.jsx'));\r\nconst MyProfile = lazy(() => import('./../Components/Profiles/MyProfile/Index.jsx'));\r\nconst Messenger = lazy(() => import('./../Components/Messenger/index.jsx'));\r\nconst SearchNavigation = lazy(() => import('./../Components/Search/index.jsx'));\r\n\r\nconst menu = (\r\n    <Menu>\r\n        <Menu.Item>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\r\n                1st menu item\r\n        </a>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">\r\n                2nd menu item\r\n        </a>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.tmall.com/\">\r\n                3rd menu item\r\n        </a>\r\n        </Menu.Item>\r\n    </Menu>\r\n);\r\n\r\nfunction Home() {\r\n    const { Header } = Layout;\r\n    const { Search } = Input;\r\n    const history = useHistory();\r\n    const path = useLocation().pathname.split('/');\r\n    const key = useHistory().location.key;\r\n    const isActive = path[1];\r\n    const [loadingContent, setLoadingContent] = useState(true);\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 50, color: 'rgba(0,128,128)' }} spin />;\r\n\r\n    useEffect(() => {\r\n\r\n      window.scrollTo(0, 0)\r\n      setLoadingContent(true)\r\n\r\n      setTimeout(() => {\r\n        setLoadingContent(false)\r\n      }, 200);\r\n\r\n    },[key]);\r\n\r\n    function onSearch(value){\r\n      history.push('/search/' + value)\r\n    }\r\n    return (\r\n        <>\r\n            <Layout className=\"layout \" >\r\n                <Header className=\"nav-home\">\r\n                    <div className=\"container d-flex header-home \" >\r\n                        <div className=\"logo \" >\r\n                            <img src={\"logo.png\"} alt=\"Mohi.vn\" title=\"Mohi.vn\" />\r\n                        </div>\r\n                        <Search\r\n                            className=\"search-all\"\r\n                            placeholder=\"Tìm kiếm\"\r\n                            onSearch={(value) => onSearch(value)}\r\n                            enterButton\r\n                        />\r\n                        <Menu className=\"menu-home\" mode=\"horizontal\" >\r\n                            <Menu.Item className=\"after-li\">\r\n                                <Link className=\"avatar-home\" to=\"/profile\" >\r\n                                    <img src=\"images/gaixinh.jpg\" alt=\"\" />\r\n                                    <span>Phước</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item className=\"after-li\">\r\n                                <Link className=\"home\" to=\"/\"  > Trang chủ</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item >\r\n                                <Dropdown className=\"dropdown-setting\" trigger={['click']} overlay={menu} placement=\"bottomCenter\" arrow>\r\n                                    <FaUserFriends title=\"Bạn bè\" />\r\n                                </Dropdown>\r\n                            </Menu.Item>\r\n                            <Menu.Item >\r\n                                <Dropdown className=\"dropdown-setting\" trigger={['click']} overlay={menu} placement=\"bottomCenter\" arrow>\r\n                                    <FaFacebookMessenger title=\"Tin nhắn\" />\r\n                                </Dropdown>\r\n                            </Menu.Item>\r\n                            <Menu.Item >\r\n                                <Dropdown className=\"dropdown-setting\" trigger={['click']} overlay={menu} placement=\"bottomCenter\" arrow>\r\n                                    <FaBell title=\"Thông báo\" />\r\n                                </Dropdown>\r\n                            </Menu.Item>\r\n                            <Menu.Item >\r\n                                <Dropdown className=\"dropdown-setting\" trigger={['click']} overlay={menu} placement=\"bottomCenter\" arrow>\r\n                                    <AiFillCaretDown title=\"Cài đặt\" />\r\n                                </Dropdown>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </div>\r\n                </Header>\r\n                <Suspense fallback={(<div></div>)}>\r\n                    <Switch>\r\n                      {loadingContent ? <div className=\"spin\"> <Spin indicator={antIcon} /></div> :\r\n                        <>\r\n                        <Route exact path=\"/\" component={Main} />\r\n                        <Route path=\"/profile\" component={MyProfile} />\r\n                        <Route path=\"/messenger\" component={Messenger} />\r\n                        <Route path={`/search/:value`} component={SearchNavigation} />\r\n                        </>\r\n                      }\r\n                    </Switch>\r\n                </Suspense>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Home from './Home.jsx';\r\nimport Login from './Authen/Login.jsx';\r\n\r\nfunction App() {\r\n  const login = true;\r\n\r\n  return (<div className=\"App\">\r\n    <Router>\r\n      {login ? <Home /> : <Login />}\r\n    </Router>\r\n  </div>);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"ast":null,"code":"import * as Types from './../Constants/ActionTypes.jsx';\nconst initialState = {\n  currentPage: 1,\n  loading: true,\n  hasMore: false,\n  error: false,\n  listPosts: [],\n  loadingAddComment: false\n};\n\nvar findItem = (type, arr, id) => {\n  var result = {\n    index: -1,\n    item: ''\n  };\n  arr.forEach((item, i) => {\n    if (type === 'post') {\n      if (item.id === id) {\n        result.index = i;\n        result.item = item;\n      }\n    }\n\n    if (type === 'comment') {\n      if (item.pivot.id === id) {\n        result.index = i;\n        result.item = item;\n      }\n    }\n  });\n  return result;\n};\n\nexport const posts = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.FECTH_POSTS:\n      return { ...state,\n        listPosts: [],\n        currentPage: 1,\n        loading: true\n      };\n      break;\n\n    case Types.RESPONSE_POSTS:\n      state.listPosts = action.posts.data;\n      state.loading = false;\n      state.hasMore = action.posts.last_page > action.posts.current_page;\n      return { ...state\n      };\n      break;\n\n    case Types.SET_CURRENT_PAGE:\n      state.currentPage = state.currentPage + 1;\n      return { ...state\n      };\n      break;\n\n    case Types.FECTH_MORE_POSTS:\n      return { ...state,\n        loading: true\n      };\n      break;\n\n    case Types.RESPONSE_MORE_POSTS:\n      state.listPosts = [...state.listPosts, ...action.posts.data];\n      state.loading = false;\n      state.hasMore = action.posts.last_page > action.posts.current_page;\n      return { ...state\n      };\n      break;\n\n    case Types.REQUEST_ADD_COMMENT:\n      return { ...state,\n        loadingAddComment: true\n      };\n      break;\n\n    case Types.RESPONSE_ADD_COMMENT:\n      return { ...state,\n        loadingAddComment: false\n      };\n      break;\n\n    case Types.UPDATE_COMMENT_POST:\n      var post = findItem('post', state.listPosts, action.payload.idPost);\n      var commentPost = findItem('comment', post.item.comment_post, action.payload.id);\n      console.log(post, commentPost);\n      return { ...state\n      };\n      break;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/Web/mohi/client/src/Reducers/Posts.jsx"],"names":["Types","initialState","currentPage","loading","hasMore","error","listPosts","loadingAddComment","findItem","type","arr","id","result","index","item","forEach","i","pivot","posts","state","action","FECTH_POSTS","RESPONSE_POSTS","data","last_page","current_page","SET_CURRENT_PAGE","FECTH_MORE_POSTS","RESPONSE_MORE_POSTS","REQUEST_ADD_COMMENT","RESPONSE_ADD_COMMENT","UPDATE_COMMENT_POST","post","payload","idPost","commentPost","comment_post","console","log"],"mappings":"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","sourcesContent":["import * as Types from './../Constants/ActionTypes.jsx';\r\n\r\nconst initialState = {\r\n  currentPage: 1,\r\n  loading: true,\r\n  hasMore: false,\r\n  error: false,\r\n  listPosts: [],\r\n  loadingAddComment: false,\r\n};\r\n\r\nvar findItem = (type, arr, id) => {\r\n  var result = {\r\n    index: -1,\r\n    item: ''\r\n  };\r\n\r\n  arr.forEach((item, i) => {\r\n    if(type === 'post'){\r\n      if(item.id === id){\r\n        result.index = i;\r\n        result.item = item;\r\n      }\r\n    }\r\n\r\n    if(type === 'comment'){\r\n      if(item.pivot.id === id){\r\n        result.index = i;\r\n        result.item = item;\r\n      }\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport const posts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.FECTH_POSTS:\r\n      return {\r\n              ...state,\r\n              listPosts: [],\r\n              currentPage: 1,\r\n              loading: true\r\n            }\r\n      break;\r\n    case Types.RESPONSE_POSTS:\r\n      state.listPosts = action.posts.data\r\n      state.loading = false\r\n      state.hasMore = action.posts.last_page > action.posts.current_page\r\n      return {...state}\r\n      break;\r\n    case Types.SET_CURRENT_PAGE:\r\n      state.currentPage = state.currentPage + 1\r\n      return {...state}\r\n      break;\r\n    case Types.FECTH_MORE_POSTS:\r\n      return {\r\n              ...state,\r\n              loading: true\r\n            }\r\n      break;\r\n    case Types.RESPONSE_MORE_POSTS:\r\n      state.listPosts = [...state.listPosts, ...action.posts.data]\r\n      state.loading = false\r\n      state.hasMore = action.posts.last_page > action.posts.current_page\r\n      return {...state}\r\n      break;\r\n    case Types.REQUEST_ADD_COMMENT:\r\n      return {...state, loadingAddComment: true}\r\n      break;\r\n    case Types.RESPONSE_ADD_COMMENT:\r\n      return {...state, loadingAddComment:false}\r\n      break;\r\n    case Types.UPDATE_COMMENT_POST:\r\n      var post = findItem('post', state.listPosts, action.payload.idPost);\r\n      var commentPost = findItem('comment', post.item.comment_post, action.payload.id);\r\n      console.log(post, commentPost);\r\n\r\n      return {...state}\r\n      break;\r\n    default: return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Containers\\\\ProfileContainer.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Profile from './../Components/Profiles/MyProfile/Index.jsx';\nimport NotFound from './../Components/NotFound/index.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { requestPostsProfile } from './../Actions/index.jsx';\nimport { responsePostsProfile } from './../Actions/index.jsx';\nimport { responseMorePostsProfile } from './../Actions/index.jsx';\nimport { fetchMorePostsProfile } from './../Actions/index.jsx';\nimport { responseAddCommentProfile } from './../Actions/index.jsx';\nimport { requestAddCommentProfile } from './../Actions/index.jsx';\nimport { requestInfoProfile } from './../Actions/index.jsx';\nimport { responseInfoProfile } from './../Actions/index.jsx';\n\nfunction ProfileContainer({\n  myPosts,\n  profile\n}) {\n  const dispatch = useDispatch();\n  const {\n    idProfile\n  } = useParams();\n  const {\n    currentPage\n  } = useSelector(state => state.myPosts);\n  const {\n    loading,\n    info\n  } = useSelector(state => state.profile);\n  const [loadingSetting, setLoadingSetting] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n\n  const fetchInfoProfile = async () => {\n    dispatch(requestInfoProfile());\n    await axios.get('https://www.api.mohi.vn/api/auth/get-info-profile/' + idProfile).then(res => {\n      dispatch(responseInfoProfile(res.data));\n    }).catch(e => {\n      if (e.response.status === 400) setNotFound(true);\n    });\n  };\n\n  const fetchPostsProfile = async () => {\n    dispatch(requestPostsProfile());\n    await axios.get('https://www.api.mohi.vn/api/auth/post-profile/' + idProfile).then(res => {\n      dispatch(responsePostsProfile(res.data));\n    });\n  };\n\n  useEffect(() => {\n    fetchInfoProfile();\n    fetchPostsProfile();\n  }, [idProfile]);\n  useEffect(() => {\n    if (currentPage > 1) {\n      dispatch(fetchMorePostsProfile());\n      getPostNewFeedInfinite();\n    }\n  }, [currentPage]);\n\n  const getPostNewFeedInfinite = () => {\n    axios({\n      method: 'GET',\n      url: 'https://www.api.mohi.vn/api/auth/post-profile/' + idProfile,\n      params: {\n        page: currentPage\n      }\n    }).then(res => {\n      dispatch(responseMorePostsProfile(res.data));\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n    });\n  };\n\n  const sendReactionPost = async (reaction, postId) => {\n    if (reaction === 'unlike') {\n      console.log(reaction, postId);\n    } else {\n      await axios.post('https://www.api.mohi.vn/api/auth/create-action', {\n        actions_PostId: postId,\n        actions_action: reaction\n      }).then(res => {}).catch(e => {});\n    }\n  };\n\n  const onSubmitComment = async (value, idPost) => {\n    dispatch(requestAddCommentProfile());\n    await axios.post('https://www.api.mohi.vn/api/auth/create-comment', {\n      comment_PostId: idPost,\n      comment_Content: value,\n      comment_Type: 'parent'\n    }).then(res => {\n      dispatch(responseAddCommentProfile(res.data));\n    }).catch(e => {});\n  };\n\n  const hideOnePostOfUser = async idPost => {\n    await axios.post('https://www.api.mohi.vn/api/auth/hide-one-post', {\n      id: idPost\n    }).then(res => {\n      setLoadingSetting(false);\n    }).catch(e => {});\n  };\n\n  const unNotificationOfPost = async idPost => {\n    await axios.post('https://www.api.mohi.vn/api/auth/hide-notifycation-post', {\n      id: idPost\n    }).then(res => {\n      setLoadingSetting(false);\n    }).catch(e => {});\n  };\n\n  const deletePost = async idPost => {\n    await axios.post('https://www.api.mohi.vn/api/auth/delete-post-profile', {\n      id: idPost\n    }).then(res => {\n      setLoadingSetting(false);\n    }).catch(e => {});\n  };\n\n  const loadingSendRequestSetting = (type, idPost, idUser) => {\n    setLoadingSetting(true);\n\n    switch (type) {\n      case 'hidePost':\n        hideOnePostOfUser(idPost);\n        break;\n\n      case 'unNotification':\n        unNotificationOfPost(idPost);\n        break;\n\n      case 'deletePost':\n        deletePost(idPost);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  if (loading && !notFound) {\n    return null;\n  }\n\n  console.log(notFound);\n\n  if (notFound) {\n    console.log('a');\n    return /*#__PURE__*/React.createElement(NotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Profile, {\n    sendReactionPost: sendReactionPost,\n    onSubmitComment: onSubmitComment,\n    loadingSendRequestSetting: loadingSendRequestSetting,\n    loadingSetting: loadingSetting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default ProfileContainer;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Containers/ProfileContainer.jsx"],"names":["React","useEffect","useState","Profile","NotFound","useDispatch","useSelector","axios","useParams","requestPostsProfile","responsePostsProfile","responseMorePostsProfile","fetchMorePostsProfile","responseAddCommentProfile","requestAddCommentProfile","requestInfoProfile","responseInfoProfile","ProfileContainer","myPosts","profile","dispatch","idProfile","currentPage","state","loading","info","loadingSetting","setLoadingSetting","notFound","setNotFound","fetchInfoProfile","get","then","res","data","catch","e","response","status","fetchPostsProfile","getPostNewFeedInfinite","method","url","params","page","isCancel","sendReactionPost","reaction","postId","console","log","post","actions_PostId","actions_action","onSubmitComment","value","idPost","comment_PostId","comment_Content","comment_Type","hideOnePostOfUser","id","unNotificationOfPost","deletePost","loadingSendRequestSetting","type","idUser"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,8CAApB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,mBAAR,QAAkC,wBAAlC;AACA,SAAQC,oBAAR,QAAmC,wBAAnC;AACA,SAAQC,wBAAR,QAAuC,wBAAvC;AACA,SAAQC,qBAAR,QAAoC,wBAApC;AACA,SAASC,yBAAT,QAA0C,wBAA1C;AACA,SAASC,wBAAT,QAAyC,wBAAzC;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,mBAAT,QAAoC,wBAApC;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAA1B,EAA+C;AAC7C,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM;AAACgB,IAAAA;AAAD,MAAcb,SAAS,EAA7B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAkBhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACL,OAAhB,CAAnC;AACA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBnB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACJ,OAAhB,CAArC;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAM4B,gBAAgB,GAAG,YAAY;AACnCV,IAAAA,QAAQ,CAACL,kBAAkB,EAAnB,CAAR;AAEA,UAAMR,KAAK,CAACwB,GAAN,CAAU,uDAAsDV,SAAhE,EACLW,IADK,CACCC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAACJ,mBAAmB,CAACiB,GAAG,CAACC,IAAL,CAApB,CAAR;AACD,KAHK,EAGHC,KAHG,CAGIC,CAAD,IAAO;AACd,UAAGA,CAAC,CAACC,QAAF,CAAWC,MAAX,KAAsB,GAAzB,EAA8BT,WAAW,CAAC,IAAD,CAAX;AAC/B,KALK,CAAN;AAMD,GATD;;AAWA,QAAMU,iBAAiB,GAAG,YAAY;AACpCnB,IAAAA,QAAQ,CAACX,mBAAmB,EAApB,CAAR;AAEA,UAAMF,KAAK,CAACwB,GAAN,CAAU,mDAAkDV,SAA5D,EACLW,IADK,CACCC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAACV,oBAAoB,CAACuB,GAAG,CAACC,IAAL,CAArB,CAAR;AACD,KAHK,CAAN;AAID,GAPD;;AASAjC,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,gBAAgB;AAChBS,IAAAA,iBAAiB;AAClB,GAHQ,EAGN,CAAClB,SAAD,CAHM,CAAT;AAKApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGqB,WAAW,GAAG,CAAjB,EAAmB;AACjBF,MAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AACA4B,MAAAA,sBAAsB;AACvB;AACF,GALQ,EAKN,CAAClB,WAAD,CALM,CAAT;;AAOA,QAAMkB,sBAAsB,GAAG,MAAM;AAC/BjC,IAAAA,KAAK,CAAC;AACJkC,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,mDAAkDrB,SAFnD;AAGJsB,MAAAA,MAAM,EAAE;AAACC,QAAAA,IAAI,EAAGtB;AAAR;AAHJ,KAAD,CAAL,CAKCU,IALD,CAKMC,GAAG,IAAG;AACVb,MAAAA,QAAQ,CAACT,wBAAwB,CAACsB,GAAG,CAACC,IAAL,CAAzB,CAAR;AACD,KAPD,EAQCC,KARD,CAQOC,CAAC,IAAI;AACV,UAAG7B,KAAK,CAACsC,QAAN,CAAeT,CAAf,CAAH,EAAsB;AACvB,KAVD;AAWL,GAZD;;AAcA,QAAMU,gBAAgB,GAAG,OAAOC,QAAP,EAAiBC,MAAjB,KAA4B;AACnD,QAAGD,QAAQ,KAAK,QAAhB,EAAyB;AACvBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,MAAtB;AACD,KAFD,MAEM;AACJ,YAAMzC,KAAK,CAAC4C,IAAN,CAAW,gDAAX,EAA6D;AAACC,QAAAA,cAAc,EAAEJ,MAAjB;AAAyBK,QAAAA,cAAc,EAAEN;AAAzC,OAA7D,EAAiHf,IAAjH,CAAuHC,GAAD,IAAS,CACpI,CADK,EACHE,KADG,CACIC,CAAD,IAAO,CACf,CAFK,CAAN;AAGD;AACF,GARD;;AAUA,QAAMkB,eAAe,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAC/CpC,IAAAA,QAAQ,CAACN,wBAAwB,EAAzB,CAAR;AAEA,UAAMP,KAAK,CAAC4C,IAAN,CAAW,iDAAX,EAA8D;AAACM,MAAAA,cAAc,EAAED,MAAjB;AAAyBE,MAAAA,eAAe,EAAEH,KAA1C;AAAiDI,MAAAA,YAAY,EAAE;AAA/D,KAA9D,EACL3B,IADK,CACCC,GAAD,IAAS;AACbb,MAAAA,QAAQ,CAACP,yBAAyB,CAACoB,GAAG,CAACC,IAAL,CAA1B,CAAR;AACD,KAHK,EAGHC,KAHG,CAGIC,CAAD,IAAO,CACf,CAJK,CAAN;AAKD,GARD;;AAUA,QAAMwB,iBAAiB,GAAG,MAAOJ,MAAP,IAAkB;AAC1C,UAAMjD,KAAK,CAAC4C,IAAN,CAAW,gDAAX,EAA6D;AAACU,MAAAA,EAAE,EAAEL;AAAL,KAA7D,EACLxB,IADK,CACCC,GAAD,IAAS;AACbN,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHK,EAILQ,KAJK,CAIEC,CAAD,IAAO,CACb,CALK,CAAN;AAMD,GAPD;;AASA,QAAM0B,oBAAoB,GAAG,MAAON,MAAP,IAAkB;AAC7C,UAAMjD,KAAK,CAAC4C,IAAN,CAAW,yDAAX,EAAsE;AAACU,MAAAA,EAAE,EAAEL;AAAL,KAAtE,EACLxB,IADK,CACCC,GAAD,IAAS;AACbN,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHK,EAILQ,KAJK,CAIEC,CAAD,IAAO,CACb,CALK,CAAN;AAMD,GAPD;;AASA,QAAM2B,UAAU,GAAG,MAAOP,MAAP,IAAkB;AACnC,UAAMjD,KAAK,CAAC4C,IAAN,CAAW,sDAAX,EAAmE;AAACU,MAAAA,EAAE,EAAEL;AAAL,KAAnE,EACLxB,IADK,CACCC,GAAD,IAAS;AACbN,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHK,EAILQ,KAJK,CAIEC,CAAD,IAAO,CACb,CALK,CAAN;AAMD,GAPD;;AASA,QAAM4B,yBAAyB,GAAG,CAACC,IAAD,EAAOT,MAAP,EAAeU,MAAf,KAA0B;AAC1DvC,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;;AACA,YAAQsC,IAAR;AACE,WAAK,UAAL;AACEL,QAAAA,iBAAiB,CAACJ,MAAD,CAAjB;AACA;;AACF,WAAK,gBAAL;AACEM,QAAAA,oBAAoB,CAACN,MAAD,CAApB;AACA;;AACF,WAAK,YAAL;AACEO,QAAAA,UAAU,CAACP,MAAD,CAAV;AACA;;AACF;AACE;AAXJ;AAcD,GAhBD;;AAkBA,MAAGhC,OAAO,IAAI,CAACI,QAAf,EAAwB;AACtB,WAAO,IAAP;AACD;;AACHqB,EAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;;AACE,MAAGA,QAAH,EAAY;AACVqB,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAED,sBACE,oBAAC,OAAD;AAAS,IAAA,gBAAgB,EAAEJ,gBAA3B;AAA6C,IAAA,eAAe,EAAEQ,eAA9D;AAA+E,IAAA,yBAAyB,EAAEU,yBAA1G;AAAqI,IAAA,cAAc,EAAEtC,cAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AAED,eAAeT,gBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Profile from './../Components/Profiles/MyProfile/Index.jsx';\r\nimport NotFound from './../Components/NotFound/index.jsx';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom';\r\nimport {requestPostsProfile} from './../Actions/index.jsx';\r\nimport {responsePostsProfile} from './../Actions/index.jsx';\r\nimport {responseMorePostsProfile} from './../Actions/index.jsx';\r\nimport {fetchMorePostsProfile} from './../Actions/index.jsx';\r\nimport { responseAddCommentProfile } from './../Actions/index.jsx';\r\nimport { requestAddCommentProfile } from './../Actions/index.jsx';\r\nimport { requestInfoProfile } from './../Actions/index.jsx';\r\nimport { responseInfoProfile } from './../Actions/index.jsx';\r\n\r\nfunction ProfileContainer({ myPosts, profile }){\r\n  const dispatch = useDispatch();\r\n  const {idProfile} = useParams();\r\n  const { currentPage } = useSelector(state => state.myPosts);\r\n  const { loading, info } = useSelector(state => state.profile);\r\n  const [loadingSetting, setLoadingSetting] = useState(false)\r\n  const [notFound, setNotFound] = useState(false)\r\n\r\n  const fetchInfoProfile = async () => {\r\n    dispatch(requestInfoProfile())\r\n\r\n    await axios.get('https://www.api.mohi.vn/api/auth/get-info-profile/'+ idProfile)\r\n    .then((res) => {\r\n      dispatch(responseInfoProfile(res.data))\r\n    }).catch((e) => {\r\n      if(e.response.status === 400) setNotFound(true)\r\n    })\r\n  }\r\n\r\n  const fetchPostsProfile = async () => {\r\n    dispatch(requestPostsProfile())\r\n\r\n    await axios.get('https://www.api.mohi.vn/api/auth/post-profile/'+ idProfile)\r\n    .then((res) => {\r\n      dispatch(responsePostsProfile(res.data))\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchInfoProfile()\r\n    fetchPostsProfile()\r\n  }, [idProfile])\r\n\r\n  useEffect(() => {\r\n    if(currentPage > 1){\r\n      dispatch(fetchMorePostsProfile())\r\n      getPostNewFeedInfinite();\r\n    }\r\n  }, [currentPage])\r\n\r\n  const getPostNewFeedInfinite = () => {\r\n        axios({\r\n          method: 'GET',\r\n          url: 'https://www.api.mohi.vn/api/auth/post-profile/'+ idProfile,\r\n          params: {page : currentPage}\r\n        })\r\n        .then(res =>{\r\n          dispatch(responseMorePostsProfile(res.data))\r\n        })\r\n        .catch(e => {\r\n          if(axios.isCancel(e)) return\r\n        })\r\n  }\r\n\r\n  const sendReactionPost = async (reaction, postId) => {\r\n    if(reaction === 'unlike'){\r\n      console.log(reaction, postId);\r\n    }else {\r\n      await axios.post('https://www.api.mohi.vn/api/auth/create-action', {actions_PostId: postId, actions_action: reaction}).then((res) => {\r\n      }).catch((e) => {\r\n      })\r\n    }\r\n  }\r\n\r\n  const onSubmitComment = async (value, idPost) => {\r\n    dispatch(requestAddCommentProfile())\r\n\r\n    await axios.post('https://www.api.mohi.vn/api/auth/create-comment', {comment_PostId: idPost, comment_Content: value, comment_Type: 'parent'})\r\n    .then((res) => {\r\n      dispatch(responseAddCommentProfile(res.data))\r\n    }).catch((e) => {\r\n    })\r\n  }\r\n\r\n  const hideOnePostOfUser = async (idPost) => {\r\n    await axios.post('https://www.api.mohi.vn/api/auth/hide-one-post', {id: idPost})\r\n    .then((res) => {\r\n      setLoadingSetting(false)\r\n    })\r\n    .catch((e) => {\r\n    })\r\n  }\r\n\r\n  const unNotificationOfPost = async (idPost) => {\r\n    await axios.post('https://www.api.mohi.vn/api/auth/hide-notifycation-post', {id: idPost})\r\n    .then((res) => {\r\n      setLoadingSetting(false)\r\n    })\r\n    .catch((e) => {\r\n    })\r\n  }\r\n\r\n  const deletePost = async (idPost) => {\r\n    await axios.post('https://www.api.mohi.vn/api/auth/delete-post-profile', {id: idPost})\r\n    .then((res) => {\r\n      setLoadingSetting(false)\r\n    })\r\n    .catch((e) => {\r\n    })\r\n  }\r\n\r\n  const loadingSendRequestSetting = (type, idPost, idUser) => {\r\n    setLoadingSetting(true)\r\n    switch (type) {\r\n      case 'hidePost':\r\n        hideOnePostOfUser(idPost)\r\n        break;\r\n      case 'unNotification':\r\n        unNotificationOfPost(idPost)\r\n        break;\r\n      case 'deletePost':\r\n        deletePost(idPost)\r\n        break;\r\n      default:\r\n        break;\r\n\r\n    }\r\n  }\r\n\r\n  if(loading && !notFound){\r\n    return null\r\n  }\r\nconsole.log(notFound);\r\n  if(notFound){\r\n    console.log('a');\r\n    return(\r\n      <NotFound />\r\n    )\r\n  }\r\n\r\n  return(\r\n    <Profile sendReactionPost={sendReactionPost} onSubmitComment={onSubmitComment} loadingSendRequestSetting={loadingSendRequestSetting} loadingSetting={loadingSetting}/>\r\n  )\r\n}\r\n\r\nexport default ProfileContainer;\r\n"]},"metadata":{},"sourceType":"module"}
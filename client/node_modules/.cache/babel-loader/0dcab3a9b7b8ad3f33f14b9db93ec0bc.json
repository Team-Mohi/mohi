{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useCallback,useRef,useState,useEffect}from'react';import{Layout}from'antd';import'./NewFeed.css';import{PostNewFeed}from'./PostNewFeed.jsx';import CreatePostContainer from'./../../Containers/CreatePostContainer.jsx';import Story from'./Story.jsx';import NewPost from'./NewPost.jsx';import{useSelector,useDispatch}from'react-redux';import{skeletonPostNewFeed}from'./../Skeleton/index.jsx';import{setCurrentPage}from'./../../Actions/index.jsx';import{PUBLIC_URL}from'./../../Constants/public.jsx';function NewFeed(props,_ref){var posts=_ref.posts;var Content=Layout.Content;var dispatch=useDispatch();var observer=useRef();var _useSelector=useSelector(function(state){return state.posts;}),listPosts=_useSelector.listPosts,loading=_useSelector.loading,error=_useSelector.error,hasMore=_useSelector.hasMore,loadingAddComment=_useSelector.loadingAddComment;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),newPost=_useState2[0],setNewPost=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isNewPost=_useState4[0],setIsNewPost=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),errPost=_useState6[0],setErrPost=_useState6[1];var lastNewFeed=useCallback(function(node){if(loading)return;if(observer.current)observer.current.disconnect();observer.current=new IntersectionObserver(function(entries){if(entries[0].isIntersecting&&hasMore){dispatch(setCurrentPage());}});if(node)observer.current.observe(node);},[loading,hasMore]);var sendReactionPost=function sendReactionPost(reaction,postId){props.sendReactionPost(reaction,postId);};var onSubmitComment=function onSubmitComment(value,idPost){props.onSubmitComment(value,idPost);};var loadingSendRequestSetting=function loadingSendRequestSetting(type,idPost,idUser){props.loadingSendRequestSetting(type,idPost,idUser);if(type==='hidePost'||type==='hideAllPost'){// let a = list.filter(i => i.id !== idPost)\n// setList(a)\n}};var NoPost=function NoPost(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"new-feed-empty content-hello\"},/*#__PURE__*/React.createElement(\"p\",null,\"Mohi\"),/*#__PURE__*/React.createElement(\"img\",{src:PUBLIC_URL+\"images/nopost.jpg\",alt:\"B\\u1EA3ng tin kh\\xF4ng c\\xF3 b\\xE0i vi\\u1EBFt\"}),/*#__PURE__*/React.createElement(\"div\",{style:{color:'rgba(0,128,128)',fontSize:'15px',fontWeight:'600'}},\"H\\xE3y k\\u1EBFt b\\u1EA1n \\u0111\\u1EC3 nh\\u1EADn \\u0111\\u01B0\\u1EE3c nhi\\u1EC1u b\\xE0i vi\\u1EBFt h\\u01A1n t\\u1EEB b\\u1EA1n b\\xE8\")));};var successCreatePost=function successCreatePost(data){setNewPost(function(prevList){return _toConsumableArray(new Set([].concat(_toConsumableArray(prevList),[data])));});setIsNewPost(true);};var errorCreatePost=function errorCreatePost(){setErrPost(true);setIsNewPost(true);};return/*#__PURE__*/React.createElement(Content,{className:\"pl-3 pr-3\"},/*#__PURE__*/React.createElement(CreatePostContainer,{errorCreatePost:errorCreatePost,successCreatePost:successCreatePost}),isNewPost&&/*#__PURE__*/React.createElement(NewPost,{newPost:newPost,errPost:errPost}),listPosts.map(function(post,index){return/*#__PURE__*/React.createElement(PostNewFeed,{key:index,post:post,ref:lastNewFeed,sendReactionPost:sendReactionPost,onSubmitComment:onSubmitComment,loadingAddComment:loadingAddComment,loadingSendRequestSetting:loadingSendRequestSetting,loadingSetting:props.loadingSetting});}),loading&&skeletonPostNewFeed,!loading&&!listPosts.length&&/*#__PURE__*/React.createElement(NoPost,null),error&&/*#__PURE__*/React.createElement(\"div\",null,\"\\u0110\\xE3 x\\u1EA3y ra l\\u1ED7i kh\\xF4ng mong mu\\u1ED1n vui l\\xF2ng t\\u1EA3i l\\u1EA1i trang\"));}export default NewFeed;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/NewFeed/Newfeed.jsx"],"names":["React","useCallback","useRef","useState","useEffect","Layout","PostNewFeed","CreatePostContainer","Story","NewPost","useSelector","useDispatch","skeletonPostNewFeed","setCurrentPage","PUBLIC_URL","NewFeed","props","posts","Content","dispatch","observer","state","listPosts","loading","error","hasMore","loadingAddComment","newPost","setNewPost","isNewPost","setIsNewPost","errPost","setErrPost","lastNewFeed","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","sendReactionPost","reaction","postId","onSubmitComment","value","idPost","loadingSendRequestSetting","type","idUser","NoPost","color","fontSize","fontWeight","successCreatePost","data","prevList","Set","errorCreatePost","map","post","index","loadingSetting","length"],"mappings":"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","sourcesContent":["import React, {useCallback, useRef, useState, useEffect} from 'react';\r\nimport { Layout } from 'antd';\r\nimport './NewFeed.css';\r\nimport {PostNewFeed} from './PostNewFeed.jsx';\r\nimport CreatePostContainer from './../../Containers/CreatePostContainer.jsx';\r\nimport Story from './Story.jsx';\r\nimport NewPost from './NewPost.jsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {skeletonPostNewFeed} from './../Skeleton/index.jsx';\r\nimport {setCurrentPage} from './../../Actions/index.jsx';\r\nimport {PUBLIC_URL} from './../../Constants/public.jsx';\r\n\r\nfunction NewFeed(props, { posts }) {\r\n    const { Content } = Layout;\r\n    const dispatch = useDispatch();\r\n    const observer = useRef();\r\n    const { listPosts, loading, error, hasMore, loadingAddComment } = useSelector(state => state.posts);\r\n    const [newPost, setNewPost] = useState([]);\r\n    const [isNewPost, setIsNewPost] = useState(false);\r\n    const [errPost, setErrPost] = useState(false);\r\n\r\n    const lastNewFeed = useCallback(node => {\r\n      if(loading) return\r\n        if(observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries => {\r\n          if(entries[0].isIntersecting && hasMore){\r\n            dispatch(setCurrentPage())\r\n          }\r\n        })\r\n      if(node) observer.current.observe(node)\r\n    }, [loading, hasMore])\r\n\r\n    const sendReactionPost = (reaction, postId) => {\r\n      props.sendReactionPost(reaction, postId)\r\n    }\r\n\r\n    const onSubmitComment = (value, idPost) => {\r\n      props.onSubmitComment(value, idPost)\r\n    }\r\n\r\n    const loadingSendRequestSetting = (type, idPost, idUser) => {\r\n      props.loadingSendRequestSetting(type, idPost, idUser)\r\n      if(type === 'hidePost' || type === 'hideAllPost'){\r\n        // let a = list.filter(i => i.id !== idPost)\r\n        // setList(a)\r\n      }\r\n    }\r\n\r\n    const NoPost = () => {\r\n        return(\r\n          <React.Fragment>\r\n            <div className=\"new-feed-empty content-hello\">\r\n              <p>Mohi</p>\r\n              <img src={PUBLIC_URL + `images/nopost.jpg`} alt=\"Bảng tin không có bài viết\" />\r\n            <div style={{color: 'rgba(0,128,128)', fontSize: '15px', fontWeight: '600'}}>Hãy kết bạn để nhận được nhiều bài viết hơn từ bạn bè</div>\r\n            </div>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n\r\n    const successCreatePost = (data) => {\r\n      setNewPost(prevList =>{\r\n        return [...new Set([...prevList, data])]\r\n      })\r\n      setIsNewPost(true)\r\n    }\r\n\r\n    const errorCreatePost = () => {\r\n      setErrPost(true)\r\n      setIsNewPost(true)\r\n    }\r\n\r\n    return (\r\n        <Content className=\"pl-3 pr-3\">\r\n            <CreatePostContainer errorCreatePost={errorCreatePost} successCreatePost={successCreatePost}/>\r\n            {isNewPost && <NewPost newPost={newPost} errPost={errPost}/>}\r\n            {listPosts.map((post, index) => <PostNewFeed  key={index} post={post} ref={lastNewFeed} sendReactionPost={sendReactionPost} onSubmitComment={onSubmitComment} loadingAddComment={loadingAddComment} loadingSendRequestSetting={loadingSendRequestSetting} loadingSetting={props.loadingSetting}/> )}\r\n            {loading && skeletonPostNewFeed}\r\n            {!loading && !listPosts.length  && <NoPost/>}\r\n            {error && <div>Đã xảy ra lỗi không mong muốn vui lòng tải lại trang</div>}\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default NewFeed;\r\n"]},"metadata":{},"sourceType":"module"}
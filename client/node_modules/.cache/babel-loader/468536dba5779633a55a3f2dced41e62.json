{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getWordAt = function getWordAt(string, position) {\n  // Perform type conversions.\n  var str = String(string); // eslint-disable-next-line no-bitwise\n\n  var pos = Number(position) >>> 0; // Search for the word's beginning and end.\n\n  var left = str.slice(0, pos + 1).search(/\\S+$/);\n  var right = str.slice(pos).search(/\\s/); // The last word in the string is a special case.\n\n  if (right < 0) {\n    return {\n      word: str.slice(left),\n      begin: left,\n      end: str.length\n    };\n  } // Return the word, using the located bounds to extract it from the string.\n\n\n  return {\n    word: str.slice(left, right + pos),\n    begin: left,\n    end: right + pos\n  };\n};\n\nexports.default = getWordAt;","map":{"version":3,"sources":["D:/Web/DoAn/client/node_modules/draft-js-emoji-plugin/lib/utils/getWordAt.js"],"names":["Object","defineProperty","exports","value","getWordAt","string","position","str","String","pos","Number","left","slice","search","right","word","begin","end","length","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAGA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,QAA3B,EAAqC;AACnD;AACA,MAAIC,GAAG,GAAGC,MAAM,CAACH,MAAD,CAAhB,CAFmD,CAGnD;;AACA,MAAII,GAAG,GAAGC,MAAM,CAACJ,QAAD,CAAN,KAAqB,CAA/B,CAJmD,CAMnD;;AACA,MAAIK,IAAI,GAAGJ,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAaH,GAAG,GAAG,CAAnB,EAAsBI,MAAtB,CAA6B,MAA7B,CAAX;AACA,MAAIC,KAAK,GAAGP,GAAG,CAACK,KAAJ,CAAUH,GAAV,EAAeI,MAAf,CAAsB,IAAtB,CAAZ,CARmD,CAUnD;;AACA,MAAIC,KAAK,GAAG,CAAZ,EAAe;AACb,WAAO;AACLC,MAAAA,IAAI,EAAER,GAAG,CAACK,KAAJ,CAAUD,IAAV,CADD;AAELK,MAAAA,KAAK,EAAEL,IAFF;AAGLM,MAAAA,GAAG,EAAEV,GAAG,CAACW;AAHJ,KAAP;AAKD,GAjBkD,CAmBnD;;;AACA,SAAO;AACLH,IAAAA,IAAI,EAAER,GAAG,CAACK,KAAJ,CAAUD,IAAV,EAAgBG,KAAK,GAAGL,GAAxB,CADD;AAELO,IAAAA,KAAK,EAAEL,IAFF;AAGLM,IAAAA,GAAG,EAAEH,KAAK,GAAGL;AAHR,GAAP;AAKD,CAzBD;;AA2BAP,OAAO,CAACiB,OAAR,GAAkBf,SAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar getWordAt = function getWordAt(string, position) {\n  // Perform type conversions.\n  var str = String(string);\n  // eslint-disable-next-line no-bitwise\n  var pos = Number(position) >>> 0;\n\n  // Search for the word's beginning and end.\n  var left = str.slice(0, pos + 1).search(/\\S+$/);\n  var right = str.slice(pos).search(/\\s/);\n\n  // The last word in the string is a special case.\n  if (right < 0) {\n    return {\n      word: str.slice(left),\n      begin: left,\n      end: str.length\n    };\n  }\n\n  // Return the word, using the located bounds to extract it from the string.\n  return {\n    word: str.slice(left, right + pos),\n    begin: left,\n    end: right + pos\n  };\n};\n\nexports.default = getWordAt;"]},"metadata":{},"sourceType":"script"}
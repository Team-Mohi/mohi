{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\Page\\\\PopupEditPage.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PopupEditPage.css';\nimport L from \"leaflet\";\nimport * as ELG from \"esri-leaflet-geocoder\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css\";\nimport { PUBLIC_URL } from './../../Constants/public.jsx';\n\nfunction PopupEditPage() {\n  const [lat, setLat] = useState(10.7553411);\n  const [long, setLong] = useState(106.4150395);\n  const [zoom, setZoom] = useState(5);\n  const mapRef = useRef();\n  useEffect(() => {\n    var map = L.map('map_page', {\n      center: [51.505, -0.09],\n      zoom: 13\n    }),\n        marker = L.marker(map.getCenter()).addTo(map),\n        glcl = google.loader.ClientLocation,\n        onLocationfound = function (e) {\n      marker.setLatLng(e.latlng);\n      map.setView(marker.getLatLng(), map.getZoom());\n      alert('Marker has been set to position :' + marker.getLatLng().toString());\n    };\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\n    map.on('locationfound', onLocationfound);\n\n    if (glcl) {\n      //when google.loader.ClientLocation contains result\n      onLocationfound({\n        latlng: [glcl.latitude, glcl.longitude]\n      });\n    } else {\n      alert('google.loader.ClientLocation fails');\n    }\n\n    map.locate();\n  }, []);\n\n  const getMyAdress = () => {\n    navigator.geolocation.getCurrentPosition(getLatLon);\n  };\n\n  function getLatLon(position) {\n    let latitude = position.coords.latitude;\n    let longitude = position.coords.longitude; // const results = new L.LayerGroup().addTo(map);\n    // results.addLayer(L.marker({lat:latitude, lng:longitude}));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-edit-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-edit-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Ch\\u1EC9nh s\\u1EEDa v\\u1ECB tr\\xED c\\u1EEDa h\\xE0ng \", /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 41\n    }\n  }, \"ReactJS Vi\\u1EC7t Nam\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map_page\",\n    className: \"map_page\",\n    ref: mapRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-page-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: getMyAdress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"L\\u1EA5y v\\u1ECB tr\\xED c\\u1EE7a b\\u1EA1n\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"X\\xE1c nh\\u1EADn\")))));\n}\n\nexport default PopupEditPage;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Page/PopupEditPage.jsx"],"names":["React","useState","useEffect","useRef","Link","L","ELG","PUBLIC_URL","PopupEditPage","lat","setLat","long","setLong","zoom","setZoom","mapRef","map","center","marker","getCenter","addTo","glcl","google","loader","ClientLocation","onLocationfound","e","setLatLng","latlng","setView","getLatLng","getZoom","alert","toString","tileLayer","on","latitude","longitude","locate","getMyAdress","navigator","geolocation","getCurrentPosition","getLatLon","position","coords"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport'./PopupEditPage.css';\r\nimport L from \"leaflet\";\r\nimport * as ELG from \"esri-leaflet-geocoder\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"esri-leaflet-geocoder/dist/esri-leaflet-geocoder.css\";\r\nimport {PUBLIC_URL} from './../../Constants/public.jsx';\r\n\r\nfunction PopupEditPage(){\r\n  const [lat, setLat] = useState(10.7553411);\r\n  const [long, setLong] = useState(106.4150395);\r\n  const [zoom, setZoom] = useState(5);\r\n  const mapRef = useRef();\r\n\r\n  useEffect(() => {\r\n\r\n\r\n        var map             = L.map('map_page', {center: [51.505, -0.09], zoom: 13}),\r\n        marker          = L.marker(map.getCenter()).addTo(map),\r\n        glcl            = google.loader.ClientLocation,\r\n        onLocationfound = function(e){\r\n          marker.setLatLng(e.latlng);\r\n          map.setView(marker.getLatLng(),map.getZoom());\r\n          alert('Marker has been set to position :'+marker.getLatLng().toString());\r\n        };\r\n\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);\r\n\r\n    map.on('locationfound', onLocationfound);\r\n\r\n    if(glcl){//when google.loader.ClientLocation contains result\r\n       onLocationfound({latlng:[glcl.latitude,glcl.longitude]});\r\n    }else{alert('google.loader.ClientLocation fails');}\r\n\r\n    map.locate();\r\n  }, []);\r\n\r\n  const getMyAdress = () => {\r\n    navigator.geolocation.getCurrentPosition(getLatLon);\r\n  }\r\n\r\n  function getLatLon(position) {\r\n\r\n    let latitude = position.coords.latitude;\r\n    let longitude = position.coords.longitude;\r\n\r\n    // const results = new L.LayerGroup().addTo(map);\r\n    // results.addLayer(L.marker({lat:latitude, lng:longitude}));\r\n  }\r\n  return(\r\n    <div className=\"popup-edit-page\">\r\n      <div className=\"popup-edit-page-container\">\r\n        <div className=\"map-page-container\">\r\n          <h5>Chỉnh sửa vị trí cửa hàng <Link to=\"\">ReactJS Việt Nam</Link></h5>\r\n          <div id=\"map_page\" className=\"map_page\" ref={mapRef}></div>\r\n          <div className=\"map-page-button\">\r\n            <button type=\"submit\" onClick={getMyAdress}>Lấy vị trí của bạn</button>\r\n            <button type=\"submit\">Xác nhận</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupEditPage;\r\n"]},"metadata":{},"sourceType":"module"}
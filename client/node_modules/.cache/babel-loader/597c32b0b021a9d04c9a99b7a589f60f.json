{"ast":null,"code":"import _slicedToArray from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";function useWindowSize(){var isWindowClient=typeof window===\"object\";var _useState=useState(isWindowClient?window.innerHeight:undefined),_useState2=_slicedToArray(_useState,2),windowSize=_useState2[0],setWindowSize=_useState2[1];//üëá\nuseEffect(function(){//a handler which will be called on change of the screen resize\nfunction setSize(){setWindowSize(window.innerHeight);}if(isWindowClient){//register the window resize listener\nwindow.addEventListener(\"resize\",setSize);//un-register the listener\nreturn function(){return window.removeEventListener(\"resize\",setSize);};}},[isWindowClient,setWindowSize]);//‚òùÔ∏è\nreturn windowSize;}export default useWindowSize;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Messenger/useWindowSize.jsx"],"names":["useState","useEffect","useWindowSize","isWindowClient","window","innerHeight","undefined","windowSize","setWindowSize","setSize","addEventListener","removeEventListener"],"mappings":"iJAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,QAASC,CAAAA,aAAT,EAAyB,CACvB,GAAMC,CAAAA,cAAc,CAAG,MAAOC,CAAAA,MAAP,GAAkB,QAAzC,CADuB,cAGaJ,QAAQ,CAC1CG,cAAc,CAAGC,MAAM,CAACC,WAAV,CAAwBC,SADI,CAHrB,wCAGhBC,UAHgB,eAGJC,aAHI,eAOvB;AACAP,SAAS,CAAC,UAAM,CACd;AACA,QAASQ,CAAAA,OAAT,EAAmB,CACjBD,aAAa,CAACJ,MAAM,CAACC,WAAR,CAAb,CACD,CAED,GAAIF,cAAJ,CAAoB,CAClB;AACAC,MAAM,CAACM,gBAAP,CAAwB,QAAxB,CAAkCD,OAAlC,EAEA;AACA,MAAO,kBAAML,CAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,CAAqCF,OAArC,CAAN,EAAP,CACD,CACF,CAbQ,CAaN,CAACN,cAAD,CAAiBK,aAAjB,CAbM,CAAT,CAcA;AAEA,MAAOD,CAAAA,UAAP,CACD,CAED,cAAeL,CAAAA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction useWindowSize() {\r\n  const isWindowClient = typeof window === \"object\";\r\n\r\n  const [windowSize, setWindowSize] = useState(\r\n    isWindowClient ? window.innerHeight : undefined\r\n  );\r\n\r\n  //üëá\r\n  useEffect(() => {\r\n    //a handler which will be called on change of the screen resize\r\n    function setSize() {\r\n      setWindowSize(window.innerHeight);\r\n    }\r\n\r\n    if (isWindowClient) {\r\n      //register the window resize listener\r\n      window.addEventListener(\"resize\", setSize);\r\n\r\n      //un-register the listener\r\n      return () => window.removeEventListener(\"resize\", setSize);\r\n    }\r\n  }, [isWindowClient, setWindowSize]);\r\n  //‚òùÔ∏è\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n"]},"metadata":{},"sourceType":"module"}
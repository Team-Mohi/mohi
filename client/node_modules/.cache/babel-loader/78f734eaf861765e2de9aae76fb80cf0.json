{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Containers\\\\ProfileContainer.jsx\";\nimport React, { useEffect } from 'react';\nimport Profile from './../Components/Profiles/MyProfile/Index.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { requestPostsProfile } from './../Actions/index.jsx';\nimport { responsePostsProfile } from './../Actions/index.jsx';\nimport { responseMorePostsProfile } from './../Actions/index.jsx';\nimport { fetchMorePostsProfile } from './../Actions/index.jsx';\nimport { responseAddComment } from './../Actions/index.jsx';\nimport { requestAddComment } from './../Actions/index.jsx';\n\nfunction ProfileContainer({\n  myPosts\n}) {\n  const dispatch = useDispatch();\n  const {\n    idProfile\n  } = useParams();\n  const {\n    currentPage\n  } = useSelector(state => state.myPosts);\n\n  const fetchPostsProfile = () => {\n    dispatch(requestPostsProfile());\n    axios.get('/api/auth/post-profile/' + idProfile).then(res => {\n      dispatch(responsePostsProfile(res.data));\n    });\n  };\n\n  useEffect(() => {\n    fetchPostsProfile();\n  }, []);\n  useEffect(() => {\n    if (currentPage > 1) {\n      dispatch(fetchMorePostsProfile());\n      getPostNewFeedInfinite();\n    }\n  }, [currentPage]);\n\n  const getPostNewFeedInfinite = () => {\n    axios({\n      method: 'GET',\n      url: '/api/auth/post-profile/' + idProfile,\n      params: {\n        page: currentPage\n      }\n    }).then(res => {\n      dispatch(responseMorePostsProfile(res.data));\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n    });\n  };\n\n  const sendReactionPost = async (reaction, postId) => {\n    if (reaction === 'unlike') {\n      console.log(reaction, postId);\n    } else {\n      await axios.post('/api/auth/create-action', {\n        actions_PostId: postId,\n        actions_action: reaction\n      }).then(res => {}).catch(e => {});\n    }\n  };\n\n  const onSubmitComment = async (value, idPost) => {\n    dispatch(requestAddComment());\n    await axios.post('/api/auth/create-comment', {\n      comment_PostId: idPost,\n      comment_Content: value,\n      comment_Type: 'parent'\n    }).then(res => {\n      dispatch(responseAddComment(res.data));\n    }).catch(e => {});\n  };\n\n  return /*#__PURE__*/React.createElement(Profile, {\n    sendReactionPost: sendReactionPost,\n    onSubmitComment: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default ProfileContainer;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Containers/ProfileContainer.jsx"],"names":["React","useEffect","Profile","useDispatch","useSelector","axios","useParams","requestPostsProfile","responsePostsProfile","responseMorePostsProfile","fetchMorePostsProfile","responseAddComment","requestAddComment","ProfileContainer","myPosts","dispatch","idProfile","currentPage","state","fetchPostsProfile","get","then","res","data","getPostNewFeedInfinite","method","url","params","page","catch","e","isCancel","sendReactionPost","reaction","postId","console","log","post","actions_PostId","actions_action","onSubmitComment","value","idPost","comment_PostId","comment_Content","comment_Type"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport Profile from './../Components/Profiles/MyProfile/Index.jsx';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom';\r\nimport {requestPostsProfile} from './../Actions/index.jsx';\r\nimport {responsePostsProfile} from './../Actions/index.jsx';\r\nimport {responseMorePostsProfile} from './../Actions/index.jsx';\r\nimport {fetchMorePostsProfile} from './../Actions/index.jsx';\r\nimport { responseAddComment } from './../Actions/index.jsx';\r\nimport { requestAddComment } from './../Actions/index.jsx';\r\n\r\nfunction ProfileContainer({myPosts}){\r\n  const dispatch = useDispatch();\r\n  const {idProfile} = useParams();\r\n  const { currentPage } = useSelector(state => state.myPosts);\r\n\r\n  const fetchPostsProfile = () => {\r\n    dispatch(requestPostsProfile())\r\n\r\n    axios.get('/api/auth/post-profile/'+ idProfile)\r\n    .then((res) => {\r\n      dispatch(responsePostsProfile(res.data))\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPostsProfile()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(currentPage > 1){\r\n      dispatch(fetchMorePostsProfile())\r\n      getPostNewFeedInfinite();\r\n    }\r\n  }, [currentPage])\r\n\r\n  const getPostNewFeedInfinite = () => {\r\n        axios({\r\n          method: 'GET',\r\n          url: '/api/auth/post-profile/'+ idProfile,\r\n          params: {page : currentPage}\r\n        })\r\n        .then(res =>{\r\n          dispatch(responseMorePostsProfile(res.data))\r\n        })\r\n        .catch(e => {\r\n          if(axios.isCancel(e)) return\r\n        })\r\n  }\r\n\r\n  const sendReactionPost = async (reaction, postId) => {\r\n    if(reaction === 'unlike'){\r\n      console.log(reaction, postId);\r\n    }else {\r\n      await axios.post('/api/auth/create-action', {actions_PostId: postId, actions_action: reaction}).then((res) => {\r\n      }).catch((e) => {\r\n      })\r\n    }\r\n  }\r\n\r\n  const onSubmitComment = async (value, idPost) => {\r\n    dispatch(requestAddComment())\r\n\r\n    await axios.post('/api/auth/create-comment', {comment_PostId: idPost, comment_Content: value, comment_Type: 'parent'})\r\n    .then((res) => {\r\n      dispatch(responseAddComment(res.data))\r\n    }).catch((e) => {\r\n    })\r\n  }\r\n\r\n  return(\r\n    <Profile sendReactionPost={sendReactionPost} onSubmitComment={onSubmitComment}/>\r\n  )\r\n}\r\n\r\nexport default ProfileContainer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _escapeRegExp = require('lodash/escapeRegExp');\n\nvar _escapeRegExp2 = _interopRequireDefault(_escapeRegExp);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar findWithRegex = function findWithRegex(regex, contentBlock, callback) {\n  var contentBlockText = contentBlock.getText(); // exclude entities, when matching\n\n  contentBlock.findEntityRanges(function (character) {\n    return !character.getEntity();\n  }, function (nonEntityStart, nonEntityEnd) {\n    var text = contentBlockText.slice(nonEntityStart, nonEntityEnd);\n    var matchArr = void 0;\n    var start = void 0;\n    var prevLastIndex = regex.lastIndex; // Go through all matches in the text and return the indices to the callback\n    // Break the loop if lastIndex is not changed\n\n    while ((matchArr = regex.exec(text)) !== null) {\n      // eslint-disable-line\n      if (regex.lastIndex === prevLastIndex) {\n        break;\n      }\n\n      prevLastIndex = regex.lastIndex;\n      start = nonEntityStart + matchArr.index;\n      callback(start, start + matchArr[0].length);\n    }\n  });\n};\n\nexports.default = function (trigger, supportWhiteSpace, regExp) {\n  //eslint-disable-line\n  var MENTION_REGEX = supportWhiteSpace ? new RegExp((0, _escapeRegExp2.default)(trigger) + '(' + regExp + '|\\\\s){0,}', 'g') : new RegExp('(\\\\s|^)' + (0, _escapeRegExp2.default)(trigger) + regExp, 'g');\n  return function (contentBlock, callback) {\n    findWithRegex(MENTION_REGEX, contentBlock, callback);\n  };\n};","map":{"version":3,"sources":["D:/Web/DoAn/client/node_modules/draft-js-mention-plugin/lib/mentionSuggestionsStrategy.js"],"names":["Object","defineProperty","exports","value","_escapeRegExp","require","_escapeRegExp2","_interopRequireDefault","obj","__esModule","default","findWithRegex","regex","contentBlock","callback","contentBlockText","getText","findEntityRanges","character","getEntity","nonEntityStart","nonEntityEnd","text","slice","matchArr","start","prevLastIndex","lastIndex","exec","index","length","trigger","supportWhiteSpace","regExp","MENTION_REGEX","RegExp"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,aAAa,GAAGC,OAAO,CAAC,qBAAD,CAA3B;;AAEA,IAAIC,cAAc,GAAGC,sBAAsB,CAACH,aAAD,CAA3C;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,IAAIG,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,YAA9B,EAA4CC,QAA5C,EAAsD;AACxE,MAAIC,gBAAgB,GAAGF,YAAY,CAACG,OAAb,EAAvB,CADwE,CAGxE;;AACAH,EAAAA,YAAY,CAACI,gBAAb,CAA8B,UAAUC,SAAV,EAAqB;AACjD,WAAO,CAACA,SAAS,CAACC,SAAV,EAAR;AACD,GAFD,EAEG,UAAUC,cAAV,EAA0BC,YAA1B,EAAwC;AACzC,QAAIC,IAAI,GAAGP,gBAAgB,CAACQ,KAAjB,CAAuBH,cAAvB,EAAuCC,YAAvC,CAAX;AACA,QAAIG,QAAQ,GAAG,KAAK,CAApB;AACA,QAAIC,KAAK,GAAG,KAAK,CAAjB;AACA,QAAIC,aAAa,GAAGd,KAAK,CAACe,SAA1B,CAJyC,CAMzC;AACA;;AACA,WAAO,CAACH,QAAQ,GAAGZ,KAAK,CAACgB,IAAN,CAAWN,IAAX,CAAZ,MAAkC,IAAzC,EAA+C;AAC7C;AACA,UAAIV,KAAK,CAACe,SAAN,KAAoBD,aAAxB,EAAuC;AACrC;AACD;;AACDA,MAAAA,aAAa,GAAGd,KAAK,CAACe,SAAtB;AACAF,MAAAA,KAAK,GAAGL,cAAc,GAAGI,QAAQ,CAACK,KAAlC;AACAf,MAAAA,QAAQ,CAACW,KAAD,EAAQA,KAAK,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAYM,MAA5B,CAAR;AACD;AACF,GAnBD;AAoBD,CAxBD;;AA0BA5B,OAAO,CAACQ,OAAR,GAAkB,UAAUqB,OAAV,EAAmBC,iBAAnB,EAAsCC,MAAtC,EAA8C;AAC9D;AACA,MAAIC,aAAa,GAAGF,iBAAiB,GAAG,IAAIG,MAAJ,CAAW,CAAC,GAAG7B,cAAc,CAACI,OAAnB,EAA4BqB,OAA5B,IAAuC,GAAvC,GAA6CE,MAA7C,GAAsD,WAAjE,EAA8E,GAA9E,CAAH,GAAwF,IAAIE,MAAJ,CAAW,YAAY,CAAC,GAAG7B,cAAc,CAACI,OAAnB,EAA4BqB,OAA5B,CAAZ,GAAmDE,MAA9D,EAAsE,GAAtE,CAA7H;AAEA,SAAO,UAAUpB,YAAV,EAAwBC,QAAxB,EAAkC;AACvCH,IAAAA,aAAa,CAACuB,aAAD,EAAgBrB,YAAhB,EAA8BC,QAA9B,CAAb;AACD,GAFD;AAGD,CAPD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _escapeRegExp = require('lodash/escapeRegExp');\n\nvar _escapeRegExp2 = _interopRequireDefault(_escapeRegExp);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar findWithRegex = function findWithRegex(regex, contentBlock, callback) {\n  var contentBlockText = contentBlock.getText();\n\n  // exclude entities, when matching\n  contentBlock.findEntityRanges(function (character) {\n    return !character.getEntity();\n  }, function (nonEntityStart, nonEntityEnd) {\n    var text = contentBlockText.slice(nonEntityStart, nonEntityEnd);\n    var matchArr = void 0;\n    var start = void 0;\n    var prevLastIndex = regex.lastIndex;\n\n    // Go through all matches in the text and return the indices to the callback\n    // Break the loop if lastIndex is not changed\n    while ((matchArr = regex.exec(text)) !== null) {\n      // eslint-disable-line\n      if (regex.lastIndex === prevLastIndex) {\n        break;\n      }\n      prevLastIndex = regex.lastIndex;\n      start = nonEntityStart + matchArr.index;\n      callback(start, start + matchArr[0].length);\n    }\n  });\n};\n\nexports.default = function (trigger, supportWhiteSpace, regExp) {\n  //eslint-disable-line\n  var MENTION_REGEX = supportWhiteSpace ? new RegExp((0, _escapeRegExp2.default)(trigger) + '(' + regExp + '|\\\\s){0,}', 'g') : new RegExp('(\\\\s|^)' + (0, _escapeRegExp2.default)(trigger) + regExp, 'g');\n\n  return function (contentBlock, callback) {\n    findWithRegex(MENTION_REGEX, contentBlock, callback);\n  };\n};"]},"metadata":{},"sourceType":"script"}
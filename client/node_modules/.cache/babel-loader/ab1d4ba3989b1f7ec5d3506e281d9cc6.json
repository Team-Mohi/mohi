{"ast":null,"code":"import { Path, Util, GeoJSON, latLng } from 'leaflet';\nimport { FeatureManager } from './FeatureManager';\nimport { warn } from '../../Util';\nexport var FeatureLayer = FeatureManager.extend({\n  options: {\n    cacheLayers: true\n  },\n\n  /**\r\n   * Constructor\r\n   */\n  initialize: function (options) {\n    FeatureManager.prototype.initialize.call(this, options);\n    this._originalStyle = this.options.style;\n    this._layers = {};\n  },\n\n  /**\r\n   * Layer Interface\r\n   */\n  onRemove: function (map) {\n    for (var i in this._layers) {\n      map.removeLayer(this._layers[i]); // trigger the event when the entire featureLayer is removed from the map\n\n      this.fire('removefeature', {\n        feature: this._layers[i].feature,\n        permanent: false\n      }, true);\n    }\n\n    return FeatureManager.prototype.onRemove.call(this, map);\n  },\n  createNewLayer: function (geojson) {\n    var layer = GeoJSON.geometryToLayer(geojson, this.options); // trap for GeoJSON without geometry\n\n    if (layer) {\n      layer.defaultOptions = layer.options;\n    }\n\n    return layer;\n  },\n  _updateLayer: function (layer, geojson) {\n    // convert the geojson coordinates into a Leaflet LatLng array/nested arrays\n    // pass it to setLatLngs to update layer geometries\n    var latlngs = [];\n    var coordsToLatLng = this.options.coordsToLatLng || GeoJSON.coordsToLatLng; // copy new attributes, if present\n\n    if (geojson.properties) {\n      layer.feature.properties = geojson.properties;\n    }\n\n    switch (geojson.geometry.type) {\n      case 'Point':\n        latlngs = GeoJSON.coordsToLatLng(geojson.geometry.coordinates);\n        layer.setLatLng(latlngs);\n        break;\n\n      case 'LineString':\n        latlngs = GeoJSON.coordsToLatLngs(geojson.geometry.coordinates, 0, coordsToLatLng);\n        layer.setLatLngs(latlngs);\n        break;\n\n      case 'MultiLineString':\n        latlngs = GeoJSON.coordsToLatLngs(geojson.geometry.coordinates, 1, coordsToLatLng);\n        layer.setLatLngs(latlngs);\n        break;\n\n      case 'Polygon':\n        latlngs = GeoJSON.coordsToLatLngs(geojson.geometry.coordinates, 1, coordsToLatLng);\n        layer.setLatLngs(latlngs);\n        break;\n\n      case 'MultiPolygon':\n        latlngs = GeoJSON.coordsToLatLngs(geojson.geometry.coordinates, 2, coordsToLatLng);\n        layer.setLatLngs(latlngs);\n        break;\n    }\n  },\n\n  /**\r\n   * Feature Management Methods\r\n   */\n  createLayers: function (features) {\n    for (var i = features.length - 1; i >= 0; i--) {\n      var geojson = features[i];\n      var layer = this._layers[geojson.id];\n      var newLayer;\n\n      if (this._visibleZoom() && layer && !this._map.hasLayer(layer) && (!this.options.timeField || this._featureWithinTimeRange(geojson))) {\n        this._map.addLayer(layer);\n\n        this.fire('addfeature', {\n          feature: layer.feature\n        }, true);\n      } // update geometry if necessary\n\n\n      if (layer && this.options.simplifyFactor > 0 && (layer.setLatLngs || layer.setLatLng)) {\n        this._updateLayer(layer, geojson);\n      }\n\n      if (!layer) {\n        newLayer = this.createNewLayer(geojson);\n\n        if (!newLayer) {\n          warn('invalid GeoJSON encountered');\n        } else {\n          newLayer.feature = geojson; // bubble events from individual layers to the feature layer\n\n          newLayer.addEventParent(this);\n\n          if (this.options.onEachFeature) {\n            this.options.onEachFeature(newLayer.feature, newLayer);\n          } // cache the layer\n\n\n          this._layers[newLayer.feature.id] = newLayer; // style the layer\n\n          this.setFeatureStyle(newLayer.feature.id, this.options.style);\n          this.fire('createfeature', {\n            feature: newLayer.feature\n          }, true); // add the layer if the current zoom level is inside the range defined for the layer, it is within the current time bounds or our layer is not time enabled\n\n          if (this._visibleZoom() && (!this.options.timeField || this.options.timeField && this._featureWithinTimeRange(geojson))) {\n            this._map.addLayer(newLayer);\n          }\n        }\n      }\n    }\n  },\n  addLayers: function (ids) {\n    for (var i = ids.length - 1; i >= 0; i--) {\n      var layer = this._layers[ids[i]];\n\n      if (layer && (!this.options.timeField || this._featureWithinTimeRange(layer.feature))) {\n        this._map.addLayer(layer);\n      }\n    }\n  },\n  removeLayers: function (ids, permanent) {\n    for (var i = ids.length - 1; i >= 0; i--) {\n      var id = ids[i];\n      var layer = this._layers[id];\n\n      if (layer) {\n        this.fire('removefeature', {\n          feature: layer.feature,\n          permanent: permanent\n        }, true);\n\n        this._map.removeLayer(layer);\n      }\n\n      if (layer && permanent) {\n        delete this._layers[id];\n      }\n    }\n  },\n  cellEnter: function (bounds, coords) {\n    if (this._visibleZoom() && !this._zooming && this._map) {\n      Util.requestAnimFrame(Util.bind(function () {\n        var cacheKey = this._cacheKey(coords);\n\n        var cellKey = this._cellCoordsToKey(coords);\n\n        var layers = this._cache[cacheKey];\n\n        if (this._activeCells[cellKey] && layers) {\n          this.addLayers(layers);\n        }\n      }, this));\n    }\n  },\n  cellLeave: function (bounds, coords) {\n    if (!this._zooming) {\n      Util.requestAnimFrame(Util.bind(function () {\n        if (this._map) {\n          var cacheKey = this._cacheKey(coords);\n\n          var cellKey = this._cellCoordsToKey(coords);\n\n          var layers = this._cache[cacheKey];\n\n          var mapBounds = this._map.getBounds();\n\n          if (!this._activeCells[cellKey] && layers) {\n            var removable = true;\n\n            for (var i = 0; i < layers.length; i++) {\n              var layer = this._layers[layers[i]];\n\n              if (layer && layer.getBounds && mapBounds.intersects(layer.getBounds())) {\n                removable = false;\n              }\n            }\n\n            if (removable) {\n              this.removeLayers(layers, !this.options.cacheLayers);\n            }\n\n            if (!this.options.cacheLayers && removable) {\n              delete this._cache[cacheKey];\n              delete this._cells[cellKey];\n              delete this._activeCells[cellKey];\n            }\n          }\n        }\n      }, this));\n    }\n  },\n\n  /**\r\n   * Styling Methods\r\n   */\n  resetStyle: function () {\n    this.options.style = this._originalStyle;\n    this.eachFeature(function (layer) {\n      this.resetFeatureStyle(layer.feature.id);\n    }, this);\n    return this;\n  },\n  setStyle: function (style) {\n    this.options.style = style;\n    this.eachFeature(function (layer) {\n      this.setFeatureStyle(layer.feature.id, style);\n    }, this);\n    return this;\n  },\n  resetFeatureStyle: function (id) {\n    var layer = this._layers[id];\n    var style = this._originalStyle || Path.prototype.options;\n\n    if (layer) {\n      Util.extend(layer.options, layer.defaultOptions);\n      this.setFeatureStyle(id, style);\n    }\n\n    return this;\n  },\n  setFeatureStyle: function (id, style) {\n    var layer = this._layers[id];\n\n    if (typeof style === 'function') {\n      style = style(layer.feature);\n    }\n\n    if (layer.setStyle) {\n      layer.setStyle(style);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Utility Methods\r\n   */\n  eachActiveFeature: function (fn, context) {\n    // figure out (roughly) which layers are in view\n    if (this._map) {\n      var activeBounds = this._map.getBounds();\n\n      for (var i in this._layers) {\n        if (this._currentSnapshot.indexOf(this._layers[i].feature.id) !== -1) {\n          // a simple point in poly test for point geometries\n          if (typeof this._layers[i].getLatLng === 'function' && activeBounds.contains(this._layers[i].getLatLng())) {\n            fn.call(context, this._layers[i]);\n          } else if (typeof this._layers[i].getBounds === 'function' && activeBounds.intersects(this._layers[i].getBounds())) {\n            // intersecting bounds check for polyline and polygon geometries\n            fn.call(context, this._layers[i]);\n          }\n        }\n      }\n    }\n\n    return this;\n  },\n  eachFeature: function (fn, context) {\n    for (var i in this._layers) {\n      fn.call(context, this._layers[i]);\n    }\n\n    return this;\n  },\n  getFeature: function (id) {\n    return this._layers[id];\n  },\n  bringToBack: function () {\n    this.eachFeature(function (layer) {\n      if (layer.bringToBack) {\n        layer.bringToBack();\n      }\n    });\n  },\n  bringToFront: function () {\n    this.eachFeature(function (layer) {\n      if (layer.bringToFront) {\n        layer.bringToFront();\n      }\n    });\n  },\n  redraw: function (id) {\n    if (id) {\n      this._redraw(id);\n    }\n\n    return this;\n  },\n  _redraw: function (id) {\n    var layer = this._layers[id];\n    var geojson = layer.feature; // if this looks like a marker\n\n    if (layer && layer.setIcon && this.options.pointToLayer) {\n      // update custom symbology, if necessary\n      if (this.options.pointToLayer) {\n        var getIcon = this.options.pointToLayer(geojson, latLng(geojson.geometry.coordinates[1], geojson.geometry.coordinates[0]));\n        var updatedIcon = getIcon.options.icon;\n        layer.setIcon(updatedIcon);\n      }\n    } // looks like a vector marker (circleMarker)\n\n\n    if (layer && layer.setStyle && this.options.pointToLayer) {\n      var getStyle = this.options.pointToLayer(geojson, latLng(geojson.geometry.coordinates[1], geojson.geometry.coordinates[0]));\n      var updatedStyle = getStyle.options;\n      this.setFeatureStyle(geojson.id, updatedStyle);\n    } // looks like a path (polygon/polyline)\n\n\n    if (layer && layer.setStyle && this.options.style) {\n      this.resetStyle(geojson.id);\n    }\n  }\n});\nexport function featureLayer(options) {\n  return new FeatureLayer(options);\n}\nexport default featureLayer;","map":{"version":3,"sources":["D:/mohi/mohi/client/node_modules/esri-leaflet/src/Layers/FeatureLayer/FeatureLayer.js"],"names":["Path","Util","GeoJSON","latLng","FeatureManager","warn","FeatureLayer","extend","options","cacheLayers","initialize","prototype","call","_originalStyle","style","_layers","onRemove","map","i","removeLayer","fire","feature","permanent","createNewLayer","geojson","layer","geometryToLayer","defaultOptions","_updateLayer","latlngs","coordsToLatLng","properties","geometry","type","coordinates","setLatLng","coordsToLatLngs","setLatLngs","createLayers","features","length","id","newLayer","_visibleZoom","_map","hasLayer","timeField","_featureWithinTimeRange","addLayer","simplifyFactor","addEventParent","onEachFeature","setFeatureStyle","addLayers","ids","removeLayers","cellEnter","bounds","coords","_zooming","requestAnimFrame","bind","cacheKey","_cacheKey","cellKey","_cellCoordsToKey","layers","_cache","_activeCells","cellLeave","mapBounds","getBounds","removable","intersects","_cells","resetStyle","eachFeature","resetFeatureStyle","setStyle","eachActiveFeature","fn","context","activeBounds","_currentSnapshot","indexOf","getLatLng","contains","getFeature","bringToBack","bringToFront","redraw","_redraw","setIcon","pointToLayer","getIcon","updatedIcon","icon","getStyle","updatedStyle","featureLayer"],"mappings":"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","sourcesContent":["import { Path, Util, GeoJSON, latLng } from 'leaflet';\r\nimport { FeatureManager } from './FeatureManager';\r\nimport { warn } from '../../Util';\r\n\r\nexport var FeatureLayer = FeatureManager.extend({\r\n\r\n  options: {\r\n    cacheLayers: true\r\n  },\r\n\r\n  /**\r\n   * Constructor\r\n   */\r\n  initialize: function (options) {\r\n    FeatureManager.prototype.initialize.call(this, options);\r\n    this._originalStyle = this.options.style;\r\n    this._layers = {};\r\n  },\r\n\r\n  /**\r\n   * Layer Interface\r\n   */\r\n\r\n  onRemove: function (map) {\r\n    for (var i in this._layers) {\r\n      map.removeLayer(this._layers[i]);\r\n      // trigger the event when the entire featureLayer is removed from the map\r\n      this.fire('removefeature', {\r\n        feature: this._layers[i].feature,\r\n        permanent: false\r\n      }, true);\r\n    }\r\n\r\n    return FeatureManager.prototype.onRemove.call(this, map);\r\n  },\r\n\r\n  createNewLayer: function (geojson) {\r\n    var layer = GeoJSON.geometryToLayer(geojson, this.options);\r\n    // trap for GeoJSON without geometry\r\n    if (layer) {\r\n      layer.defaultOptions = layer.options;\r\n    }\r\n    return layer;\r\n  },\r\n\r\n  _updateLayer: function (layer, geojson) {\r\n    // convert the geojson coordinates into a Leaflet LatLng array/nested arrays\r\n    // pass it to setLatLngs to update layer geometries\r\n    var latlngs = [];\r\n    var coordsToLatLng = this.options.coordsToLatLng || GeoJSON.coordsToLatLng;\r\n\r\n    // copy new attributes, if present\r\n    if (geojson.properties) {\r\n      layer.feature.properties = geojson.properties;\r\n    }\r\n\r\n    switch (geojson.geometry.type) {\r\n      case 'Point':\r\n        latlngs = GeoJSON.coordsToLatLng(geojson.geometry.coordinates);\r\n        layer.setLatLng(latlngs);\r\n        break;\r\n      case 'LineString':\r\n        latlngs = GeoJSON.coordsToLatLngs(geojson.geometry.coordinates, 0, coordsToLatLng);\r\n        layer.setLatLngs(latlngs);\r\n        break;\r\n      case 'MultiLineString':\r\n        latlngs = GeoJSON.coordsToLatLngs(geojson.geometry.coordinates, 1, coordsToLatLng);\r\n        layer.setLatLngs(latlngs);\r\n        break;\r\n      case 'Polygon':\r\n        latlngs = GeoJSON.coordsToLatLngs(geojson.geometry.coordinates, 1, coordsToLatLng);\r\n        layer.setLatLngs(latlngs);\r\n        break;\r\n      case 'MultiPolygon':\r\n        latlngs = GeoJSON.coordsToLatLngs(geojson.geometry.coordinates, 2, coordsToLatLng);\r\n        layer.setLatLngs(latlngs);\r\n        break;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Feature Management Methods\r\n   */\r\n\r\n  createLayers: function (features) {\r\n    for (var i = features.length - 1; i >= 0; i--) {\r\n      var geojson = features[i];\r\n\r\n      var layer = this._layers[geojson.id];\r\n      var newLayer;\r\n\r\n      if (this._visibleZoom() && layer && !this._map.hasLayer(layer) && (!this.options.timeField || this._featureWithinTimeRange(geojson))) {\r\n        this._map.addLayer(layer);\r\n        this.fire('addfeature', {\r\n          feature: layer.feature\r\n        }, true);\r\n      }\r\n\r\n      // update geometry if necessary\r\n      if (layer && this.options.simplifyFactor > 0 && (layer.setLatLngs || layer.setLatLng)) {\r\n        this._updateLayer(layer, geojson);\r\n      }\r\n\r\n      if (!layer) {\r\n        newLayer = this.createNewLayer(geojson);\r\n\r\n        if (!newLayer) {\r\n          warn('invalid GeoJSON encountered');\r\n        } else {\r\n          newLayer.feature = geojson;\r\n\r\n          // bubble events from individual layers to the feature layer\r\n          newLayer.addEventParent(this);\r\n\r\n          if (this.options.onEachFeature) {\r\n            this.options.onEachFeature(newLayer.feature, newLayer);\r\n          }\r\n\r\n          // cache the layer\r\n          this._layers[newLayer.feature.id] = newLayer;\r\n\r\n          // style the layer\r\n          this.setFeatureStyle(newLayer.feature.id, this.options.style);\r\n\r\n          this.fire('createfeature', {\r\n            feature: newLayer.feature\r\n          }, true);\r\n\r\n          // add the layer if the current zoom level is inside the range defined for the layer, it is within the current time bounds or our layer is not time enabled\r\n          if (this._visibleZoom() && (!this.options.timeField || (this.options.timeField && this._featureWithinTimeRange(geojson)))) {\r\n            this._map.addLayer(newLayer);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  addLayers: function (ids) {\r\n    for (var i = ids.length - 1; i >= 0; i--) {\r\n      var layer = this._layers[ids[i]];\r\n      if (layer && (!this.options.timeField || this._featureWithinTimeRange(layer.feature))) {\r\n        this._map.addLayer(layer);\r\n      }\r\n    }\r\n  },\r\n\r\n  removeLayers: function (ids, permanent) {\r\n    for (var i = ids.length - 1; i >= 0; i--) {\r\n      var id = ids[i];\r\n      var layer = this._layers[id];\r\n      if (layer) {\r\n        this.fire('removefeature', {\r\n          feature: layer.feature,\r\n          permanent: permanent\r\n        }, true);\r\n        this._map.removeLayer(layer);\r\n      }\r\n      if (layer && permanent) {\r\n        delete this._layers[id];\r\n      }\r\n    }\r\n  },\r\n\r\n  cellEnter: function (bounds, coords) {\r\n    if (this._visibleZoom() && !this._zooming && this._map) {\r\n      Util.requestAnimFrame(Util.bind(function () {\r\n        var cacheKey = this._cacheKey(coords);\r\n        var cellKey = this._cellCoordsToKey(coords);\r\n        var layers = this._cache[cacheKey];\r\n        if (this._activeCells[cellKey] && layers) {\r\n          this.addLayers(layers);\r\n        }\r\n      }, this));\r\n    }\r\n  },\r\n\r\n  cellLeave: function (bounds, coords) {\r\n    if (!this._zooming) {\r\n      Util.requestAnimFrame(Util.bind(function () {\r\n        if (this._map) {\r\n          var cacheKey = this._cacheKey(coords);\r\n          var cellKey = this._cellCoordsToKey(coords);\r\n          var layers = this._cache[cacheKey];\r\n          var mapBounds = this._map.getBounds();\r\n          if (!this._activeCells[cellKey] && layers) {\r\n            var removable = true;\r\n\r\n            for (var i = 0; i < layers.length; i++) {\r\n              var layer = this._layers[layers[i]];\r\n              if (layer && layer.getBounds && mapBounds.intersects(layer.getBounds())) {\r\n                removable = false;\r\n              }\r\n            }\r\n\r\n            if (removable) {\r\n              this.removeLayers(layers, !this.options.cacheLayers);\r\n            }\r\n\r\n            if (!this.options.cacheLayers && removable) {\r\n              delete this._cache[cacheKey];\r\n              delete this._cells[cellKey];\r\n              delete this._activeCells[cellKey];\r\n            }\r\n          }\r\n        }\r\n      }, this));\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Styling Methods\r\n   */\r\n\r\n  resetStyle: function () {\r\n    this.options.style = this._originalStyle;\r\n    this.eachFeature(function (layer) {\r\n      this.resetFeatureStyle(layer.feature.id);\r\n    }, this);\r\n    return this;\r\n  },\r\n\r\n  setStyle: function (style) {\r\n    this.options.style = style;\r\n    this.eachFeature(function (layer) {\r\n      this.setFeatureStyle(layer.feature.id, style);\r\n    }, this);\r\n    return this;\r\n  },\r\n\r\n  resetFeatureStyle: function (id) {\r\n    var layer = this._layers[id];\r\n    var style = this._originalStyle || Path.prototype.options;\r\n    if (layer) {\r\n      Util.extend(layer.options, layer.defaultOptions);\r\n      this.setFeatureStyle(id, style);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  setFeatureStyle: function (id, style) {\r\n    var layer = this._layers[id];\r\n    if (typeof style === 'function') {\r\n      style = style(layer.feature);\r\n    }\r\n    if (layer.setStyle) {\r\n      layer.setStyle(style);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Utility Methods\r\n   */\r\n\r\n  eachActiveFeature: function (fn, context) {\r\n    // figure out (roughly) which layers are in view\r\n    if (this._map) {\r\n      var activeBounds = this._map.getBounds();\r\n      for (var i in this._layers) {\r\n        if (this._currentSnapshot.indexOf(this._layers[i].feature.id) !== -1) {\r\n          // a simple point in poly test for point geometries\r\n          if (typeof this._layers[i].getLatLng === 'function' && activeBounds.contains(this._layers[i].getLatLng())) {\r\n            fn.call(context, this._layers[i]);\r\n          } else if (typeof this._layers[i].getBounds === 'function' && activeBounds.intersects(this._layers[i].getBounds())) {\r\n            // intersecting bounds check for polyline and polygon geometries\r\n            fn.call(context, this._layers[i]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  },\r\n\r\n  eachFeature: function (fn, context) {\r\n    for (var i in this._layers) {\r\n      fn.call(context, this._layers[i]);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  getFeature: function (id) {\r\n    return this._layers[id];\r\n  },\r\n\r\n  bringToBack: function () {\r\n    this.eachFeature(function (layer) {\r\n      if (layer.bringToBack) {\r\n        layer.bringToBack();\r\n      }\r\n    });\r\n  },\r\n\r\n  bringToFront: function () {\r\n    this.eachFeature(function (layer) {\r\n      if (layer.bringToFront) {\r\n        layer.bringToFront();\r\n      }\r\n    });\r\n  },\r\n\r\n  redraw: function (id) {\r\n    if (id) {\r\n      this._redraw(id);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  _redraw: function (id) {\r\n    var layer = this._layers[id];\r\n    var geojson = layer.feature;\r\n\r\n    // if this looks like a marker\r\n    if (layer && layer.setIcon && this.options.pointToLayer) {\r\n      // update custom symbology, if necessary\r\n      if (this.options.pointToLayer) {\r\n        var getIcon = this.options.pointToLayer(geojson, latLng(geojson.geometry.coordinates[1], geojson.geometry.coordinates[0]));\r\n        var updatedIcon = getIcon.options.icon;\r\n        layer.setIcon(updatedIcon);\r\n      }\r\n    }\r\n\r\n    // looks like a vector marker (circleMarker)\r\n    if (layer && layer.setStyle && this.options.pointToLayer) {\r\n      var getStyle = this.options.pointToLayer(geojson, latLng(geojson.geometry.coordinates[1], geojson.geometry.coordinates[0]));\r\n      var updatedStyle = getStyle.options;\r\n      this.setFeatureStyle(geojson.id, updatedStyle);\r\n    }\r\n\r\n    // looks like a path (polygon/polyline)\r\n    if (layer && layer.setStyle && this.options.style) {\r\n      this.resetStyle(geojson.id);\r\n    }\r\n  }\r\n});\r\n\r\nexport function featureLayer (options) {\r\n  return new FeatureLayer(options);\r\n}\r\n\r\nexport default featureLayer;\r\n"]},"metadata":{},"sourceType":"module"}
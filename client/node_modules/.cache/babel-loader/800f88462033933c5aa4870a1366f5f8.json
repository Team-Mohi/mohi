{"ast":null,"code":"import _classCallCheck from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  width: 840px;\\n  max-height: 55px;\\n  overflow-y: auto;\\n  margin-left: 10px;\\n  font-size: 14px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{Component}from\"react\";import Editor,{createEditorStateWithText}from\"draft-js-plugins-editor\";import createEmojiPlugin from\"draft-js-emoji-plugin\";import\"draft-js-emoji-plugin/lib/plugin.css\";import style from'styled-components';import{convertToRaw,getDefaultKeyBinding,KeyBindingUtil,ContentState,EditorState}from\"draft-js\";var emojiPlugin=createEmojiPlugin({useNativeArt:true});var EmojiSuggestions=emojiPlugin.EmojiSuggestions,EmojiSelect=emojiPlugin.EmojiSelect;var plugins=[emojiPlugin];var text=\"\";var StyleEditor=style.div(_templateObject());var CustomEmojiEditor=/*#__PURE__*/function(_Component){_inherits(CustomEmojiEditor,_Component);var _super=_createSuper(CustomEmojiEditor);function CustomEmojiEditor(props){var _this;_classCallCheck(this,CustomEmojiEditor);_this=_super.call(this,props);_this.state={editorState:createEditorStateWithText(text)};_this.onChange=function(editorState){_this.setState({editorState:editorState});var value=_this.state.editorState.getCurrentContent().getPlainText();if(value){_this.props.isTypingMess(true);}};_this.onFocus=function(){_this.props.isTypingMess(true);_this.props.readMess();};_this.onBlur=function(){_this.props.isTypingMess(false);};_this.handleKeyCommand=_this.handleKeyCommand.bind(_assertThisInitialized(_this));return _this;}_createClass(CustomEmojiEditor,[{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.showModalCreatePost){this.editor.focus();}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){if(nextProps.statusCreatePost!==this.props.statusCreatePost){if(nextProps.statusCreatePost==='success'||nextProps.statusCreatePost==='error'){var editorState=EditorState.push(this.state.editorState,ContentState.createFromText(''));this.setState({editorState:editorState});}}}},{key:\"keyBindingFn\",value:function keyBindingFn(e){if(e.keyCode===13){return'submit-mess';}return getDefaultKeyBinding(e);}},{key:\"handleKeyCommand\",value:function handleKeyCommand(command){if(command==='submit-mess'){var value=this.state.editorState.getCurrentContent().getPlainText();var content=this.state.editorState.getCurrentContent();var isEditorEmpty=!content.hasText();var lengthOfTrimmedContent=value.trim().length;var isContainOnlySpaces=!isEditorEmpty&&!lengthOfTrimmedContent;if(value&&!isContainOnlySpaces){this.props.onSubmitMess(value);this.props.isTypingMess(false);var editorState=EditorState.push(this.state.editorState,ContentState.createFromText(''));this.setState({editorState:editorState});}return'handled';}return'not-handled';}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',alignItems:'center'}},/*#__PURE__*/React.createElement(StyleEditor,null,/*#__PURE__*/React.createElement(Editor,{keyBindingFn:this.keyBindingFn,handleKeyCommand:this.handleKeyCommand,editorState:this.state.editorState,onChange:this.onChange,onFocus:this.onFocus,onBlur:this.onBlur,plugins:plugins,placeholder:\"Nh\\u1EADp tin nh\\u1EAFn...\",ref:function ref(element){_this2.editor=element;}})),/*#__PURE__*/React.createElement(EmojiSuggestions,null),/*#__PURE__*/React.createElement(\"div\",{className:\"emoij-mess\",style:{textAlign:'right'}},/*#__PURE__*/React.createElement(EmojiSelect,null))));}}]);return CustomEmojiEditor;}(Component);export{CustomEmojiEditor as default};","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Messenger/EditorEmoji.jsx"],"names":["React","Component","Editor","createEditorStateWithText","createEmojiPlugin","style","convertToRaw","getDefaultKeyBinding","KeyBindingUtil","ContentState","EditorState","emojiPlugin","useNativeArt","EmojiSuggestions","EmojiSelect","plugins","text","StyleEditor","div","CustomEmojiEditor","props","state","editorState","onChange","setState","value","getCurrentContent","getPlainText","isTypingMess","onFocus","readMess","onBlur","handleKeyCommand","bind","showModalCreatePost","editor","focus","nextProps","statusCreatePost","push","createFromText","e","keyCode","command","content","isEditorEmpty","hasText","lengthOfTrimmedContent","trim","length","isContainOnlySpaces","onSubmitMess","display","alignItems","keyBindingFn","element","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Editor, { createEditorStateWithText } from \"draft-js-plugins-editor\";\r\nimport createEmojiPlugin from \"draft-js-emoji-plugin\";\r\nimport \"draft-js-emoji-plugin/lib/plugin.css\";\r\nimport style from 'styled-components';\r\nimport {convertToRaw, getDefaultKeyBinding, KeyBindingUtil, ContentState, EditorState} from \"draft-js\";\r\n\r\nconst emojiPlugin = createEmojiPlugin({\r\n  useNativeArt: true\r\n});\r\nconst { EmojiSuggestions, EmojiSelect } = emojiPlugin;\r\nconst plugins = [emojiPlugin];\r\nconst text = ``;\r\n\r\nconst StyleEditor = style.div`\r\n  width: 840px;\r\n  max-height: 55px;\r\n  overflow-y: auto;\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n`;\r\nexport default class CustomEmojiEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\r\n  }\r\n    state = {\r\n      editorState: createEditorStateWithText(text)\r\n    };\r\n\r\n  componentDidMount(){\r\n\r\n    if(this.props.showModalCreatePost){\r\n      this.editor.focus();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.statusCreatePost !== this.props.statusCreatePost){\r\n      if(nextProps.statusCreatePost === 'success' || nextProps.statusCreatePost === 'error'){\r\n        const editorState = EditorState.push(this.state.editorState, ContentState.createFromText(''));\r\n        this.setState({ editorState });\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange = (editorState) => {\r\n    this.setState({\r\n      editorState\r\n    });\r\n    const value = this.state.editorState.getCurrentContent().getPlainText();\r\n    if(value){\r\n      this.props.isTypingMess(true)\r\n    }\r\n  };\r\n\r\n  onFocus = () => {\r\n    this.props.isTypingMess(true)\r\n    this.props.readMess()\r\n  }\r\n\r\n  onBlur = () => {\r\n    this.props.isTypingMess(false)\r\n  }\r\n\r\n  keyBindingFn(e){\r\n    if (e.keyCode === 13) {\r\n      return 'submit-mess'\r\n    }\r\n\r\n    return getDefaultKeyBinding(e)\r\n  }\r\n\r\n  handleKeyCommand(command){\r\n    if (command === 'submit-mess') {\r\n      const value = this.state.editorState.getCurrentContent().getPlainText();\r\n      const content = this.state.editorState.getCurrentContent();\r\n      const isEditorEmpty = !content.hasText();\r\n      const lengthOfTrimmedContent = value.trim().length;\r\n      const isContainOnlySpaces = !isEditorEmpty && !lengthOfTrimmedContent;\r\n\r\n      if(value && !isContainOnlySpaces) {\r\n        this.props.onSubmitMess(value)\r\n        this.props.isTypingMess(false)\r\n        const editorState = EditorState.push(this.state.editorState, ContentState.createFromText(''));\r\n        this.setState({ editorState });\r\n      }\r\n      return 'handled'\r\n    }\r\n\r\n    return 'not-handled'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{display: 'flex',alignItems: 'center'}}>\r\n        <StyleEditor>\r\n          <Editor\r\n            keyBindingFn={this.keyBindingFn}\r\n            handleKeyCommand={this.handleKeyCommand}\r\n            editorState={this.state.editorState}\r\n            onChange={this.onChange}\r\n            onFocus={this.onFocus}\r\n            onBlur={this.onBlur}\r\n            plugins={plugins}\r\n            placeholder=\"Nhập tin nhắn...\"\r\n            ref={(element) => {\r\n              this.editor = element;\r\n            }}\r\n          />\r\n        </StyleEditor>\r\n        <EmojiSuggestions />\r\n        <div className=\"emoij-mess\" style={{textAlign: 'right'}}>\r\n          <EmojiSelect />\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\n'use strict';\n\nvar getDraftEditorSelectionWithNodes = require(\"./getDraftEditorSelectionWithNodes\");\n/**\r\n * Convert the current selection range to an anchor/focus pair of offset keys\r\n * and values that can be interpreted by components.\r\n */\n\n\nfunction getDraftEditorSelection(editorState, root) {\n  var selection = root.ownerDocument.defaultView.getSelection();\n  var anchorNode = selection.anchorNode,\n      anchorOffset = selection.anchorOffset,\n      focusNode = selection.focusNode,\n      focusOffset = selection.focusOffset,\n      rangeCount = selection.rangeCount;\n\n  if ( // No active selection.\n  rangeCount === 0 || // No selection, ever. As in, the user hasn't selected anything since\n  // opening the document.\n  anchorNode == null || focusNode == null) {\n    return {\n      selectionState: editorState.getSelection().set('hasFocus', false),\n      needsRecovery: false\n    };\n  }\n\n  return getDraftEditorSelectionWithNodes(editorState, root, anchorNode, anchorOffset, focusNode, focusOffset);\n}\n\nmodule.exports = getDraftEditorSelection;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/draft-js/lib/getDraftEditorSelection.js"],"names":["getDraftEditorSelectionWithNodes","require","getDraftEditorSelection","editorState","root","selection","ownerDocument","defaultView","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","rangeCount","selectionState","set","needsRecovery","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,gCAAgC,GAAGC,OAAO,CAAC,oCAAD,CAA9C;AACA;;;;;;AAMA,SAASC,uBAAT,CAAiCC,WAAjC,EAA8CC,IAA9C,EAAoD;AAClD,MAAIC,SAAS,GAAGD,IAAI,CAACE,aAAL,CAAmBC,WAAnB,CAA+BC,YAA/B,EAAhB;AACA,MAAIC,UAAU,GAAGJ,SAAS,CAACI,UAA3B;AAAA,MACIC,YAAY,GAAGL,SAAS,CAACK,YAD7B;AAAA,MAEIC,SAAS,GAAGN,SAAS,CAACM,SAF1B;AAAA,MAGIC,WAAW,GAAGP,SAAS,CAACO,WAH5B;AAAA,MAIIC,UAAU,GAAGR,SAAS,CAACQ,UAJ3B;;AAMA,OAAK;AACLA,EAAAA,UAAU,KAAK,CAAf,IAAoB;AACpB;AACAJ,EAAAA,UAAU,IAAI,IAFd,IAEsBE,SAAS,IAAI,IAHnC,EAGyC;AACvC,WAAO;AACLG,MAAAA,cAAc,EAAEX,WAAW,CAACK,YAAZ,GAA2BO,GAA3B,CAA+B,UAA/B,EAA2C,KAA3C,CADX;AAELC,MAAAA,aAAa,EAAE;AAFV,KAAP;AAID;;AAED,SAAOhB,gCAAgC,CAACG,WAAD,EAAcC,IAAd,EAAoBK,UAApB,EAAgCC,YAAhC,EAA8CC,SAA9C,EAAyDC,WAAzD,CAAvC;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBhB,uBAAjB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\r\n'use strict';\r\n\r\nvar getDraftEditorSelectionWithNodes = require(\"./getDraftEditorSelectionWithNodes\");\r\n/**\r\n * Convert the current selection range to an anchor/focus pair of offset keys\r\n * and values that can be interpreted by components.\r\n */\r\n\r\n\r\nfunction getDraftEditorSelection(editorState, root) {\r\n  var selection = root.ownerDocument.defaultView.getSelection();\r\n  var anchorNode = selection.anchorNode,\r\n      anchorOffset = selection.anchorOffset,\r\n      focusNode = selection.focusNode,\r\n      focusOffset = selection.focusOffset,\r\n      rangeCount = selection.rangeCount;\r\n\r\n  if ( // No active selection.\r\n  rangeCount === 0 || // No selection, ever. As in, the user hasn't selected anything since\r\n  // opening the document.\r\n  anchorNode == null || focusNode == null) {\r\n    return {\r\n      selectionState: editorState.getSelection().set('hasFocus', false),\r\n      needsRecovery: false\r\n    };\r\n  }\r\n\r\n  return getDraftEditorSelectionWithNodes(editorState, root, anchorNode, anchorOffset, focusNode, focusOffset);\r\n}\r\n\r\nmodule.exports = getDraftEditorSelection;"]},"metadata":{},"sourceType":"script"}
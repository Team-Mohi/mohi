{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\NewFeed\\\\Newfeed.jsx\";\nimport React, { useCallback, useRef, useState, useEffect } from 'react';\nimport { Layout } from 'antd';\nimport './NewFeed.css';\nimport { PostNewFeed } from './PostNewFeed.jsx';\nimport CreatePost from './CreatePost.jsx';\nimport Story from './Story.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport InfiniteScrolling from './InfiniteScrolling.jsx';\nimport { skeletonPostNewFeed } from './../../Skeleton/index.jsx';\n\nfunction NewFeed({\n  posts\n}) {\n  const {\n    Content\n  } = Layout;\n  const listPosts = useSelector(state => state.posts);\n  const [pageNumber, setPageNumber] = useState(1);\n  const {\n    loading,\n    error,\n    books,\n    hasMore\n  } = InfiniteScrolling(pageNumber);\n  const observer = useRef();\n  const lastNewFeed = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(nextPageNumber => nextPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  console.log(books);\n  return /*#__PURE__*/React.createElement(Content, {\n    className: \"pl-3 pr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreatePost, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Story, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), listPosts.map((post, index) => /*#__PURE__*/React.createElement(PostNewFeed, {\n    key: index,\n    post: post,\n    ref: lastNewFeed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 45\n    }\n  })), loading && skeletonPostNewFeed, error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"error\"));\n}\n\nexport default NewFeed;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/NewFeed/Newfeed.jsx"],"names":["React","useCallback","useRef","useState","useEffect","Layout","PostNewFeed","CreatePost","Story","useSelector","useDispatch","InfiniteScrolling","skeletonPostNewFeed","NewFeed","posts","Content","listPosts","state","pageNumber","setPageNumber","loading","error","books","hasMore","observer","lastNewFeed","node","current","disconnect","IntersectionObserver","entries","isIntersecting","nextPageNumber","observe","console","log","map","post","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,SAA9C,QAA8D,OAA9D;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAO,eAAP;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAUC,WAAV,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,SAAQC,mBAAR,QAAkC,4BAAlC;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4B;AAExB,QAAM;AAAEC,IAAAA;AAAF,MAAcV,MAApB;AACA,QAAMW,SAAS,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACH,KAAhB,CAA7B;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM;AAAEiB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,MAAqCZ,iBAAiB,CAACO,UAAD,CAA5D;AAEA,QAAMM,QAAQ,GAAGtB,MAAM,EAAvB;AACA,QAAMuB,WAAW,GAAGxB,WAAW,CAACyB,IAAI,IAAI;AACtC,QAAGN,OAAH,EAAY;AACV,QAAGI,QAAQ,CAACG,OAAZ,EAAqBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AACrBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAAyBC,OAAO,IAAI;AACrD,UAAGA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BR,OAAhC,EAAwC;AACtCJ,QAAAA,aAAa,CAACa,cAAc,IAAIA,cAAc,GAAG,CAApC,CAAb;AACD;AACF,KAJkB,CAAnB;AAKF,QAAGN,IAAH,EAASF,QAAQ,CAACG,OAAT,CAAiBM,OAAjB,CAAyBP,IAAzB;AACV,GAT8B,EAS5B,CAACN,OAAD,EAAUG,OAAV,CAT4B,CAA/B;AAWAW,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,sBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKN,SAAS,CAACoB,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBAAiB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,KAAlB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAqC,IAAA,GAAG,EAAEZ,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,CAHL,EAIKL,OAAO,IAAIR,mBAJhB,EAKKS,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALd,CADJ;AASH;;AAED,eAAeR,OAAf","sourcesContent":["import React, {useCallback, useRef, useState, useEffect} from 'react';\r\nimport { Layout } from 'antd';\r\nimport './NewFeed.css';\r\nimport {PostNewFeed} from './PostNewFeed.jsx';\r\nimport CreatePost from './CreatePost.jsx';\r\nimport Story from './Story.jsx';\r\nimport {  useSelector, useDispatch } from 'react-redux';\r\nimport InfiniteScrolling from './InfiniteScrolling.jsx';\r\nimport {skeletonPostNewFeed} from './../../Skeleton/index.jsx';\r\n\r\nfunction NewFeed({ posts }) {\r\n\r\n    const { Content } = Layout;\r\n    const listPosts = useSelector(state => state.posts);\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n    const { loading, error, books, hasMore } = InfiniteScrolling(pageNumber)\r\n\r\n    const observer = useRef();\r\n    const lastNewFeed = useCallback(node => {\r\n      if(loading) return\r\n        if(observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries => {\r\n          if(entries[0].isIntersecting && hasMore){\r\n            setPageNumber(nextPageNumber => nextPageNumber + 1)\r\n          }\r\n        })\r\n      if(node) observer.current.observe(node)\r\n    }, [loading, hasMore])\r\n\r\n    console.log(books);\r\n    return (\r\n        <Content className=\"pl-3 pr-3\">\r\n            <CreatePost />\r\n            <Story />\r\n            {listPosts.map((post, index) => <PostNewFeed key={index} post={post} ref={lastNewFeed}/>)}\r\n            {loading && skeletonPostNewFeed}\r\n            {error && <div>error</div>}\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default NewFeed;\r\n"]},"metadata":{},"sourceType":"module"}
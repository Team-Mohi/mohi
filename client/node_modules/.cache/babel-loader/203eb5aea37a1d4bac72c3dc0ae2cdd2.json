{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar decodeOffsetKey = function decodeOffsetKey(offsetKey) {\n  var _offsetKey$split = offsetKey.split('-'),\n      _offsetKey$split2 = _slicedToArray(_offsetKey$split, 3),\n      blockKey = _offsetKey$split2[0],\n      decoratorKey = _offsetKey$split2[1],\n      leafKey = _offsetKey$split2[2];\n\n  return {\n    blockKey: blockKey,\n    decoratorKey: parseInt(decoratorKey, 10),\n    leafKey: parseInt(leafKey, 10)\n  };\n};\n\nexports.default = decodeOffsetKey;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/draft-js-emoji-plugin/lib/utils/decodeOffsetKey.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","decodeOffsetKey","offsetKey","_offsetKey$split","split","_offsetKey$split2","blockKey","decoratorKey","leafKey","parseInt","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,cAAc,GAAG,YAAY;AAAE,WAASC,aAAT,CAAuBC,GAAvB,EAA4BC,CAA5B,EAA+B;AAAE,QAAIC,IAAI,GAAG,EAAX;AAAe,QAAIC,EAAE,GAAG,IAAT;AAAe,QAAIC,EAAE,GAAG,KAAT;AAAgB,QAAIC,EAAE,GAAGC,SAAT;;AAAoB,QAAI;AAAE,WAAK,IAAIC,EAAE,GAAGP,GAAG,CAACQ,MAAM,CAACC,QAAR,CAAH,EAAT,EAAiCC,EAAtC,EAA0C,EAAEP,EAAE,GAAG,CAACO,EAAE,GAAGH,EAAE,CAACI,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyET,EAAE,GAAG,IAA9E,EAAoF;AAAED,QAAAA,IAAI,CAACW,IAAL,CAAUH,EAAE,CAACb,KAAb;;AAAqB,YAAII,CAAC,IAAIC,IAAI,CAACY,MAAL,KAAgBb,CAAzB,EAA4B;AAAQ;AAAE,KAAvJ,CAAwJ,OAAOc,GAAP,EAAY;AAAEX,MAAAA,EAAE,GAAG,IAAL;AAAWC,MAAAA,EAAE,GAAGU,GAAL;AAAW,KAA5L,SAAqM;AAAE,UAAI;AAAE,YAAI,CAACZ,EAAD,IAAOI,EAAE,CAAC,QAAD,CAAb,EAAyBA,EAAE,CAAC,QAAD,CAAF;AAAiB,OAAhD,SAAyD;AAAE,YAAIH,EAAJ,EAAQ,MAAMC,EAAN;AAAW;AAAE;;AAAC,WAAOH,IAAP;AAAc;;AAAC,SAAO,UAAUF,GAAV,EAAeC,CAAf,EAAkB;AAAE,QAAIe,KAAK,CAACC,OAAN,CAAcjB,GAAd,CAAJ,EAAwB;AAAE,aAAOA,GAAP;AAAa,KAAvC,MAA6C,IAAIQ,MAAM,CAACC,QAAP,IAAmBf,MAAM,CAACM,GAAD,CAA7B,EAAoC;AAAE,aAAOD,aAAa,CAACC,GAAD,EAAMC,CAAN,CAApB;AAA+B,KAArE,MAA2E;AAAE,YAAM,IAAIiB,SAAJ,CAAc,sDAAd,CAAN;AAA8E;AAAE,GAArO;AAAwO,CAAhoB,EAArB;;AAEA,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,SAAzB,EAAoC;AACxD,MAAIC,gBAAgB,GAAGD,SAAS,CAACE,KAAV,CAAgB,GAAhB,CAAvB;AAAA,MACIC,iBAAiB,GAAGzB,cAAc,CAACuB,gBAAD,EAAmB,CAAnB,CADtC;AAAA,MAEIG,QAAQ,GAAGD,iBAAiB,CAAC,CAAD,CAFhC;AAAA,MAGIE,YAAY,GAAGF,iBAAiB,CAAC,CAAD,CAHpC;AAAA,MAIIG,OAAO,GAAGH,iBAAiB,CAAC,CAAD,CAJ/B;;AAMA,SAAO;AACLC,IAAAA,QAAQ,EAAEA,QADL;AAELC,IAAAA,YAAY,EAAEE,QAAQ,CAACF,YAAD,EAAe,EAAf,CAFjB;AAGLC,IAAAA,OAAO,EAAEC,QAAQ,CAACD,OAAD,EAAU,EAAV;AAHZ,GAAP;AAKD,CAZD;;AAcA9B,OAAO,CAACgC,OAAR,GAAkBT,eAAlB","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\r\n\r\nvar decodeOffsetKey = function decodeOffsetKey(offsetKey) {\r\n  var _offsetKey$split = offsetKey.split('-'),\r\n      _offsetKey$split2 = _slicedToArray(_offsetKey$split, 3),\r\n      blockKey = _offsetKey$split2[0],\r\n      decoratorKey = _offsetKey$split2[1],\r\n      leafKey = _offsetKey$split2[2];\r\n\r\n  return {\r\n    blockKey: blockKey,\r\n    decoratorKey: parseInt(decoratorKey, 10),\r\n    leafKey: parseInt(leafKey, 10)\r\n  };\r\n};\r\n\r\nexports.default = decodeOffsetKey;"]},"metadata":{},"sourceType":"script"}
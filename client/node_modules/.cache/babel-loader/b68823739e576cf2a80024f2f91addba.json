{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\Post\\\\CommentParent.jsx\";\nimport React, { useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { BsThreeDots } from \"react-icons/bs\";\nimport CommentChild from './CommentChild.jsx';\n\nfunction CommentParent(props) {\n  let comment = props.comment;\n  const inputCommentParentReplyRef = useRef();\n  let listChildComment = props.listChildComment;\n\n  const appendInputParentReply = () => {\n    let a = inputCommentParentReplyRef.current.children;\n    a.push('<div className=\"test\"></div>');\n    console.log(inputCommentParentReplyRef.current.children);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment-item-parent\",\n    ref: inputCommentParentReplyRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment-item-parent-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: comment.commentAvatar,\n    alt: comment.commentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment-item-parent-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment-item-parent-info-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, comment.commentUser)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment-item-parent-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, comment.commentContent), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BsThreeDots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment-item-parent-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: appendInputParentReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Tr\\u1EA3 l\\u1EDDi\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, comment.commentCreated)))), \"aaaaaaaaaaaaaaaaaaaaaa \", listChildComment.map((commentChild, indexChild) => {\n    if (commentChild.commentParentId === comment.id) {\n      return /*#__PURE__*/React.createElement(CommentChild, {\n        key: indexChild,\n        commentChild: commentChild,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      });\n    }\n  }));\n}\n\nexport default CommentParent;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Post/CommentParent.jsx"],"names":["React","useRef","Link","BsThreeDots","CommentChild","CommentParent","props","comment","inputCommentParentReplyRef","listChildComment","appendInputParentReply","a","current","children","push","console","log","commentAvatar","commentUser","commentContent","commentCreated","map","commentChild","indexChild","commentParentId","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAIC,OAAO,GAAGD,KAAK,CAACC,OAApB;AACA,QAAMC,0BAA0B,GAAGP,MAAM,EAAzC;AACA,MAAIQ,gBAAgB,GAAGH,KAAK,CAACG,gBAA7B;;AAEA,QAAMC,sBAAsB,GAAG,MAAM;AACnC,QAAIC,CAAC,GAAGH,0BAA0B,CAACI,OAA3B,CAAmCC,QAA3C;AACAF,IAAAA,CAAC,CAACG,IAAF,CAAO,8BAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,0BAA0B,CAACI,OAA3B,CAAmCC,QAA/C;AACD,GAJD;;AAMA,sBAAQ;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN;AAAK,IAAA,SAAS,EAAC,0BAAf;AAA0C,IAAA,GAAG,EAAEL,0BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAED,OAAO,CAACU,aAAlB;AAAiC,IAAA,GAAG,EAAEV,OAAO,CAACW,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaX,OAAO,CAACW,WAArB,CADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,OAAO,CAACY,cAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAM,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN,CAFF,CAJF,eAQE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,OAAO,EAAET,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,OAAO,CAACa,cAAf,CAFF,CARF,CANF,CADM,6BAsBJX,gBAAgB,CAACY,GAAjB,CAAqB,CAACC,YAAD,EAAeC,UAAf,KAA8B;AACjD,QAAID,YAAY,CAACE,eAAb,KAAiCjB,OAAO,CAACkB,EAA7C,EAAiD;AAC/C,0BAAQ,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEF,UAAnB;AAA+B,QAAA,YAAY,EAAED,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACD;AACF,GAJD,CAtBI,CAAR;AA6BD;;AAED,eAAejB,aAAf","sourcesContent":["import React, {useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {BsThreeDots} from \"react-icons/bs\";\r\nimport CommentChild from './CommentChild.jsx';\r\n\r\nfunction CommentParent(props) {\r\n  let comment = props.comment;\r\n  const inputCommentParentReplyRef = useRef();\r\n  let listChildComment = props.listChildComment;\r\n\r\n  const appendInputParentReply = () => {\r\n    let a = inputCommentParentReplyRef.current.children;\r\n    a.push('<div className=\"test\"></div>')\r\n    console.log(inputCommentParentReplyRef.current.children);\r\n  }\r\n\r\n  return (<div className=\"post-comment-item\">\r\n    <div className=\"post-comment-item-parent\" ref={inputCommentParentReplyRef}>\r\n      <div className=\"post-comment-item-parent-avatar\">\r\n        <Link to=\"\">\r\n          <img src={comment.commentAvatar} alt={comment.commentUser}/>\r\n        </Link>\r\n      </div>\r\n      <div className=\"post-comment-item-parent-info\">\r\n        <div className=\"post-comment-item-parent-info-user\">\r\n          <Link to=\"\">{comment.commentUser}</Link>\r\n        </div>\r\n        <div className=\"post-comment-item-parent-content\">\r\n          <p>{comment.commentContent}</p>\r\n          <span><BsThreeDots/></span>\r\n        </div>\r\n        <div className=\"post-comment-item-parent-action\">\r\n          <span onClick={appendInputParentReply}>Trả lời</span>\r\n          <span>{comment.commentCreated}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    aaaaaaaaaaaaaaaaaaaaaa {\r\n      listChildComment.map((commentChild, indexChild) => {\r\n        if (commentChild.commentParentId === comment.id) {\r\n          return (<CommentChild key={indexChild} commentChild={commentChild}/>)\r\n        }\r\n      })\r\n    }\r\n  </div>)\r\n}\r\n\r\nexport default CommentParent;\r\n"]},"metadata":{},"sourceType":"module"}
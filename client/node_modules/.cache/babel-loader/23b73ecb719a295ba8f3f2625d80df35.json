{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\n\nvar containsNode = require(\"./containsNode\");\n/**\r\n * Gets an element's bounding rect in pixels relative to the viewport.\r\n *\r\n * @param {DOMElement} elem\r\n * @return {object}\r\n */\n\n\nfunction getElementRect(elem) {\n  var docElem = elem.ownerDocument.documentElement; // FF 2, Safari 3 and Opera 9.5- do not support getBoundingClientRect().\n  // IE9- will throw if the element is not in the document.\n\n  if (!('getBoundingClientRect' in elem) || !containsNode(docElem, elem)) {\n    return {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n  } // Subtracts clientTop/Left because IE8- added a 2px border to the\n  // <html> element (see http://fburl.com/1493213). IE 7 in\n  // Quicksmode does not report clientLeft/clientTop so there\n  // will be an unaccounted offset of 2px when in quirksmode\n\n\n  var rect = elem.getBoundingClientRect();\n  return {\n    left: Math.round(rect.left) - docElem.clientLeft,\n    right: Math.round(rect.right) - docElem.clientLeft,\n    top: Math.round(rect.top) - docElem.clientTop,\n    bottom: Math.round(rect.bottom) - docElem.clientTop\n  };\n}\n\nmodule.exports = getElementRect;","map":{"version":3,"sources":["D:/mohi/mohi/client/node_modules/fbjs/lib/getElementRect.js"],"names":["containsNode","require","getElementRect","elem","docElem","ownerDocument","documentElement","left","right","top","bottom","rect","getBoundingClientRect","Math","round","clientLeft","clientTop","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;;AAQA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;AACA;;;;;;;;AAQA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,MAAIC,OAAO,GAAGD,IAAI,CAACE,aAAL,CAAmBC,eAAjC,CAD4B,CACsB;AAClD;;AAEA,MAAI,EAAE,2BAA2BH,IAA7B,KAAsC,CAACH,YAAY,CAACI,OAAD,EAAUD,IAAV,CAAvD,EAAwE;AACtE,WAAO;AACLI,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,KAAK,EAAE,CAFF;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILC,MAAAA,MAAM,EAAE;AAJH,KAAP;AAMD,GAX2B,CAW1B;AACF;AACA;AACA;;;AAGA,MAAIC,IAAI,GAAGR,IAAI,CAACS,qBAAL,EAAX;AACA,SAAO;AACLL,IAAAA,IAAI,EAAEM,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACJ,IAAhB,IAAwBH,OAAO,CAACW,UADjC;AAELP,IAAAA,KAAK,EAAEK,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACH,KAAhB,IAAyBJ,OAAO,CAACW,UAFnC;AAGLN,IAAAA,GAAG,EAAEI,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACF,GAAhB,IAAuBL,OAAO,CAACY,SAH/B;AAILN,IAAAA,MAAM,EAAEG,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACD,MAAhB,IAA0BN,OAAO,CAACY;AAJrC,GAAP;AAMD;;AAEDC,MAAM,CAACC,OAAP,GAAiBhB,cAAjB","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\r\nvar containsNode = require(\"./containsNode\");\r\n/**\r\n * Gets an element's bounding rect in pixels relative to the viewport.\r\n *\r\n * @param {DOMElement} elem\r\n * @return {object}\r\n */\r\n\r\n\r\nfunction getElementRect(elem) {\r\n  var docElem = elem.ownerDocument.documentElement; // FF 2, Safari 3 and Opera 9.5- do not support getBoundingClientRect().\r\n  // IE9- will throw if the element is not in the document.\r\n\r\n  if (!('getBoundingClientRect' in elem) || !containsNode(docElem, elem)) {\r\n    return {\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      bottom: 0\r\n    };\r\n  } // Subtracts clientTop/Left because IE8- added a 2px border to the\r\n  // <html> element (see http://fburl.com/1493213). IE 7 in\r\n  // Quicksmode does not report clientLeft/clientTop so there\r\n  // will be an unaccounted offset of 2px when in quirksmode\r\n\r\n\r\n  var rect = elem.getBoundingClientRect();\r\n  return {\r\n    left: Math.round(rect.left) - docElem.clientLeft,\r\n    right: Math.round(rect.right) - docElem.clientLeft,\r\n    top: Math.round(rect.top) - docElem.clientTop,\r\n    bottom: Math.round(rect.bottom) - docElem.clientTop\r\n  };\r\n}\r\n\r\nmodule.exports = getElementRect;"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\n'use strict';\n\nvar DraftOffsetKey = require(\"./DraftOffsetKey\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\nfunction getUpdatedSelectionState(editorState, anchorKey, anchorOffset, focusKey, focusOffset) {\n  var selection = nullthrows(editorState.getSelection());\n\n  if (!anchorKey || !focusKey) {\n    // If we cannot make sense of the updated selection state, stick to the current one.\n    if (process.env.NODE_ENV !== \"production\") {\n      /* eslint-disable-next-line */\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\n    }\n\n    return selection;\n  }\n\n  var anchorPath = DraftOffsetKey.decode(anchorKey);\n  var anchorBlockKey = anchorPath.blockKey;\n  var anchorLeafBlockTree = editorState.getBlockTree(anchorBlockKey);\n  var anchorLeaf = anchorLeafBlockTree && anchorLeafBlockTree.getIn([anchorPath.decoratorKey, 'leaves', anchorPath.leafKey]);\n  var focusPath = DraftOffsetKey.decode(focusKey);\n  var focusBlockKey = focusPath.blockKey;\n  var focusLeafBlockTree = editorState.getBlockTree(focusBlockKey);\n  var focusLeaf = focusLeafBlockTree && focusLeafBlockTree.getIn([focusPath.decoratorKey, 'leaves', focusPath.leafKey]);\n\n  if (!anchorLeaf || !focusLeaf) {\n    // If we cannot make sense of the updated selection state, stick to the current one.\n    if (process.env.NODE_ENV !== \"production\") {\n      /* eslint-disable-next-line */\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\n    }\n\n    return selection;\n  }\n\n  var anchorLeafStart = anchorLeaf.get('start');\n  var focusLeafStart = focusLeaf.get('start');\n  var anchorBlockOffset = anchorLeaf ? anchorLeafStart + anchorOffset : null;\n  var focusBlockOffset = focusLeaf ? focusLeafStart + focusOffset : null;\n  var areEqual = selection.getAnchorKey() === anchorBlockKey && selection.getAnchorOffset() === anchorBlockOffset && selection.getFocusKey() === focusBlockKey && selection.getFocusOffset() === focusBlockOffset;\n\n  if (areEqual) {\n    return selection;\n  }\n\n  var isBackward = false;\n\n  if (anchorBlockKey === focusBlockKey) {\n    var anchorLeafEnd = anchorLeaf.get('end');\n    var focusLeafEnd = focusLeaf.get('end');\n\n    if (focusLeafStart === anchorLeafStart && focusLeafEnd === anchorLeafEnd) {\n      isBackward = focusOffset < anchorOffset;\n    } else {\n      isBackward = focusLeafStart < anchorLeafStart;\n    }\n  } else {\n    var startKey = editorState.getCurrentContent().getBlockMap().keySeq().skipUntil(function (v) {\n      return v === anchorBlockKey || v === focusBlockKey;\n    }).first();\n    isBackward = startKey === focusBlockKey;\n  }\n\n  return selection.merge({\n    anchorKey: anchorBlockKey,\n    anchorOffset: anchorBlockOffset,\n    focusKey: focusBlockKey,\n    focusOffset: focusBlockOffset,\n    isBackward: isBackward\n  });\n}\n\nmodule.exports = getUpdatedSelectionState;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/draft-js/lib/getUpdatedSelectionState.js"],"names":["DraftOffsetKey","require","nullthrows","getUpdatedSelectionState","editorState","anchorKey","anchorOffset","focusKey","focusOffset","selection","getSelection","process","env","NODE_ENV","console","warn","arguments","toJS","anchorPath","decode","anchorBlockKey","blockKey","anchorLeafBlockTree","getBlockTree","anchorLeaf","getIn","decoratorKey","leafKey","focusPath","focusBlockKey","focusLeafBlockTree","focusLeaf","anchorLeafStart","get","focusLeafStart","anchorBlockOffset","focusBlockOffset","areEqual","getAnchorKey","getAnchorOffset","getFocusKey","getFocusOffset","isBackward","anchorLeafEnd","focusLeafEnd","startKey","getCurrentContent","getBlockMap","keySeq","skipUntil","v","first","merge","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AAEA,SAASE,wBAAT,CAAkCC,WAAlC,EAA+CC,SAA/C,EAA0DC,YAA1D,EAAwEC,QAAxE,EAAkFC,WAAlF,EAA+F;AAC7F,MAAIC,SAAS,GAAGP,UAAU,CAACE,WAAW,CAACM,YAAZ,EAAD,CAA1B;;AAEA,MAAI,CAACL,SAAD,IAAc,CAACE,QAAnB,EAA6B;AAC3B;AACA,QAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,0BAAb,EAAyCC,SAAzC,EAAoDZ,WAAW,CAACa,IAAZ,EAApD;AACD;;AAED,WAAOR,SAAP;AACD;;AAED,MAAIS,UAAU,GAAGlB,cAAc,CAACmB,MAAf,CAAsBd,SAAtB,CAAjB;AACA,MAAIe,cAAc,GAAGF,UAAU,CAACG,QAAhC;AACA,MAAIC,mBAAmB,GAAGlB,WAAW,CAACmB,YAAZ,CAAyBH,cAAzB,CAA1B;AACA,MAAII,UAAU,GAAGF,mBAAmB,IAAIA,mBAAmB,CAACG,KAApB,CAA0B,CAACP,UAAU,CAACQ,YAAZ,EAA0B,QAA1B,EAAoCR,UAAU,CAACS,OAA/C,CAA1B,CAAxC;AACA,MAAIC,SAAS,GAAG5B,cAAc,CAACmB,MAAf,CAAsBZ,QAAtB,CAAhB;AACA,MAAIsB,aAAa,GAAGD,SAAS,CAACP,QAA9B;AACA,MAAIS,kBAAkB,GAAG1B,WAAW,CAACmB,YAAZ,CAAyBM,aAAzB,CAAzB;AACA,MAAIE,SAAS,GAAGD,kBAAkB,IAAIA,kBAAkB,CAACL,KAAnB,CAAyB,CAACG,SAAS,CAACF,YAAX,EAAyB,QAAzB,EAAmCE,SAAS,CAACD,OAA7C,CAAzB,CAAtC;;AAEA,MAAI,CAACH,UAAD,IAAe,CAACO,SAApB,EAA+B;AAC7B;AACA,QAAIpB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAa,0BAAb,EAAyCC,SAAzC,EAAoDZ,WAAW,CAACa,IAAZ,EAApD;AACD;;AAED,WAAOR,SAAP;AACD;;AAED,MAAIuB,eAAe,GAAGR,UAAU,CAACS,GAAX,CAAe,OAAf,CAAtB;AACA,MAAIC,cAAc,GAAGH,SAAS,CAACE,GAAV,CAAc,OAAd,CAArB;AACA,MAAIE,iBAAiB,GAAGX,UAAU,GAAGQ,eAAe,GAAG1B,YAArB,GAAoC,IAAtE;AACA,MAAI8B,gBAAgB,GAAGL,SAAS,GAAGG,cAAc,GAAG1B,WAApB,GAAkC,IAAlE;AACA,MAAI6B,QAAQ,GAAG5B,SAAS,CAAC6B,YAAV,OAA6BlB,cAA7B,IAA+CX,SAAS,CAAC8B,eAAV,OAAgCJ,iBAA/E,IAAoG1B,SAAS,CAAC+B,WAAV,OAA4BX,aAAhI,IAAiJpB,SAAS,CAACgC,cAAV,OAA+BL,gBAA/L;;AAEA,MAAIC,QAAJ,EAAc;AACZ,WAAO5B,SAAP;AACD;;AAED,MAAIiC,UAAU,GAAG,KAAjB;;AAEA,MAAItB,cAAc,KAAKS,aAAvB,EAAsC;AACpC,QAAIc,aAAa,GAAGnB,UAAU,CAACS,GAAX,CAAe,KAAf,CAApB;AACA,QAAIW,YAAY,GAAGb,SAAS,CAACE,GAAV,CAAc,KAAd,CAAnB;;AAEA,QAAIC,cAAc,KAAKF,eAAnB,IAAsCY,YAAY,KAAKD,aAA3D,EAA0E;AACxED,MAAAA,UAAU,GAAGlC,WAAW,GAAGF,YAA3B;AACD,KAFD,MAEO;AACLoC,MAAAA,UAAU,GAAGR,cAAc,GAAGF,eAA9B;AACD;AACF,GATD,MASO;AACL,QAAIa,QAAQ,GAAGzC,WAAW,CAAC0C,iBAAZ,GAAgCC,WAAhC,GAA8CC,MAA9C,GAAuDC,SAAvD,CAAiE,UAAUC,CAAV,EAAa;AAC3F,aAAOA,CAAC,KAAK9B,cAAN,IAAwB8B,CAAC,KAAKrB,aAArC;AACD,KAFc,EAEZsB,KAFY,EAAf;AAGAT,IAAAA,UAAU,GAAGG,QAAQ,KAAKhB,aAA1B;AACD;;AAED,SAAOpB,SAAS,CAAC2C,KAAV,CAAgB;AACrB/C,IAAAA,SAAS,EAAEe,cADU;AAErBd,IAAAA,YAAY,EAAE6B,iBAFO;AAGrB5B,IAAAA,QAAQ,EAAEsB,aAHW;AAIrBrB,IAAAA,WAAW,EAAE4B,gBAJQ;AAKrBM,IAAAA,UAAU,EAAEA;AALS,GAAhB,CAAP;AAOD;;AAEDW,MAAM,CAACC,OAAP,GAAiBnD,wBAAjB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\r\n'use strict';\r\n\r\nvar DraftOffsetKey = require(\"./DraftOffsetKey\");\r\n\r\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\r\n\r\nfunction getUpdatedSelectionState(editorState, anchorKey, anchorOffset, focusKey, focusOffset) {\r\n  var selection = nullthrows(editorState.getSelection());\r\n\r\n  if (!anchorKey || !focusKey) {\r\n    // If we cannot make sense of the updated selection state, stick to the current one.\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      /* eslint-disable-next-line */\r\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\r\n    }\r\n\r\n    return selection;\r\n  }\r\n\r\n  var anchorPath = DraftOffsetKey.decode(anchorKey);\r\n  var anchorBlockKey = anchorPath.blockKey;\r\n  var anchorLeafBlockTree = editorState.getBlockTree(anchorBlockKey);\r\n  var anchorLeaf = anchorLeafBlockTree && anchorLeafBlockTree.getIn([anchorPath.decoratorKey, 'leaves', anchorPath.leafKey]);\r\n  var focusPath = DraftOffsetKey.decode(focusKey);\r\n  var focusBlockKey = focusPath.blockKey;\r\n  var focusLeafBlockTree = editorState.getBlockTree(focusBlockKey);\r\n  var focusLeaf = focusLeafBlockTree && focusLeafBlockTree.getIn([focusPath.decoratorKey, 'leaves', focusPath.leafKey]);\r\n\r\n  if (!anchorLeaf || !focusLeaf) {\r\n    // If we cannot make sense of the updated selection state, stick to the current one.\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      /* eslint-disable-next-line */\r\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\r\n    }\r\n\r\n    return selection;\r\n  }\r\n\r\n  var anchorLeafStart = anchorLeaf.get('start');\r\n  var focusLeafStart = focusLeaf.get('start');\r\n  var anchorBlockOffset = anchorLeaf ? anchorLeafStart + anchorOffset : null;\r\n  var focusBlockOffset = focusLeaf ? focusLeafStart + focusOffset : null;\r\n  var areEqual = selection.getAnchorKey() === anchorBlockKey && selection.getAnchorOffset() === anchorBlockOffset && selection.getFocusKey() === focusBlockKey && selection.getFocusOffset() === focusBlockOffset;\r\n\r\n  if (areEqual) {\r\n    return selection;\r\n  }\r\n\r\n  var isBackward = false;\r\n\r\n  if (anchorBlockKey === focusBlockKey) {\r\n    var anchorLeafEnd = anchorLeaf.get('end');\r\n    var focusLeafEnd = focusLeaf.get('end');\r\n\r\n    if (focusLeafStart === anchorLeafStart && focusLeafEnd === anchorLeafEnd) {\r\n      isBackward = focusOffset < anchorOffset;\r\n    } else {\r\n      isBackward = focusLeafStart < anchorLeafStart;\r\n    }\r\n  } else {\r\n    var startKey = editorState.getCurrentContent().getBlockMap().keySeq().skipUntil(function (v) {\r\n      return v === anchorBlockKey || v === focusBlockKey;\r\n    }).first();\r\n    isBackward = startKey === focusBlockKey;\r\n  }\r\n\r\n  return selection.merge({\r\n    anchorKey: anchorBlockKey,\r\n    anchorOffset: anchorBlockOffset,\r\n    focusKey: focusBlockKey,\r\n    focusOffset: focusBlockOffset,\r\n    isBackward: isBackward\r\n  });\r\n}\r\n\r\nmodule.exports = getUpdatedSelectionState;"]},"metadata":{},"sourceType":"script"}
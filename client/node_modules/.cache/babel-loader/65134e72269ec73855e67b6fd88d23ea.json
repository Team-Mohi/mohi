{"ast":null,"code":"import { useState, useEffect } from \"react\";\n\nfunction useWindowSize() {\n  const isWindowClient = typeof window === \"object\";\n  const [windowSize, setWindowSize] = useState(isWindowClient ? window.innerHeight : undefined); //üëá\n\n  useEffect(() => {\n    //a handler which will be called on change of the screen resize\n    function setSize() {\n      setWindowSize(window.innerHeight);\n    }\n\n    if (isWindowClient) {\n      //register the window resize listener\n      window.addEventListener(\"resize\", setSize); //un-register the listener\n\n      return () => window.removeEventListener(\"resize\", setSize);\n    }\n  }, [isWindowClient, setWindowSize]); //‚òùÔ∏è\n\n  return windowSize;\n}\n\nexport default useWindowSize;","map":{"version":3,"sources":["D:/mohi/mohi/client/src/Components/Messenger/useWindowSize.jsx"],"names":["useState","useEffect","useWindowSize","isWindowClient","window","windowSize","setWindowSize","innerHeight","undefined","setSize","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,aAAT,GAAyB;AACvB,QAAMC,cAAc,GAAG,OAAOC,MAAP,KAAkB,QAAzC;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAC1CG,cAAc,GAAGC,MAAM,CAACG,WAAV,GAAwBC,SADI,CAA5C,CAHuB,CAOvB;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,aAASQ,OAAT,GAAmB;AACjBH,MAAAA,aAAa,CAACF,MAAM,CAACG,WAAR,CAAb;AACD;;AAED,QAAIJ,cAAJ,EAAoB;AAClB;AACAC,MAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCD,OAAlC,EAFkB,CAIlB;;AACA,aAAO,MAAML,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCF,OAArC,CAAb;AACD;AACF,GAbQ,EAaN,CAACN,cAAD,EAAiBG,aAAjB,CAbM,CAAT,CARuB,CAsBvB;;AAEA,SAAOD,UAAP;AACD;;AAED,eAAeH,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction useWindowSize() {\r\n  const isWindowClient = typeof window === \"object\";\r\n\r\n  const [windowSize, setWindowSize] = useState(\r\n    isWindowClient ? window.innerHeight : undefined\r\n  );\r\n\r\n  //üëá\r\n  useEffect(() => {\r\n    //a handler which will be called on change of the screen resize\r\n    function setSize() {\r\n      setWindowSize(window.innerHeight);\r\n    }\r\n\r\n    if (isWindowClient) {\r\n      //register the window resize listener\r\n      window.addEventListener(\"resize\", setSize);\r\n\r\n      //un-register the listener\r\n      return () => window.removeEventListener(\"resize\", setSize);\r\n    }\r\n  }, [isWindowClient, setWindowSize]);\r\n  //‚òùÔ∏è\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n"]},"metadata":{},"sourceType":"module"}
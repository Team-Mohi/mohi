{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Containers\\\\LoginContainer.jsx\";\nimport React, { useState } from 'react';\nimport Login from './../app/Authen/Login.jsx';\nimport axios from 'axios';\nimport { API_LOGIN } from './../Constants/Api.jsx';\nimport { useHistory } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { toggleStatusSpin } from './../Actions/index.jsx';\n\nvar CryptoJS = require(\"crypto-js\");\n\nexport default function LoginContainer(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [errorLogin, setErrorLogin] = useState();\n\n  const sendVeriCode = async data => {\n    await axios.post('/api/resend-otp', data).then(response => {\n      console.log(response);\n      return response;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const setLoginFunc = async data => {\n    dispatch(toggleStatusSpin());\n    await axios.post('api/auth/login', data).then(res => {\n      props.setLoginFunc(res);\n    }).catch(err => {\n      if (err) {\n        console.log(err.response);\n\n        if (err.response.status === 301) {\n          sendVeriCode({\n            action: 'register',\n            user_email: JSON.parse(err.response.config.data).user_email\n          }).then(response => {\n            console.log(response);\n          }); //\n          // let code = CryptoJS.AES.encrypt(JSON.stringify(897263), 'code_veri').toString();\n          // let message = \"Chúng tôi đã gửi mã \";\n          // history.push('/register/step-2', {\n          //   message: message,\n          //   code: code\n          // });\n        }\n\n        if (err.response.status === 401) {\n          setErrorLogin(err.response ? err.response.data : '');\n          history.push('/login');\n        }\n      }\n    });\n    dispatch(toggleStatusSpin());\n  };\n\n  return /*#__PURE__*/React.createElement(Login, {\n    setLoginFunc: setLoginFunc,\n    errorLogin: errorLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["D:/Web/mohi/client/src/Containers/LoginContainer.jsx"],"names":["React","useState","Login","axios","API_LOGIN","useHistory","Route","useDispatch","toggleStatusSpin","CryptoJS","require","LoginContainer","props","dispatch","history","errorLogin","setErrorLogin","sendVeriCode","data","post","then","response","console","log","catch","error","setLoginFunc","res","err","status","action","user_email","JSON","parse","config","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC3C,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,EAA5C;;AAEA,QAAMgB,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnC,UAAMf,KAAK,CAACgB,IAAN,CAAW,iBAAX,EAA8BD,IAA9B,EAAoCE,IAApC,CAA0CC,QAAD,IAAc;AAC3DC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAOA,QAAP;AACD,KAHK,EAGHG,KAHG,CAGIC,KAAD,IAAW;AAClBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KALK,CAAN;AAMD,GAPD;;AASA,QAAMC,YAAY,GAAG,MAAOR,IAAP,IAAgB;AACnCL,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AAEA,UAAML,KAAK,CAACgB,IAAN,CAAW,gBAAX,EAA6BD,IAA7B,EAAmCE,IAAnC,CAAyCO,GAAD,IAAS;AACrDf,MAAAA,KAAK,CAACc,YAAN,CAAmBC,GAAnB;AACD,KAFK,EAEHH,KAFG,CAEII,GAAD,IAAS;AAChB,UAAGA,GAAH,EAAO;AACLN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACP,QAAhB;;AACA,YAAGO,GAAG,CAACP,QAAJ,CAAaQ,MAAb,KAAwB,GAA3B,EAA+B;AAC7BZ,UAAAA,YAAY,CAAC;AACXa,YAAAA,MAAM,EAAE,UADG;AAEXC,YAAAA,UAAU,EAAEC,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACP,QAAJ,CAAaa,MAAb,CAAoBhB,IAA/B,EAAqCa;AAFtC,WAAD,CAAZ,CAGGX,IAHH,CAGSC,QAAD,IAAc;AACpBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,WALD,EAD6B,CAO7B;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,YAAGO,GAAG,CAACP,QAAJ,CAAaQ,MAAb,KAAwB,GAA3B,EAA+B;AAC7Bb,UAAAA,aAAa,CAACY,GAAG,CAACP,QAAJ,GAAeO,GAAG,CAACP,QAAJ,CAAaH,IAA5B,GAAmC,EAApC,CAAb;AACAJ,UAAAA,OAAO,CAACqB,IAAR,CAAa,QAAb;AACD;AAEF;AACF,KA3BK,CAAN;AA4BAtB,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD,GAhCD;;AAmCA,sBACI,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEkB,YAArB;AAAmC,IAAA,UAAU,EAAEX,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGD","sourcesContent":["import React, {useState} from 'react';\r\nimport Login from './../app/Authen/Login.jsx';\r\nimport axios from 'axios';\r\nimport {API_LOGIN} from './../Constants/Api.jsx';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Route} from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleStatusSpin } from './../Actions/index.jsx';\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nexport default function LoginContainer(props){\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n  const [errorLogin, setErrorLogin] = useState();\r\n\r\n  const sendVeriCode = async (data) => {\r\n    await axios.post('/api/resend-otp', data).then((response) => {\r\n      console.log(response);\r\n      return response\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const setLoginFunc = async (data) => {\r\n    dispatch(toggleStatusSpin())\r\n\r\n    await axios.post('api/auth/login', data).then((res) => {\r\n      props.setLoginFunc(res)\r\n    }).catch((err) => {\r\n      if(err){\r\n        console.log(err.response);\r\n        if(err.response.status === 301){\r\n          sendVeriCode({\r\n            action: 'register',\r\n            user_email: JSON.parse(err.response.config.data).user_email\r\n          }).then((response) => {\r\n            console.log(response);\r\n          })\r\n          //\r\n          // let code = CryptoJS.AES.encrypt(JSON.stringify(897263), 'code_veri').toString();\r\n          // let message = \"Chúng tôi đã gửi mã \";\r\n          // history.push('/register/step-2', {\r\n          //   message: message,\r\n          //   code: code\r\n          // });\r\n        }\r\n\r\n        if(err.response.status === 401){\r\n          setErrorLogin(err.response ? err.response.data : '')\r\n          history.push('/login')\r\n        }\r\n\r\n      }\r\n    });\r\n    dispatch(toggleStatusSpin())\r\n  }\r\n\r\n\r\n  return(\r\n      <Login setLoginFunc={setLoginFunc} errorLogin={errorLogin} />\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
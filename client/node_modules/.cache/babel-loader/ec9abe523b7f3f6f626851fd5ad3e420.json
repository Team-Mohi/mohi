{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\NewFeed\\\\EditorMention.jsx\";\nimport 'draft-js-mention-plugin/lib/plugin.css';\nimport style from 'styled-components';\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport Editor from 'draft-js-plugins-editor';\nimport createMentionPlugin, { defaultSuggestionsFilter } from 'draft-js-mention-plugin';\nimport editorStyles from './editorStyles.css';\nimport { connect } from 'react-redux';\nconst mentions = [];\nconst StyleEditorMention = style.div`\n  width: 100%;\n  max-height: 200px;\n  overflow-y: auto;\n  font-size: 14px;\n  padding: 5px 10px;\n  margin-top: 10px;\n  border: 0.5px solid rgba(0,0,0,0.1);\n  border-radius:30px;\n`;\n\nclass SimpleMentionEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      suggestions: mentions,\n      listMention: []\n    };\n\n    this.onChange = editorState => {\n      this.setState({\n        editorState\n      });\n      let currentContent = editorState.getCurrentContent();\n      let raw = convertToRaw(currentContent);\n      this.props.showMentionList(raw.entityMap);\n    };\n\n    this.onSearchChange = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: defaultSuggestionsFilter(value, mentions)\n      });\n    };\n\n    this.mentionPlugin = createMentionPlugin({\n      mentions,\n      entityMutability: 'IMMUTABLE',\n      supportWhitespace: true\n    });\n  }\n\n  componentDidMount() {\n    this.props.friends.map(mention => {\n      mentions.push({\n        name: mention.user_last_name + ' ' + mention.user_first_name,\n        link: '/profile/' + mention.user_username,\n        avatar: mention.user_avatar,\n        id: mention.id\n      });\n    });\n  }\n\n  //\n  // onAddMention = (mention) => {\n  //   this.props.showMentionList(mention);\n  // }\n  render() {\n    const {\n      MentionSuggestions\n    } = this.mentionPlugin;\n    const plugins = [this.mentionPlugin];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: editorStyles.editor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyleEditorMention, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      editorState: this.state.editorState,\n      onChange: this.onChange,\n      plugins: plugins,\n      placeholder: \"G\\u1EAFn th\\u1EBB ai \\u0111\\xF3...\",\n      ref: element => {\n        this.editor = element;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(MentionSuggestions, {\n      onSearchChange: this.onSearchChange,\n      suggestions: this.state.suggestions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  friends: state.friends.list\n});\n\nexport default connect(mapStateToProps, null)(SimpleMentionEditor);","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/NewFeed/EditorMention.jsx"],"names":["style","React","Component","EditorState","convertToRaw","Editor","createMentionPlugin","defaultSuggestionsFilter","editorStyles","connect","mentions","StyleEditorMention","div","SimpleMentionEditor","constructor","props","state","editorState","createEmpty","suggestions","listMention","onChange","setState","currentContent","getCurrentContent","raw","showMentionList","entityMap","onSearchChange","value","mentionPlugin","entityMutability","supportWhitespace","componentDidMount","friends","map","mention","push","name","user_last_name","user_first_name","link","user_username","avatar","user_avatar","id","render","MentionSuggestions","plugins","editor","element","mapStateToProps","list"],"mappings":"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","sourcesContent":["import 'draft-js-mention-plugin/lib/plugin.css';\nimport style from 'styled-components';\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport Editor from 'draft-js-plugins-editor';\nimport createMentionPlugin, { defaultSuggestionsFilter } from 'draft-js-mention-plugin';\nimport editorStyles from './editorStyles.css';\nimport { connect } from 'react-redux';\n\nconst mentions = [];\n\nconst StyleEditorMention = style.div`\n  width: 100%;\n  max-height: 200px;\n  overflow-y: auto;\n  font-size: 14px;\n  padding: 5px 10px;\n  margin-top: 10px;\n  border: 0.5px solid rgba(0,0,0,0.1);\n  border-radius:30px;\n`;\n\n class SimpleMentionEditor extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.mentionPlugin = createMentionPlugin({\n      mentions,\n      entityMutability: 'IMMUTABLE',\n      supportWhitespace: true\n    });\n  }\n\n  componentDidMount(){\n    this.props.friends.map((mention) => {\n      mentions.push({\n        name: mention.user_last_name + ' ' + mention.user_first_name,\n        link: '/profile/' + mention.user_username,\n        avatar: mention.user_avatar,\n        id: mention.id\n      });\n    })\n  }\n\n  state = {\n    editorState: EditorState.createEmpty(),\n    suggestions: mentions,\n    listMention: []\n  };\n\n  onChange = (editorState) => {\n    this.setState({\n      editorState,\n    });\n\n    let currentContent = editorState .getCurrentContent();\n    let raw = convertToRaw(currentContent);\n    this.props.showMentionList(raw.entityMap);\n  };\n\n  onSearchChange = ({ value }) => {\n    this.setState({\n      suggestions: defaultSuggestionsFilter(value, mentions),\n    });\n  };\n  //\n  // onAddMention = (mention) => {\n  //   this.props.showMentionList(mention);\n  // }\n\n  render() {\n    const { MentionSuggestions } = this.mentionPlugin;\n    const plugins = [this.mentionPlugin];\n\n    return (\n      <div className={editorStyles.editor}>\n        <StyleEditorMention>\n          <Editor\n            editorState={this.state.editorState}\n            onChange={this.onChange}\n            plugins={plugins}\n            placeholder=\"Gắn thẻ ai đó...\"\n            ref={(element) => { this.editor = element; }}\n          />\n        </StyleEditorMention>\n        <MentionSuggestions\n          onSearchChange={this.onSearchChange}\n          suggestions={this.state.suggestions}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  friends: state.friends.list,\n});\n\nexport default connect(mapStateToProps, null)(SimpleMentionEditor)\n"]},"metadata":{},"sourceType":"module"}
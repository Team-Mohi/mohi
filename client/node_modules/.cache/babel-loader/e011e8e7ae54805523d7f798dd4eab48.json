{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\NewFeed\\\\EditorEmoji.jsx\";\nimport React, { Component } from \"react\";\nimport Editor, { createEditorStateWithText } from \"draft-js-plugins-editor\";\nimport createEmojiPlugin from \"draft-js-emoji-plugin\";\nimport \"draft-js-emoji-plugin/lib/plugin.css\";\nimport style from 'styled-components';\nimport './EditorEmoji.css';\nimport { convertToRaw, EditorState, ContentState } from \"draft-js\";\nconst emojiPlugin = createEmojiPlugin({\n  useNativeArt: true\n});\nconst {\n  EmojiSuggestions,\n  EmojiSelect\n} = emojiPlugin;\nconst plugins = [emojiPlugin];\nconst text = ``;\nconst StyleEditor = style.div`\n  width: 475px;\n  max-height: 200px;\n  overflow-y: auto;\n  margin-left: 10px;\n  font-size: 14px;\n`;\nexport default class CustomEmojiEditor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editorState: createEditorStateWithText(text)\n    };\n\n    this.onChange = editorState => {\n      this.setState({\n        editorState\n      });\n      this.props.changeStatusButtonSubmit(editorState.getCurrentContent().getPlainText());\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.showModalCreatePost) {\n      this.editor.focus();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.statusCreatePost !== this.props.statusCreatePost) {\n      if (nextProps.statusCreatePost === 'success') {\n        const editorState = EditorState.push(this.state.editorState, ContentState.createFromText(''));\n        this.setState({\n          editorState\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyleEditor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      editorState: this.state.editorState,\n      onChange: this.onChange,\n      plugins: plugins,\n      placeholder: \"Vi\\u1EBFt b\\xE0i d\\xEC \\u0111\\xF3...\",\n      ref: element => {\n        this.editor = element;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(EmojiSuggestions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), this.props.showModalCreatePost ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-post-reaction\",\n      style: {\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EmojiSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    })) : null);\n  }\n\n}","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/NewFeed/EditorEmoji.jsx"],"names":["React","Component","Editor","createEditorStateWithText","createEmojiPlugin","style","convertToRaw","EditorState","ContentState","emojiPlugin","useNativeArt","EmojiSuggestions","EmojiSelect","plugins","text","StyleEditor","div","CustomEmojiEditor","state","editorState","onChange","setState","props","changeStatusButtonSubmit","getCurrentContent","getPlainText","componentDidMount","showModalCreatePost","editor","focus","componentWillReceiveProps","nextProps","statusCreatePost","push","createFromText","render","element","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,yBAAjB,QAAkD,yBAAlD;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,mBAAP;AACA,SAAQC,YAAR,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAsD,UAAtD;AAEA,MAAMC,WAAW,GAAGL,iBAAiB,CAAC;AACpCM,EAAAA,YAAY,EAAE;AADsB,CAAD,CAArC;AAGA,MAAM;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,IAAoCH,WAA1C;AACA,MAAMI,OAAO,GAAG,CAACJ,WAAD,CAAhB;AACA,MAAMK,IAAI,GAAI,EAAd;AAEA,MAAMC,WAAW,GAAGV,KAAK,CAACW,GAAI;;;;;;CAA9B;AAOA,eAAe,MAAMC,iBAAN,SAAgChB,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACrDiB,KADqD,GAC7C;AACNC,MAAAA,WAAW,EAAEhB,yBAAyB,CAACW,IAAD;AADhC,KAD6C;;AAAA,SAoBvDM,QApBuD,GAoB3CD,WAAD,IAAiB;AAC1B,WAAKE,QAAL,CAAc;AACZF,QAAAA;AADY,OAAd;AAGA,WAAKG,KAAL,CAAWC,wBAAX,CAAoCJ,WAAW,CAACK,iBAAZ,GAAgCC,YAAhC,EAApC;AACD,KAzBsD;AAAA;;AAKvDC,EAAAA,iBAAiB,GAAE;AACjB,QAAG,KAAKJ,KAAL,CAAWK,mBAAd,EAAkC;AAChC,WAAKC,MAAL,CAAYC,KAAZ;AACD;AACF;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAClC,QAAGA,SAAS,CAACC,gBAAV,KAA+B,KAAKV,KAAL,CAAWU,gBAA7C,EAA8D;AAC5D,UAAGD,SAAS,CAACC,gBAAV,KAA+B,SAAlC,EAA4C;AAC1C,cAAMb,WAAW,GAAGZ,WAAW,CAAC0B,IAAZ,CAAiB,KAAKf,KAAL,CAAWC,WAA5B,EAAyCX,YAAY,CAAC0B,cAAb,CAA4B,EAA5B,CAAzC,CAApB;AACA,aAAKb,QAAL,CAAc;AAAEF,UAAAA;AAAF,SAAd;AACD;AACF;AACF;;AASDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,KAAKjB,KAAL,CAAWC,WAD1B;AAEE,MAAA,QAAQ,EAAE,KAAKC,QAFjB;AAGE,MAAA,OAAO,EAAEP,OAHX;AAIE,MAAA,WAAW,EAAC,sCAJd;AAKE,MAAA,GAAG,EAAGuB,OAAD,IAAa;AAChB,aAAKR,MAAL,GAAcQ,OAAd;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAYI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAaG,KAAKd,KAAL,CAAWK,mBAAX,gBACC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,KAAK,EAAE;AAACU,QAAAA,SAAS,EAAE;AAAZ,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,GAIA,IAjBH,CADF;AAqBD;;AAjDsD","sourcesContent":["import React, { Component } from \"react\";\r\nimport Editor, { createEditorStateWithText } from \"draft-js-plugins-editor\";\r\nimport createEmojiPlugin from \"draft-js-emoji-plugin\";\r\nimport \"draft-js-emoji-plugin/lib/plugin.css\";\r\nimport style from 'styled-components';\r\nimport './EditorEmoji.css';\r\nimport {convertToRaw, EditorState, ContentState} from \"draft-js\";\r\n\r\nconst emojiPlugin = createEmojiPlugin({\r\n  useNativeArt: true\r\n});\r\nconst { EmojiSuggestions, EmojiSelect } = emojiPlugin;\r\nconst plugins = [emojiPlugin];\r\nconst text = ``;\r\n\r\nconst StyleEditor = style.div`\r\n  width: 475px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n`;\r\nexport default class CustomEmojiEditor extends Component {\r\n    state = {\r\n      editorState: createEditorStateWithText(text)\r\n    };\r\n\r\n  componentDidMount(){\r\n    if(this.props.showModalCreatePost){\r\n      this.editor.focus();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.statusCreatePost !== this.props.statusCreatePost){\r\n      if(nextProps.statusCreatePost === 'success'){\r\n        const editorState = EditorState.push(this.state.editorState, ContentState.createFromText(''));\r\n        this.setState({ editorState });\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange = (editorState) => {\r\n    this.setState({\r\n      editorState\r\n    });\r\n    this.props.changeStatusButtonSubmit(editorState.getCurrentContent().getPlainText());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <StyleEditor>\r\n          <Editor\r\n            editorState={this.state.editorState}\r\n            onChange={this.onChange}\r\n            plugins={plugins}\r\n            placeholder=\"Viết bài dì đó...\"\r\n            ref={(element) => {\r\n              this.editor = element;\r\n            }}\r\n          />\r\n        </StyleEditor>\r\n          <EmojiSuggestions />\r\n        {this.props.showModalCreatePost ?\r\n          <div className=\"create-post-reaction\" style={{textAlign: 'right'}}>\r\n            <EmojiSelect />\r\n          </div>\r\n        :null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
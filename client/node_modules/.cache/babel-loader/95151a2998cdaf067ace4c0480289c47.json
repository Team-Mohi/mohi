{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Containers\\\\NewFeedContainer.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport NewFeed from './../Components/NewFeed/Newfeed.jsx';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchPosts } from './../Actions/index.jsx';\nimport { responsePosts } from './../Actions/index.jsx';\nimport { fetchMorePosts } from './../Actions/index.jsx';\nimport { responseMorePosts } from './../Actions/index.jsx';\nimport { responseAddComment } from './../Actions/index.jsx';\nimport { requestAddComment } from './../Actions/index.jsx';\n\nfunction NewFeedContainer({\n  posts\n}) {\n  const {\n    currentPage\n  } = useSelector(state => state.posts);\n  const pageDefault = 1;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPosts());\n    getPostNewFeedFirst();\n  }, []);\n  useEffect(() => {\n    if (currentPage > 1) {\n      dispatch(fetchMorePosts());\n      getPostNewFeedInfinite();\n    }\n  }, [currentPage]);\n\n  const getPostNewFeedFirst = () => {\n    axios({\n      method: 'GET',\n      url: \"/api/auth/get-post-home\",\n      params: {\n        page: pageDefault\n      }\n    }).then(res => {\n      dispatch(responsePosts(res.data));\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n    });\n  };\n\n  const getPostNewFeedInfinite = () => {\n    axios({\n      method: 'GET',\n      url: \"/api/auth/get-post-home\",\n      params: {\n        page: currentPage\n      }\n    }).then(res => {\n      dispatch(responseMorePosts(res.data));\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n    });\n  };\n\n  const sendReactionPost = async (reaction, postId) => {\n    if (reaction === 'unlike') {\n      console.log(reaction, postId);\n    } else {\n      await axios.post('/api/auth/create-action', {\n        actions_PostId: postId,\n        actions_action: reaction\n      }).then(res => {\n        console.log(res);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  };\n\n  const onSubmitComment = async (value, idPost) => {\n    dispatch(requestAddComment());\n    await axios.post('/api/auth/create-comment', {\n      comment_PostId: idPost,\n      comment_Content: value,\n      comment_Type: 'parent'\n    }).then(res => {\n      dispatch(responseAddComment(res.data));\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const loadingSendRequestSetting = (type, idPost, idUser) => {\n    props.loadingSendRequestSetting(type, idPost, idUser);\n  };\n\n  return /*#__PURE__*/React.createElement(NewFeed, {\n    sendReactionPost: sendReactionPost,\n    onSubmitComment: onSubmitComment,\n    loadingSendRequestSetting: loadingSendRequestSetting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default NewFeedContainer;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Containers/NewFeedContainer.jsx"],"names":["React","useEffect","useState","NewFeed","axios","useSelector","useDispatch","fetchPosts","responsePosts","fetchMorePosts","responseMorePosts","responseAddComment","requestAddComment","NewFeedContainer","posts","currentPage","state","pageDefault","dispatch","getPostNewFeedFirst","getPostNewFeedInfinite","method","url","params","page","then","res","data","catch","e","isCancel","sendReactionPost","reaction","postId","console","log","post","actions_PostId","actions_action","onSubmitComment","value","idPost","comment_PostId","comment_Content","comment_Type","loadingSendRequestSetting","type","idUser","props"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport NewFeed from './../Components/NewFeed/Newfeed.jsx';\r\nimport axios from 'axios';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { fetchPosts } from './../Actions/index.jsx';\r\nimport { responsePosts } from './../Actions/index.jsx';\r\nimport { fetchMorePosts } from './../Actions/index.jsx';\r\nimport { responseMorePosts } from './../Actions/index.jsx';\r\nimport { responseAddComment } from './../Actions/index.jsx';\r\nimport { requestAddComment } from './../Actions/index.jsx';\r\n\r\nfunction NewFeedContainer({posts}){\r\n  const { currentPage } = useSelector(state => state.posts);\r\n  const pageDefault = 1;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPosts())\r\n    getPostNewFeedFirst();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(currentPage > 1){\r\n      dispatch(fetchMorePosts())\r\n      getPostNewFeedInfinite();\r\n    }\r\n  }, [currentPage])\r\n\r\n  const getPostNewFeedFirst = () => {\r\n        axios({\r\n          method: 'GET',\r\n          url: \"/api/auth/get-post-home\",\r\n          params: {page : pageDefault}\r\n        })\r\n        .then(res =>{\r\n          dispatch(responsePosts(res.data))\r\n        })\r\n        .catch(e => {\r\n          if(axios.isCancel(e)) return\r\n        })\r\n  }\r\n\r\n  const getPostNewFeedInfinite = () => {\r\n        axios({\r\n          method: 'GET',\r\n          url: \"/api/auth/get-post-home\",\r\n          params: {page : currentPage}\r\n        })\r\n        .then(res =>{\r\n          dispatch(responseMorePosts(res.data))\r\n        })\r\n        .catch(e => {\r\n          if(axios.isCancel(e)) return\r\n        })\r\n  }\r\n\r\n  const sendReactionPost = async (reaction, postId) => {\r\n    if(reaction === 'unlike'){\r\n      console.log(reaction, postId);\r\n    }else {\r\n      await axios.post('/api/auth/create-action', {actions_PostId: postId, actions_action: reaction}).then((res) => {\r\n        console.log(res);\r\n      }).catch((e) => {\r\n        console.log(e);\r\n      })\r\n    }\r\n  }\r\n\r\n  const onSubmitComment = async (value, idPost) => {\r\n    dispatch(requestAddComment())\r\n\r\n    await axios.post('/api/auth/create-comment', {comment_PostId: idPost, comment_Content: value, comment_Type: 'parent'})\r\n    .then((res) => {\r\n      dispatch(responseAddComment(res.data))\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  const loadingSendRequestSetting = (type, idPost, idUser) => {\r\n    props.loadingSendRequestSetting(type, idPost, idUser)\r\n  }\r\n\r\n  return(\r\n    <NewFeed sendReactionPost={sendReactionPost} onSubmitComment={onSubmitComment} loadingSendRequestSetting={loadingSendRequestSetting}/>\r\n  )\r\n}\r\nexport default NewFeedContainer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\PresentialModal\\\\ModalViewStory.jsx\";\nimport React, { useState } from 'react';\nimport './ModalViewStory.css';\nimport { useSelector } from 'react-redux';\nimport { Image, Transformation } from 'cloudinary-react';\nimport { AiFillCaretLeft, AiFillCaretRight } from \"react-icons/ai\";\n\nfunction ModalViewStory({\n  presentialModal\n}) {\n  const {\n    data\n  } = useSelector(state => state.presentialModal);\n  const [currentStory, setCurrentStory] = useState(data.activeIndex);\n  console.log(data);\n\n  const setCurrentStoryFunc = (type, index) => {\n    if (type === 'next') {\n      setCurrentStory(currentStory + 1);\n    }\n\n    if (type === 'prev') {\n      setCurrentStory(currentStory - 1);\n    }\n\n    if (type === 'choose') {\n      setCurrentStory(index);\n    }\n  };\n\n  const StoryItem = props => {\n    const setCurrentStoryFunc = () => {\n      props.setCurrentStoryFunc('choose', props.indexMap);\n    };\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: props.activeIndex === props.indexMap ? \"active-story modal-story-item\" : \"modal-story-item\",\n      onClick: setCurrentStoryFunc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"story-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, props.st.user_avatar_cropX === null ? /*#__PURE__*/React.createElement(\"img\", {\n      src: props.st.user_avatar,\n      alt: props.st.user_last_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(Image, {\n      cloudName: \"mohi-vn\",\n      publicId: props.st.user_avatar + \".jpg\",\n      version: \"1607061343\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Transformation, {\n      height: props.st.user_avatar_cropH,\n      width: props.st.user_avatar_cropW,\n      x: props.st.user_avatar_cropX,\n      y: props.st.user_avatar_cropY,\n      crop: \"crop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"story-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, props.st.user_first_name + ' ' + props.st.user_last_name))));\n  };\n\n  const StoryItemImage = props => {\n    const [currentImg, setCurrentImg] = useState(0);\n    const lastStory = data.list[props.activeIndex].list_story.length;\n\n    const prevStory = () => {\n      if (currentImg < lastStory - 1) {\n        setCurrentImg(currentImg - 1);\n      } else {\n        props.setCurrentStoryFunc('prev');\n      }\n    };\n\n    const nextStory = () => {\n      if (currentImg < lastStory - 1) {\n        setCurrentImg(currentImg + 1);\n      } else {\n        props.setCurrentStoryFunc('next');\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-story-item-image-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"story-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"story-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, data.list[props.activeIndex].user_avatar_cropX === null ? /*#__PURE__*/React.createElement(\"img\", {\n      src: data.list[props.activeIndex].user_avatar,\n      alt: data.list[props.activeIndex].user_last_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(Image, {\n      cloudName: \"mohi-vn\",\n      publicId: data.list[props.activeIndex].user_avatar + \".jpg\",\n      version: \"1607061343\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Transformation, {\n      height: data.list[props.activeIndex].user_avatar_cropH,\n      width: data.list[props.activeIndex].user_avatar_cropW,\n      x: data.list[props.activeIndex].user_avatar_cropX,\n      y: data.list[props.activeIndex].user_avatar_cropY,\n      crop: \"crop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"story-name\",\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, data.list[props.activeIndex].user_first_name + ' ' + data.list[props.activeIndex].user_last_name)), data.list[props.activeIndex].list_story[currentImg].story_ImageUrl && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 86\n      }\n    }, data.list[props.activeIndex].list_story[currentImg].story_Content)), props.activeIndex > 0 || currentImg > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"preview-story\",\n      onClick: prevStory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AiFillCaretLeft, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-story\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, data.list[props.activeIndex].list_story[currentImg].story_ImageUrl ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: data.list[props.activeIndex].list_story[currentImg].story_ImageUrl,\n      alt: data.list[props.activeIndex].user_last_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, data.list[props.activeIndex].list_story[currentImg].story_Content)), props.activeIndex < data.list.length - 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"next-story\",\n      onClick: nextStory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AiFillCaretRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-story-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-story-item-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Tin trong ng\\xE0y\"), data.list.map((st, index) => {\n    return /*#__PURE__*/React.createElement(StoryItem, {\n      st: st,\n      key: index,\n      activeIndex: currentStory,\n      indexMap: index,\n      setCurrentStoryFunc: setCurrentStoryFunc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    });\n  })), /*#__PURE__*/React.createElement(StoryItemImage, {\n    activeIndex: currentStory,\n    setCurrentStoryFunc: setCurrentStoryFunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default ModalViewStory;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/PresentialModal/ModalViewStory.jsx"],"names":["React","useState","useSelector","Image","Transformation","AiFillCaretLeft","AiFillCaretRight","ModalViewStory","presentialModal","data","state","currentStory","setCurrentStory","activeIndex","console","log","setCurrentStoryFunc","type","index","StoryItem","props","indexMap","st","user_avatar_cropX","user_avatar","user_last_name","user_avatar_cropH","user_avatar_cropW","user_avatar_cropY","user_first_name","StoryItemImage","currentImg","setCurrentImg","lastStory","list","list_story","length","prevStory","nextStory","color","story_ImageUrl","story_Content","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './ModalViewStory.css';\r\nimport { useSelector } from 'react-redux';\r\nimport {Image,Transformation} from 'cloudinary-react';\r\nimport { AiFillCaretLeft, AiFillCaretRight } from \"react-icons/ai\";\r\n\r\nfunction ModalViewStory({ presentialModal }){\r\n  const {data} = useSelector(state => state.presentialModal);\r\n  const [currentStory, setCurrentStory] = useState(data.activeIndex);\r\n  console.log(data);\r\n\r\n  const setCurrentStoryFunc = (type, index) => {\r\n    if(type === 'next'){\r\n      setCurrentStory(currentStory + 1)\r\n    }\r\n    if(type === 'prev'){\r\n      setCurrentStory(currentStory - 1)\r\n    }\r\n    if(type === 'choose'){\r\n      setCurrentStory(index)\r\n    }\r\n  }\r\n\r\n  const StoryItem = (props) => {\r\n\r\n    const setCurrentStoryFunc = () => {\r\n      props.setCurrentStoryFunc('choose', props.indexMap);\r\n    }\r\n\r\n      return(\r\n        <React.Fragment>\r\n          <div className={props.activeIndex === props.indexMap ? \"active-story modal-story-item\" : \"modal-story-item\"} onClick={setCurrentStoryFunc}>\r\n            <div className=\"story-avatar\">\r\n              {props.st.user_avatar_cropX === null ?\r\n                <img src={props.st.user_avatar} alt={props.st.user_last_name} />\r\n                :\r\n                <Image cloudName=\"mohi-vn\" publicId={props.st.user_avatar+ \".jpg\"} version=\"1607061343\">\r\n                  <Transformation height={props.st.user_avatar_cropH}  width={props.st.user_avatar_cropW} x={props.st.user_avatar_cropX} y={props.st.user_avatar_cropY} crop=\"crop\" />\r\n                </Image>\r\n              }\r\n            </div>\r\n            <div className=\"story-name\">\r\n              <span>{props.st.user_first_name + ' ' + props.st.user_last_name}</span>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n  }\r\n\r\n  const StoryItemImage = (props) => {\r\n\r\n      const [currentImg, setCurrentImg] = useState(0);\r\n      const lastStory = data.list[props.activeIndex].list_story.length;\r\n      const prevStory = () => {\r\n        if(currentImg < lastStory - 1){\r\n          setCurrentImg(currentImg-1)\r\n        }else {\r\n          props.setCurrentStoryFunc('prev')\r\n        }\r\n      }\r\n\r\n      const nextStory = () => {\r\n\r\n        if(currentImg < lastStory - 1){\r\n          setCurrentImg(currentImg + 1)\r\n        }else {\r\n          props.setCurrentStoryFunc('next')\r\n        }\r\n      }\r\n\r\n      return(\r\n        <React.Fragment>\r\n\r\n          <div className=\"modal-story-item-image-container\">\r\n            <div className=\"story-info\">\r\n              <div className=\"story-avatar\">\r\n                {data.list[props.activeIndex].user_avatar_cropX === null ?\r\n                  <img src={data.list[props.activeIndex].user_avatar} alt={data.list[props.activeIndex].user_last_name} />\r\n                  :\r\n                  <Image cloudName=\"mohi-vn\" publicId={data.list[props.activeIndex].user_avatar+ \".jpg\"} version=\"1607061343\">\r\n                    <Transformation height={data.list[props.activeIndex].user_avatar_cropH}  width={data.list[props.activeIndex].user_avatar_cropW} x={data.list[props.activeIndex].user_avatar_cropX} y={data.list[props.activeIndex].user_avatar_cropY} crop=\"crop\" />\r\n                  </Image>\r\n                }\r\n              </div>\r\n              <div className=\"story-name\" style={{color: 'white'}}>\r\n                <span>{data.list[props.activeIndex].user_first_name + ' ' + data.list[props.activeIndex].user_last_name}</span>\r\n              </div>\r\n              {data.list[props.activeIndex].list_story[currentImg].story_ImageUrl && <p>{data.list[props.activeIndex].list_story[currentImg].story_Content}</p>}\r\n            </div>\r\n              {props.activeIndex > 0 || currentImg > 0 ?\r\n                <div className=\"preview-story\" onClick={prevStory}>\r\n                  <AiFillCaretLeft />\r\n                </div>\r\n              : null}\r\n              <div className=\"content-story\">\r\n                {data.list[props.activeIndex].list_story[currentImg].story_ImageUrl ?\r\n                  <React.Fragment>\r\n                    <img\r\n                      src={data.list[props.activeIndex].list_story[currentImg].story_ImageUrl}\r\n                      alt={data.list[props.activeIndex].user_last_name}\r\n                    />\r\n                  </React.Fragment>\r\n                  :\r\n                  <p>{data.list[props.activeIndex].list_story[currentImg].story_Content}</p>\r\n                }\r\n              </div>\r\n              {props.activeIndex < data.list.length - 1 &&\r\n                <div className=\"next-story\" onClick={nextStory}>\r\n                  <AiFillCaretRight />\r\n                </div>\r\n              }\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      <div className=\"modal-story-container\">\r\n        <div className=\"modal-story-item-container\">\r\n          <h5>Tin trong ngày</h5>\r\n          {data.list.map((st, index) => {\r\n            return(\r\n              <StoryItem st={st} key={index} activeIndex={currentStory} indexMap={index} setCurrentStoryFunc={setCurrentStoryFunc}/>\r\n            )\r\n          })}\r\n        </div>\r\n        <StoryItemImage activeIndex={currentStory} setCurrentStoryFunc={setCurrentStoryFunc}/>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ModalViewStory;\r\n"]},"metadata":{},"sourceType":"module"}
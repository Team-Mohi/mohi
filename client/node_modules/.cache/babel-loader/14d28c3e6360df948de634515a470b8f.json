{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Containers\\\\CreatePostContainer.jsx\";\nimport React, { useState } from 'react';\nimport CreatePost from './../Components/NewFeed/CreatePost.jsx';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { addNewStory } from './../Actions/index.jsx';\n\nfunction CreatePostContainer(props) {\n  const [statusCreatePost, setStatusCreatePost] = useState();\n  const dispatch = useDispatch();\n\n  const submitCreatePost = async (valueEditor, fileList, privacyNewFeed, privacyStory, placeNewFeed, placeStory, listMention) => {\n    setStatusCreatePost('loading');\n    let mention = [];\n    listMention.map(m => {\n      mention.push(m.data.mention.id);\n    });\n    let tags = mention.filter((value, index, mention) => mention.indexOf(value) === index);\n    let tag = tags.toString();\n    let data = {\n      placeStory: placeStory,\n      placePost: placeNewFeed,\n      post_Content: valueEditor,\n      post_Privacy: privacyNewFeed,\n      tag_users_UserId: tag,\n      story_Privacy: privacyStory,\n      post_images_Url: fileList\n    };\n    await axios.post('https://www.api.mohi.vn/api/auth/create-post-profile', data).then(res => {\n      setStatusCreatePost('success');\n      props.successCreatePost(res.data);\n\n      if (res.data.newStory.length) {\n        axios.get(\"https://www.api.mohi.vn/api/auth/get-story-home\").then(res => {\n          dispatch(addNewStory(res.data));\n        });\n      }\n    }).catch(e => {\n      setStatusCreatePost('error');\n      props.errorCreatePost();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(CreatePost, {\n    submitCreatePost: submitCreatePost,\n    statusCreatePost: statusCreatePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default CreatePostContainer;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Containers/CreatePostContainer.jsx"],"names":["React","useState","CreatePost","axios","useDispatch","addNewStory","CreatePostContainer","props","statusCreatePost","setStatusCreatePost","dispatch","submitCreatePost","valueEditor","fileList","privacyNewFeed","privacyStory","placeNewFeed","placeStory","listMention","mention","map","m","push","data","id","tags","filter","value","index","indexOf","tag","toString","placePost","post_Content","post_Privacy","tag_users_UserId","story_Privacy","post_images_Url","post","then","res","successCreatePost","newStory","length","get","catch","e","errorCreatePost"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAmC;AACjC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,EAAxD;AACA,QAAMS,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,gBAAgB,GAAG,OAAOC,WAAP,EAAoBC,QAApB,EAA8BC,cAA9B,EAA8CC,YAA9C,EAA4DC,YAA5D,EAA0EC,UAA1E,EAAsFC,WAAtF,KAAsG;AAC7HT,IAAAA,mBAAmB,CAAC,SAAD,CAAnB;AACA,QAAIU,OAAO,GAAG,EAAd;AACAD,IAAAA,WAAW,CAACE,GAAZ,CAAgBC,CAAC,IAAI;AACnBF,MAAAA,OAAO,CAACG,IAAR,CAAaD,CAAC,CAACE,IAAF,CAAOJ,OAAP,CAAeK,EAA5B;AACD,KAFD;AAGA,QAAIC,IAAI,GAAGN,OAAO,CAACO,MAAR,CAAe,CAACC,KAAD,EAAQC,KAAR,EAAeT,OAAf,KAA2BA,OAAO,CAACU,OAAR,CAAgBF,KAAhB,MAA2BC,KAArE,CAAX;AACA,QAAIE,GAAG,GAAGL,IAAI,CAACM,QAAL,EAAV;AAEA,QAAIR,IAAI,GAAG;AACTN,MAAAA,UAAU,EAAEA,UADH;AAETe,MAAAA,SAAS,EAAEhB,YAFF;AAGTiB,MAAAA,YAAY,EAAErB,WAHL;AAITsB,MAAAA,YAAY,EAAEpB,cAJL;AAKTqB,MAAAA,gBAAgB,EAAEL,GALT;AAMTM,MAAAA,aAAa,EAAErB,YANN;AAOTsB,MAAAA,eAAe,EAAExB;AAPR,KAAX;AASA,UAAMV,KAAK,CAACmC,IAAN,CAAW,sDAAX,EAAmEf,IAAnE,EAAyEgB,IAAzE,CAA+EC,GAAD,IAAS;AAC3F/B,MAAAA,mBAAmB,CAAC,SAAD,CAAnB;AACAF,MAAAA,KAAK,CAACkC,iBAAN,CAAwBD,GAAG,CAACjB,IAA5B;;AACA,UAAGiB,GAAG,CAACjB,IAAJ,CAASmB,QAAT,CAAkBC,MAArB,EAA4B;AAC1BxC,QAAAA,KAAK,CAACyC,GAAN,CAAU,iDAAV,EACCL,IADD,CACOC,GAAD,IAAS;AACb9B,UAAAA,QAAQ,CAACL,WAAW,CAACmC,GAAG,CAACjB,IAAL,CAAZ,CAAR;AACD,SAHD;AAID;AACF,KATK,EASHsB,KATG,CASIC,CAAD,IAAO;AACdrC,MAAAA,mBAAmB,CAAC,OAAD,CAAnB;AACAF,MAAAA,KAAK,CAACwC,eAAN;AACD,KAZK,CAAN;AAaD,GA/BD;;AAiCA,sBACE,oBAAC,UAAD;AAAY,IAAA,gBAAgB,EAAEpC,gBAA9B;AAAgD,IAAA,gBAAgB,EAAEH,gBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AAED,eAAeF,mBAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport CreatePost from './../Components/NewFeed/CreatePost.jsx';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewStory } from './../Actions/index.jsx';\r\n\r\nfunction CreatePostContainer(props){\r\n  const [statusCreatePost, setStatusCreatePost] = useState();\r\n  const dispatch = useDispatch();\r\n\r\n  const submitCreatePost = async (valueEditor, fileList, privacyNewFeed, privacyStory, placeNewFeed, placeStory, listMention) => {\r\n    setStatusCreatePost('loading')\r\n    let mention = [];\r\n    listMention.map(m => {\r\n      mention.push(m.data.mention.id)\r\n    })\r\n    let tags = mention.filter((value, index, mention) => mention.indexOf(value) === index);\r\n    let tag = tags.toString();\r\n\r\n    let data = {\r\n      placeStory: placeStory,\r\n      placePost: placeNewFeed,\r\n      post_Content: valueEditor,\r\n      post_Privacy: privacyNewFeed,\r\n      tag_users_UserId: tag,\r\n      story_Privacy: privacyStory,\r\n      post_images_Url: fileList\r\n    }\r\n    await axios.post('https://www.api.mohi.vn/api/auth/create-post-profile', data).then((res) => {\r\n      setStatusCreatePost('success')\r\n      props.successCreatePost(res.data)\r\n      if(res.data.newStory.length){\r\n        axios.get(\"https://www.api.mohi.vn/api/auth/get-story-home\")\r\n        .then((res) => {\r\n          dispatch(addNewStory(res.data))\r\n        })\r\n      }\r\n    }).catch((e) => {\r\n      setStatusCreatePost('error')\r\n      props.errorCreatePost()\r\n    })\r\n  }\r\n\r\n  return(\r\n    <CreatePost submitCreatePost={submitCreatePost} statusCreatePost={statusCreatePost}/>\r\n  )\r\n}\r\n\r\nexport default CreatePostContainer;\r\n"]},"metadata":{},"sourceType":"module"}
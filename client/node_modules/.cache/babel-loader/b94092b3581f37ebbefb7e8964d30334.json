{"ast":null,"code":"import axios from'axios';import{API_REFRESH_TOKEN}from'./../Constants/Api.jsx';function IsJsonString(str){try{JSON.parse(str);}catch(e){return false;}return true;}var ustk=IsJsonString(localStorage.getItem('ustk'))?JSON.parse(localStorage.getItem('ustk')):'';var currentToken=ustk?ustk.access_token:'';if(!currentToken){localStorage.removeItem('ustk');}else{axios.interceptors.request.use(function(config){var token=localStorage.getItem('ustk')?JSON.parse(localStorage.getItem('ustk')).access_token:'';if(token){config.headers['Authorization']='Bearer '+token;}return config;},function(error){Promise.reject(error);});var isRefreshing=false;var failedQueue=[];var processQueue=function processQueue(error){var token=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;failedQueue.forEach(function(prom){if(error){prom.reject(error);}else{prom.resolve(token);}});failedQueue=[];};axios.interceptors.response.use(function(response){return response;},function(error){var originalRequest=error.config;if(error.response&&error.response.status===401&&!originalRequest._retry){if(isRefreshing){return new Promise(function(resolve,reject){failedQueue.push({resolve:resolve,reject:reject});}).then(function(token){originalRequest.headers['Authorization']='Bearer '+token;return axios(originalRequest);}).catch(function(err){return Promise.reject(err);});}originalRequest._retry=true;isRefreshing=true;return new Promise(function(resolve,reject){axios.post(API_REFRESH_TOKEN,{'token':JSON.parse(localStorage.getItem('ustk')).access_token}).then(function(res){if(res.status===200){localStorage.setItem('ustk',JSON.stringify(res.data));var new_token=JSON.parse(localStorage.getItem('ustk')).access_token;processQueue(null,res.data.access_token);axios.defaults.headers.common['Authorization']='Bearer '+new_token;originalRequest.headers['Authorization']='Bearer '+new_token;resolve(axios(originalRequest));}}).then(function(){isRefreshing=false;});});}return Promise.reject(error);});}","map":{"version":3,"sources":["D:/Web/mohi/client/src/axios/inceptor.jsx"],"names":["axios","API_REFRESH_TOKEN","IsJsonString","str","JSON","parse","e","ustk","localStorage","getItem","currentToken","access_token","removeItem","interceptors","request","use","config","token","headers","error","Promise","reject","isRefreshing","failedQueue","processQueue","forEach","prom","resolve","response","originalRequest","status","_retry","push","then","catch","err","post","res","setItem","stringify","data","new_token","defaults","common"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {API_REFRESH_TOKEN} from './../Constants/Api.jsx';\r\n\r\nfunction IsJsonString(str) {\r\n  try {\r\n      JSON.parse(str);\r\n  } catch (e) {\r\n      return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nlet ustk = IsJsonString(localStorage.getItem('ustk')) ? JSON.parse(localStorage.getItem('ustk')) : '';\r\nlet currentToken = ustk ? ustk.access_token : '';\r\n\r\nif(!currentToken){\r\n  localStorage.removeItem('ustk');\r\n}else{\r\n  axios.interceptors.request.use(\r\n     config => {\r\n        const token = localStorage.getItem('ustk') ? JSON.parse(localStorage.getItem('ustk')).access_token: '';\r\n         if (token) {\r\n             config.headers['Authorization'] = 'Bearer ' + token;\r\n         }\r\n         return config;\r\n     },\r\n     error => {\r\n         Promise.reject(error)\r\n   });\r\n\r\n   let isRefreshing = false;\r\n   let failedQueue = [];\r\n\r\n   const processQueue = (error, token = null) => {\r\n     failedQueue.forEach(prom => {\r\n       if (error) {\r\n         prom.reject(error);\r\n       } else {\r\n         prom.resolve(token);\r\n       }\r\n     })\r\n\r\n     failedQueue = [];\r\n   }\r\n\r\n  axios.interceptors.response.use((response) => {\r\n     return response\r\n  },\r\n  function (error) {\r\n     const originalRequest = error.config;\r\n     if (error.response && error.response.status === 401 && !originalRequest._retry) {\r\n\r\n       if (isRefreshing) {\r\n          return new Promise(function(resolve, reject) {\r\n            failedQueue.push({resolve, reject})\r\n          }).then(token => {\r\n            originalRequest.headers['Authorization'] = 'Bearer ' + token;\r\n            return axios(originalRequest);\r\n          }).catch(err => {\r\n            return Promise.reject(err);\r\n          })\r\n        }\r\n\r\n         originalRequest._retry = true;\r\n         isRefreshing = true;\r\n         return new Promise(function (resolve, reject) {\r\n           axios.post(API_REFRESH_TOKEN,\r\n               {\r\n                   'token' : JSON.parse(localStorage.getItem('ustk')).access_token\r\n               })\r\n               .then((res) => {\r\n                   if (res.status === 200) {\r\n                       localStorage.setItem('ustk', JSON.stringify(res.data));\r\n                       let new_token = JSON.parse(localStorage.getItem('ustk')).access_token;\r\n                       processQueue(null, res.data.access_token);\r\n                       axios.defaults.headers.common['Authorization'] = 'Bearer ' + new_token;\r\n                       originalRequest.headers['Authorization'] = 'Bearer ' + new_token;\r\n                       resolve(axios(originalRequest));\r\n                   }\r\n               })\r\n               .then(() => { isRefreshing = false })\r\n          })\r\n     }\r\n     return Promise.reject(error);\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
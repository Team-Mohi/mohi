{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\n'use strict';\n\nvar warning = require(\"fbjs/lib/warning\");\n/**\r\n * Given a collapsed selection, move the focus `maxDistance` backward within\r\n * the selected block. If the selection will go beyond the start of the block,\r\n * move focus to the end of the previous block, but no further.\r\n *\r\n * This function is not Unicode-aware, so surrogate pairs will be treated\r\n * as having length 2.\r\n */\n\n\nfunction moveSelectionBackward(editorState, maxDistance) {\n  var selection = editorState.getSelection(); // Should eventually make this an invariant\n\n  process.env.NODE_ENV !== \"production\" ? warning(selection.isCollapsed(), 'moveSelectionBackward should only be called with a collapsed SelectionState') : void 0;\n  var content = editorState.getCurrentContent();\n  var key = selection.getStartKey();\n  var offset = selection.getStartOffset();\n  var focusKey = key;\n  var focusOffset = 0;\n\n  if (maxDistance > offset) {\n    var keyBefore = content.getKeyBefore(key);\n\n    if (keyBefore == null) {\n      focusKey = key;\n    } else {\n      focusKey = keyBefore;\n      var blockBefore = content.getBlockForKey(keyBefore);\n      focusOffset = blockBefore.getText().length;\n    }\n  } else {\n    focusOffset = offset - maxDistance;\n  }\n\n  return selection.merge({\n    focusKey: focusKey,\n    focusOffset: focusOffset,\n    isBackward: true\n  });\n}\n\nmodule.exports = moveSelectionBackward;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/draft-js/lib/moveSelectionBackward.js"],"names":["warning","require","moveSelectionBackward","editorState","maxDistance","selection","getSelection","process","env","NODE_ENV","isCollapsed","content","getCurrentContent","key","getStartKey","offset","getStartOffset","focusKey","focusOffset","keyBefore","getKeyBefore","blockBefore","getBlockForKey","getText","length","merge","isBackward","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,kBAAD,CAArB;AACA;;;;;;;;;;AAUA,SAASC,qBAAT,CAA+BC,WAA/B,EAA4CC,WAA5C,EAAyD;AACvD,MAAIC,SAAS,GAAGF,WAAW,CAACG,YAAZ,EAAhB,CADuD,CACX;;AAE5CC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,OAAO,CAACK,SAAS,CAACK,WAAV,EAAD,EAA0B,6EAA1B,CAA/C,GAA0J,KAAK,CAA/J;AACA,MAAIC,OAAO,GAAGR,WAAW,CAACS,iBAAZ,EAAd;AACA,MAAIC,GAAG,GAAGR,SAAS,CAACS,WAAV,EAAV;AACA,MAAIC,MAAM,GAAGV,SAAS,CAACW,cAAV,EAAb;AACA,MAAIC,QAAQ,GAAGJ,GAAf;AACA,MAAIK,WAAW,GAAG,CAAlB;;AAEA,MAAId,WAAW,GAAGW,MAAlB,EAA0B;AACxB,QAAII,SAAS,GAAGR,OAAO,CAACS,YAAR,CAAqBP,GAArB,CAAhB;;AAEA,QAAIM,SAAS,IAAI,IAAjB,EAAuB;AACrBF,MAAAA,QAAQ,GAAGJ,GAAX;AACD,KAFD,MAEO;AACLI,MAAAA,QAAQ,GAAGE,SAAX;AACA,UAAIE,WAAW,GAAGV,OAAO,CAACW,cAAR,CAAuBH,SAAvB,CAAlB;AACAD,MAAAA,WAAW,GAAGG,WAAW,CAACE,OAAZ,GAAsBC,MAApC;AACD;AACF,GAVD,MAUO;AACLN,IAAAA,WAAW,GAAGH,MAAM,GAAGX,WAAvB;AACD;;AAED,SAAOC,SAAS,CAACoB,KAAV,CAAgB;AACrBR,IAAAA,QAAQ,EAAEA,QADW;AAErBC,IAAAA,WAAW,EAAEA,WAFQ;AAGrBQ,IAAAA,UAAU,EAAE;AAHS,GAAhB,CAAP;AAKD;;AAEDC,MAAM,CAACC,OAAP,GAAiB1B,qBAAjB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n * @emails oncall+draft_js\r\n */\r\n'use strict';\r\n\r\nvar warning = require(\"fbjs/lib/warning\");\r\n/**\r\n * Given a collapsed selection, move the focus `maxDistance` backward within\r\n * the selected block. If the selection will go beyond the start of the block,\r\n * move focus to the end of the previous block, but no further.\r\n *\r\n * This function is not Unicode-aware, so surrogate pairs will be treated\r\n * as having length 2.\r\n */\r\n\r\n\r\nfunction moveSelectionBackward(editorState, maxDistance) {\r\n  var selection = editorState.getSelection(); // Should eventually make this an invariant\r\n\r\n  process.env.NODE_ENV !== \"production\" ? warning(selection.isCollapsed(), 'moveSelectionBackward should only be called with a collapsed SelectionState') : void 0;\r\n  var content = editorState.getCurrentContent();\r\n  var key = selection.getStartKey();\r\n  var offset = selection.getStartOffset();\r\n  var focusKey = key;\r\n  var focusOffset = 0;\r\n\r\n  if (maxDistance > offset) {\r\n    var keyBefore = content.getKeyBefore(key);\r\n\r\n    if (keyBefore == null) {\r\n      focusKey = key;\r\n    } else {\r\n      focusKey = keyBefore;\r\n      var blockBefore = content.getBlockForKey(keyBefore);\r\n      focusOffset = blockBefore.getText().length;\r\n    }\r\n  } else {\r\n    focusOffset = offset - maxDistance;\r\n  }\r\n\r\n  return selection.merge({\r\n    focusKey: focusKey,\r\n    focusOffset: focusOffset,\r\n    isBackward: true\r\n  });\r\n}\r\n\r\nmodule.exports = moveSelectionBackward;"]},"metadata":{},"sourceType":"script"}
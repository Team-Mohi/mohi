{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\Profiles\\\\MyProfile\\\\TimeLine.jsx\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport SiderLeftProfile from './SiderLeftProfile.jsx';\nimport SiderRightProfile from './SiderRightProfile.jsx';\nimport { Post } from './Post.jsx';\nimport { Row, Col } from 'antd';\nimport CreatePost from './CreatePost.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { requestAddPostsProfile } from './../../../Actions/index.jsx';\nimport { responseAddPostsProfile } from './../../../Actions/index.jsx';\nimport { setCurrentPageProfile } from './../../../Actions/index.jsx';\n\nfunction TimeLine({\n  myPosts\n}) {\n  const observer = useRef();\n  const {\n    listPosts,\n    loading,\n    error,\n    hasMore,\n    loadingAddComment,\n    loadingAddPost\n  } = useSelector(state => state.myPosts);\n  const dispatch = useDispatch();\n  const [statusCreatePost, setStatusCreatePost] = useState();\n  const lastNewFeed = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        dispatch(setCurrentPageProfile());\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const submitCreatePost = async (valueEditor, fileList, privacyNewFeed, privacyStory, placeNewFeed, placeStory, listMention) => {\n    dispatch(requestAddPostsProfile());\n    setStatusCreatePost('loading');\n    let mention = [];\n    listMention.map(m => {\n      mention.push(m.data.mention.id);\n    });\n    let tags = mention.filter((value, index, mention) => mention.indexOf(value) === index);\n    let tag = tags.toString();\n    let data = {\n      placeStory: placeStory,\n      placePost: placeNewFeed,\n      post_Content: valueEditor,\n      post_Privacy: privacyNewFeed,\n      tag_users_UserId: tag,\n      story_Privacy: privacyStory,\n      post_images_Url: fileList\n    };\n    await axios.post('/api/auth/create-post-profile', data).then(res => {\n      dispatch(responseAddPostsProfile(res.data.newPost));\n      setStatusCreatePost('success');\n    }).catch(e => {\n      setStatusCreatePost('error');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SiderLeftProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    style: {\n      padding: '0 10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreatePost, {\n    submitCreatePost: submitCreatePost,\n    statusCreatePost: statusCreatePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), listPosts.map((post, index) => /*#__PURE__*/React.createElement(Post, {\n    key: index,\n    post: post,\n    ref: lastNewFeed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 43\n    }\n  }))), /*#__PURE__*/React.createElement(SiderRightProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default TimeLine;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Profiles/MyProfile/TimeLine.jsx"],"names":["React","useState","useRef","useCallback","SiderLeftProfile","SiderRightProfile","Post","Row","Col","CreatePost","useSelector","useDispatch","axios","requestAddPostsProfile","responseAddPostsProfile","setCurrentPageProfile","TimeLine","myPosts","observer","listPosts","loading","error","hasMore","loadingAddComment","loadingAddPost","state","dispatch","statusCreatePost","setStatusCreatePost","lastNewFeed","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","submitCreatePost","valueEditor","fileList","privacyNewFeed","privacyStory","placeNewFeed","placeStory","listMention","mention","map","m","push","data","id","tags","filter","value","index","indexOf","tag","toString","placePost","post_Content","post_Privacy","tag_users_UserId","story_Privacy","post_images_Url","post","then","res","newPost","catch","e","padding"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useCallback} from 'react';\r\nimport SiderLeftProfile from './SiderLeftProfile.jsx';\r\nimport SiderRightProfile from './SiderRightProfile.jsx';\r\nimport {Post} from './Post.jsx';\r\nimport { Row, Col } from 'antd';\r\nimport CreatePost from './CreatePost.jsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { requestAddPostsProfile } from './../../../Actions/index.jsx';\r\nimport { responseAddPostsProfile } from './../../../Actions/index.jsx';\r\nimport { setCurrentPageProfile } from './../../../Actions/index.jsx';\r\n\r\nfunction TimeLine({ myPosts }) {\r\n  const observer = useRef();\r\n  const { listPosts, loading, error, hasMore, loadingAddComment, loadingAddPost } = useSelector(state => state.myPosts);\r\n  const dispatch = useDispatch();\r\n  const [statusCreatePost, setStatusCreatePost] = useState();\r\n\r\n  const lastNewFeed = useCallback(node => {\r\n    if(loading) return\r\n      if(observer.current) observer.current.disconnect()\r\n      observer.current = new IntersectionObserver(entries => {\r\n        if(entries[0].isIntersecting && hasMore){\r\n          dispatch(setCurrentPageProfile())\r\n        }\r\n      })\r\n    if(node) observer.current.observe(node)\r\n  }, [loading, hasMore])\r\n\r\n  const submitCreatePost = async (valueEditor, fileList, privacyNewFeed, privacyStory, placeNewFeed, placeStory, listMention) => {\r\n    dispatch(requestAddPostsProfile())\r\n    setStatusCreatePost('loading')\r\n\r\n    let mention = [];\r\n    listMention.map(m => {\r\n      mention.push(m.data.mention.id)\r\n    })\r\n    let tags = mention.filter((value, index, mention) => mention.indexOf(value) === index);\r\n    let tag = tags.toString();\r\n\r\n    let data = {\r\n      placeStory: placeStory,\r\n      placePost: placeNewFeed,\r\n      post_Content: valueEditor,\r\n      post_Privacy: privacyNewFeed,\r\n      tag_users_UserId: tag,\r\n      story_Privacy: privacyStory,\r\n      post_images_Url: fileList\r\n    }\r\n\r\n    await axios.post('/api/auth/create-post-profile', data).then((res) => {\r\n      dispatch(responseAddPostsProfile(res.data.newPost))\r\n      setStatusCreatePost('success')\r\n    }).catch((e) => {\r\n      setStatusCreatePost('error')\r\n    })\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Row>\r\n        <SiderLeftProfile />\r\n        <Col span={12} style={{ padding: '0 10px' }}>\r\n          <CreatePost submitCreatePost={submitCreatePost} statusCreatePost={statusCreatePost}/>\r\n          {listPosts.map((post, index) => <Post key={index} post={post} ref={lastNewFeed}/>)}\r\n        </Col>\r\n        <SiderRightProfile />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TimeLine;\r\n"]},"metadata":{},"sourceType":"module"}
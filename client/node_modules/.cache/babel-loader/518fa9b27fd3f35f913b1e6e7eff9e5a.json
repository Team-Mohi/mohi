{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\NewFeed\\\\Newfeed.jsx\";\nimport React, { useCallback, useRef, useState, useEffect } from 'react';\nimport { Layout } from 'antd';\nimport './NewFeed.css';\nimport { PostNewFeed } from './PostNewFeed.jsx';\nimport CreatePost from './CreatePost.jsx';\nimport Story from './Story.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { skeletonPostNewFeed } from './../Skeleton/index.jsx';\nimport { setCurrentPage } from './../../Actions/index.jsx';\n\nfunction NewFeed({\n  posts\n}) {\n  const {\n    Content\n  } = Layout;\n  const {\n    listPosts,\n    loading,\n    error\n  } = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  const observer = useRef();\n  console.log(listPosts);\n  const lastNewFeed = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        dispatch(setCurrentPage());\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  return /*#__PURE__*/React.createElement(Content, {\n    className: \"pl-3 pr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreatePost, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Story, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), listPosts.map((post, index) => /*#__PURE__*/React.createElement(PostNewFeed, {\n    key: index,\n    post: post,\n    ref: lastNewFeed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 45\n    }\n  })), loading && skeletonPostNewFeed, error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, \"error\"));\n}\n\nexport default NewFeed;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/NewFeed/Newfeed.jsx"],"names":["React","useCallback","useRef","useState","useEffect","Layout","PostNewFeed","CreatePost","Story","useSelector","useDispatch","skeletonPostNewFeed","setCurrentPage","NewFeed","posts","Content","listPosts","loading","error","state","dispatch","observer","console","log","lastNewFeed","node","current","disconnect","IntersectionObserver","entries","isIntersecting","hasMore","observe","map","post","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,MAA5B,EAAoCC,QAApC,EAA8CC,SAA9C,QAA8D,OAA9D;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAO,eAAP;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAUC,WAAV,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAAQC,mBAAR,QAAkC,yBAAlC;AACA,SAAQC,cAAR,QAA6B,2BAA7B;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4B;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAcV,MAApB;AACA,QAAM;AAACW,IAAAA,SAAD;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAA8BT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACL,KAAhB,CAA/C;AACA,QAAMM,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGnB,MAAM,EAAvB;AAEAoB,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AAEA,QAAMQ,WAAW,GAAGvB,WAAW,CAACwB,IAAI,IAAI;AACtC,QAAGR,OAAH,EAAY;AACV,QAAGI,QAAQ,CAACK,OAAZ,EAAqBL,QAAQ,CAACK,OAAT,CAAiBC,UAAjB;AACrBN,IAAAA,QAAQ,CAACK,OAAT,GAAmB,IAAIE,oBAAJ,CAAyBC,OAAO,IAAI;AACrD,UAAGA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BC,OAAhC,EAAwC;AACtCX,QAAAA,QAAQ,CAACR,cAAc,EAAf,CAAR;AACD;AACF,KAJkB,CAAnB;AAKF,QAAGa,IAAH,EAASJ,QAAQ,CAACK,OAAT,CAAiBM,OAAjB,CAAyBP,IAAzB;AACV,GAT8B,EAS5B,CAACR,OAAD,EAAUc,OAAV,CAT4B,CAA/B;AAWA,sBACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKf,SAAS,CAACiB,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBAAiB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,KAAlB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAqC,IAAA,GAAG,EAAEV,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,CAHL,EAIKP,OAAO,IAAIN,mBAJhB,EAKKO,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALd,CADJ;AASH;;AAED,eAAeL,OAAf","sourcesContent":["import React, {useCallback, useRef, useState, useEffect} from 'react';\r\nimport { Layout } from 'antd';\r\nimport './NewFeed.css';\r\nimport {PostNewFeed} from './PostNewFeed.jsx';\r\nimport CreatePost from './CreatePost.jsx';\r\nimport Story from './Story.jsx';\r\nimport {  useSelector, useDispatch } from 'react-redux';\r\nimport {skeletonPostNewFeed} from './../Skeleton/index.jsx';\r\nimport {setCurrentPage} from './../../Actions/index.jsx';\r\n\r\nfunction NewFeed({ posts }) {\r\n    const { Content } = Layout;\r\n    const {listPosts, loading, error} = useSelector(state => state.posts);\r\n    const dispatch = useDispatch();\r\n    const observer = useRef();\r\n\r\n    console.log(listPosts);\r\n\r\n    const lastNewFeed = useCallback(node => {\r\n      if(loading) return\r\n        if(observer.current) observer.current.disconnect()\r\n        observer.current = new IntersectionObserver(entries => {\r\n          if(entries[0].isIntersecting && hasMore){\r\n            dispatch(setCurrentPage())\r\n          }\r\n        })\r\n      if(node) observer.current.observe(node)\r\n    }, [loading, hasMore])\r\n\r\n    return (\r\n        <Content className=\"pl-3 pr-3\">\r\n            <CreatePost />\r\n            <Story />\r\n            {listPosts.map((post, index) => <PostNewFeed key={index} post={post} ref={lastNewFeed}/>)}\r\n            {loading && skeletonPostNewFeed}\r\n            {error && <div>error</div>}\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default NewFeed;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\NewFeed\\\\EditorMention.jsx\";\nimport 'draft-js-mention-plugin/lib/plugin.css';\nimport style from 'styled-components';\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport Editor from 'draft-js-plugins-editor';\nimport createMentionPlugin, { defaultSuggestionsFilter } from 'draft-js-mention-plugin';\nimport editorStyles from './editorStyles.css';\nimport { connect } from \"react-redux\";\nconst mentions = [];\nconst StyleEditorMention = style.div`\n  width: 100%;\n  max-height: 200px;\n  overflow-y: auto;\n  font-size: 14px;\n  padding: 5px 10px;\n  margin-top: 10px;\n  border: 0.5px solid rgba(0,0,0,0.1);\n  border-radius:30px;\n`;\n\nclass SimpleMentionEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      suggestions: this.props.friends,\n      listMention: []\n    };\n\n    this.onChange = editorState => {\n      this.setState({\n        editorState\n      });\n      let currentContent = editorState.getCurrentContent();\n      let raw = convertToRaw(currentContent);\n\n      for (let key in raw.entityMap) {\n        const ent = raw.entityMap[key];\n\n        if (ent.type === 'mention') {\n          this.setState({\n            listMention: [...this.state.listMention, ent]\n          });\n          this.props.showMentionList(listMention);\n        }\n      }\n    };\n\n    this.onSearchChange = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: defaultSuggestionsFilter(value, mentions)\n      });\n    };\n\n    this.mentionPlugin = createMentionPlugin({\n      mentions,\n      entityMutability: 'IMMUTABLE',\n      supportWhitespace: true\n    });\n  }\n\n  componentDidMount() {\n    this.props.friends.map(friend => {\n      mentions.push({\n        name: friend.user_first_name + ' ' + friend.user_last_name,\n        link: '/' + friend.user_username,\n        avatar: friend.user_avatar,\n        id: friend.id\n      });\n    });\n  }\n\n  //\n  // onAddMention = (mention) => {\n  //   console.log(mention);\n  //   this.props.showMentionList(mention);\n  // }\n  render() {\n    const {\n      MentionSuggestions\n    } = this.mentionPlugin;\n    const plugins = [this.mentionPlugin];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: editorStyles.editor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyleEditorMention, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      editorState: this.state.editorState,\n      onChange: this.onChange,\n      plugins: plugins,\n      placeholder: \"G\\u1EAFn th\\u1EBB ai \\u0111\\xF3...\",\n      ref: element => {\n        this.editor = element;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(MentionSuggestions, {\n      onSearchChange: this.onSearchChange,\n      suggestions: this.state.suggestions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    friends: state.friends.list\n  };\n};\n\nexport default connect(mapStateToProps, null)(SimpleMentionEditor);","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/NewFeed/EditorMention.jsx"],"names":["style","React","Component","EditorState","convertToRaw","Editor","createMentionPlugin","defaultSuggestionsFilter","editorStyles","connect","mentions","StyleEditorMention","div","SimpleMentionEditor","constructor","props","state","editorState","createEmpty","suggestions","friends","listMention","onChange","setState","currentContent","getCurrentContent","raw","key","entityMap","ent","type","showMentionList","onSearchChange","value","mentionPlugin","entityMutability","supportWhitespace","componentDidMount","map","friend","push","name","user_first_name","user_last_name","link","user_username","avatar","user_avatar","id","render","MentionSuggestions","plugins","editor","element","mapStateToProps","list"],"mappings":"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","sourcesContent":["import 'draft-js-mention-plugin/lib/plugin.css';\r\nimport style from 'styled-components';\r\nimport React, { Component } from 'react';\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport Editor from 'draft-js-plugins-editor';\r\nimport createMentionPlugin, { defaultSuggestionsFilter } from 'draft-js-mention-plugin';\r\nimport editorStyles from './editorStyles.css';\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mentions = [];\r\n\r\nconst StyleEditorMention = style.div`\r\n  width: 100%;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  font-size: 14px;\r\n  padding: 5px 10px;\r\n  margin-top: 10px;\r\n  border: 0.5px solid rgba(0,0,0,0.1);\r\n  border-radius:30px;\r\n`;\r\n\r\n class SimpleMentionEditor extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.mentionPlugin = createMentionPlugin({\r\n      mentions,\r\n      entityMutability: 'IMMUTABLE',\r\n      supportWhitespace: true\r\n    });\r\n  }\r\n\r\n  state = {\r\n    editorState: EditorState.createEmpty(),\r\n    suggestions: this.props.friends,\r\n    listMention: []\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.props.friends.map((friend) => {\r\n      mentions.push({\r\n        name: friend.user_first_name + ' ' + friend.user_last_name,\r\n        link: '/' + friend.user_username,\r\n        avatar: friend.user_avatar,\r\n        id: friend.id\r\n      });\r\n    })\r\n  }\r\n  onChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n\r\n    let currentContent = editorState .getCurrentContent();\r\n    let raw = convertToRaw(currentContent);\r\n    for(let key in raw.entityMap){\r\n      const ent = raw.entityMap[key];\r\n      if(ent.type === 'mention'){\r\n        this.setState({\r\n          listMention: [...this.state.listMention, ent]\r\n        });\r\n          this.props.showMentionList(listMention);\r\n      }\r\n    }\r\n  };\r\n\r\n  onSearchChange = ({ value }) => {\r\n    this.setState({\r\n      suggestions: defaultSuggestionsFilter(value, mentions),\r\n    });\r\n  };\r\n  //\r\n  // onAddMention = (mention) => {\r\n  //   console.log(mention);\r\n  //   this.props.showMentionList(mention);\r\n  // }\r\n\r\n  render() {\r\n    const { MentionSuggestions } = this.mentionPlugin;\r\n    const plugins = [this.mentionPlugin];\r\n\r\n    return (\r\n      <div className={editorStyles.editor}>\r\n        <StyleEditorMention>\r\n          <Editor\r\n            editorState={this.state.editorState}\r\n            onChange={this.onChange}\r\n            plugins={plugins}\r\n            placeholder=\"Gắn thẻ ai đó...\"\r\n            ref={(element) => { this.editor = element; }}\r\n          />\r\n        </StyleEditorMention>\r\n        <MentionSuggestions\r\n          onSearchChange={this.onSearchChange}\r\n          suggestions={this.state.suggestions}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    friends: state.friends.list,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SimpleMentionEditor)\r\n"]},"metadata":{},"sourceType":"module"}
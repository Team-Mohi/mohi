{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\Post\\\\Post.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Post.css';\nimport PostImage from './PostImage.jsx';\nimport CommentEditor from './CommentEditor.jsx';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineLike } from \"react-icons/ai\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FaRegCommentAlt } from \"react-icons/fa\";\nimport { IoIosShareAlt } from \"react-icons/io\";\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport lozad from 'lozad';\n\nfunction PostPage(props) {\n  const inputCommentRef = useRef();\n  const inputCommentParentReplyRef = useRef();\n  const inputCommentChildReplyRef = useRef();\n  const [listParentComment, setListParentComment] = useState([]);\n  const [listChildComment, setListChildComment] = useState([]);\n\n  function focusInputComment() {\n    let inputRef = inputCommentRef.current;\n    inputRef.focusCommentInput();\n  }\n\n  useEffect(() => {\n    let _commentParent = [];\n    let _commentChild = [];\n    props.post.commentPost.map((comment, index) => {\n      if (comment.commentType === 'parent') {\n        _commentParent.push(comment);\n\n        setListParentComment(_commentParent);\n      }\n\n      if (comment.commentType === 'child') {\n        _commentChild.push(comment);\n\n        setListChildComment(_commentChild);\n      }\n    });\n  }, []);\n\n  const appendInputParentReply = () => {\n    let currentRef = inputCommentParentReplyRef.current;\n    console.log(inputCommentParentReplyRef);\n  };\n\n  const appendInputChildReply = () => {\n    let currentRef = inputCommentChildReplyRef.current;\n    console.log(inputCommentChildReplyRef);\n  };\n\n  const CommentParent = props => {\n    let comment = props.comment;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"post-comment-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-comment-item-parent\",\n      ref: inputCommentParentReplyRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-comment-item-parent-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: comment.commentAvatar,\n      alt: comment.commentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-comment-item-parent-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-comment-item-parent-info-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, comment.commentUser)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-comment-item-parent-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, comment.commentContent), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BsThreeDots, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-comment-item-parent-action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: appendInputParentReply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Tr\\u1EA3 l\\u1EDDi\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, comment.commentCreated)))), listChildComment.map((commentChild, indexChild) => {\n      if (commentChild.commentParentId === comment.id) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: indexChild,\n          className: \"post-comment-item-child\",\n          ref: inputCommentChildReplyRef,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-comment-item-parent-avatar\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: commentChild.commentAvatar,\n          alt: commentChild.commentUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-comment-item-parent-info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-comment-item-parent-info-user\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }\n        }, commentChild.commentUser)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-comment-item-parent-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }\n        }, commentChild.commentContent), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(BsThreeDots, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"post-comment-item-parent-action\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          onClick: appendInputChildReply,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }\n        }, \"Tr\\u1EA3 l\\u1EDDi\"), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }\n        }, commentChild.commentCreated))));\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"lozad\",\n    \"data-src\": props.post.avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-boss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: props.post.postUserLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, props.post.postUser)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, props.post.created))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-setting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BsThreeDots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, props.post.contentPost), /*#__PURE__*/React.createElement(PostImage, {\n    post: props.post,\n    images: props.post.imagesPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-total-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"H\\u1ED3 Th\\u1ECB V\\xE2n Anh v\\xE0 156 ng\\u01B0\\u1EDDi kh\\xE1c \\u0111\\xE3 th\\xEDch b\\xE0i vi\\u1EBFt n\\xE0y\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-action-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AiOutlineLike, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-action-item\",\n    onClick: () => focusInputComment(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaRegCommentAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-action-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IoIosShareAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment-current-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"https://picsum.photos/id/1019/1000/600/\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CommentEditor, {\n    ref: inputCommentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }))), listParentComment.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-comment-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, listParentComment.map((comment, index) => {\n    return /*#__PURE__*/React.createElement(CommentParent, {\n      key: index,\n      comment: comment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }\n    });\n  })) : null));\n}\n\nexport default PostPage;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Post/Post.jsx"],"names":["React","useState","useEffect","useRef","PostImage","CommentEditor","Link","AiOutlineLike","BsThreeDots","FaRegCommentAlt","IoIosShareAlt","gql","useQuery","lozad","PostPage","props","inputCommentRef","inputCommentParentReplyRef","inputCommentChildReplyRef","listParentComment","setListParentComment","listChildComment","setListChildComment","focusInputComment","inputRef","current","focusCommentInput","_commentParent","_commentChild","post","commentPost","map","comment","index","commentType","push","appendInputParentReply","currentRef","console","log","appendInputChildReply","CommentParent","commentAvatar","commentUser","commentContent","commentCreated","commentChild","indexChild","commentParentId","id","avatar","postUserLink","postUser","created","contentPost","imagesPost","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport './Post.css';\r\nimport PostImage from './PostImage.jsx';\r\nimport CommentEditor from './CommentEditor.jsx';\r\nimport {Link} from 'react-router-dom';\r\nimport {AiOutlineLike} from \"react-icons/ai\";\r\nimport {BsThreeDots} from \"react-icons/bs\";\r\nimport {FaRegCommentAlt} from \"react-icons/fa\";\r\nimport {IoIosShareAlt} from \"react-icons/io\";\r\nimport {gql} from 'apollo-boost';\r\nimport {useQuery} from '@apollo/react-hooks';\r\nimport lozad from 'lozad';\r\n\r\nfunction PostPage(props) {\r\n  const inputCommentRef = useRef();\r\n  const inputCommentParentReplyRef = useRef();\r\n  const inputCommentChildReplyRef = useRef();\r\n  const [listParentComment, setListParentComment] = useState([]);\r\n  const [listChildComment, setListChildComment] = useState([]);\r\n\r\n  function focusInputComment() {\r\n    let inputRef = inputCommentRef.current;\r\n    inputRef.focusCommentInput();\r\n  }\r\n\r\n  useEffect(() => {\r\n    let _commentParent = []\r\n    let _commentChild = []\r\n\r\n    props.post.commentPost.map((comment, index) => {\r\n      if (comment.commentType === 'parent') {\r\n        _commentParent.push(comment)\r\n        setListParentComment(_commentParent)\r\n      }\r\n      if (comment.commentType === 'child') {\r\n        _commentChild.push(comment)\r\n        setListChildComment(_commentChild)\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  const appendInputParentReply = () => {\r\n    let currentRef = inputCommentParentReplyRef.current;\r\n    console.log(inputCommentParentReplyRef);\r\n  }\r\n\r\n  const appendInputChildReply = () => {\r\n    let currentRef = inputCommentChildReplyRef.current;\r\n    console.log(inputCommentChildReplyRef);\r\n  }\r\n\r\n  const CommentParent = (props) => {\r\n    let comment = props.comment;\r\n    return (<div key={index} className=\"post-comment-item\">\r\n      <div className=\"post-comment-item-parent\" ref={inputCommentParentReplyRef}>\r\n        <div className=\"post-comment-item-parent-avatar\">\r\n          <Link to=\"\">\r\n            <img src={comment.commentAvatar} alt={comment.commentUser}/>\r\n          </Link>\r\n        </div>\r\n        <div className=\"post-comment-item-parent-info\">\r\n          <div className=\"post-comment-item-parent-info-user\">\r\n            <Link to=\"\">{comment.commentUser}</Link>\r\n          </div>\r\n          <div className=\"post-comment-item-parent-content\">\r\n            <p>{comment.commentContent}</p>\r\n            <span><BsThreeDots/></span>\r\n          </div>\r\n          <div className=\"post-comment-item-parent-action\">\r\n            <span onClick={appendInputParentReply}>Trả lời</span>\r\n            <span>{comment.commentCreated}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        listChildComment.map((commentChild, indexChild) => {\r\n          if (commentChild.commentParentId === comment.id) {\r\n            return (<div key={indexChild} className=\"post-comment-item-child\" ref={inputCommentChildReplyRef}>\r\n              <div className=\"post-comment-item-parent-avatar\">\r\n                <Link to=\"\">\r\n                  <img src={commentChild.commentAvatar} alt={commentChild.commentUser}/>\r\n                </Link>\r\n              </div>\r\n              <div className=\"post-comment-item-parent-info\">\r\n                <div className=\"post-comment-item-parent-info-user\">\r\n                  <Link to=\"\">{commentChild.commentUser}</Link>\r\n                </div>\r\n                <div className=\"post-comment-item-parent-content\">\r\n                  <p>{commentChild.commentContent}</p>\r\n                  <span><BsThreeDots/></span>\r\n                </div>\r\n                <div className=\"post-comment-item-parent-action\">\r\n                  <span onClick={appendInputChildReply}>Trả lời</span>\r\n                  <span>{commentChild.commentCreated}</span>\r\n                </div>\r\n              </div>\r\n            </div>)\r\n          }\r\n        })\r\n      }\r\n    </div>)\r\n  }\r\n  return (<div className=\"post\">\r\n    <div className=\"post-container\">\r\n      <div className=\"post-header\">\r\n        <div className=\"post-info\">\r\n          <div className=\"post-avatar\">\r\n            <Link to=\"\">\r\n              <img className=\"lozad\" data-src={props.post.avatar} alt=\"\"/>\r\n            </Link>\r\n          </div>\r\n          <div className=\"post-boss\">\r\n            <p>\r\n              <Link to={props.post.postUserLink}>{props.post.postUser}</Link>\r\n            </p>\r\n            <p>{props.post.created}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"post-setting\">\r\n          <BsThreeDots/>\r\n        </div>\r\n      </div>\r\n      <div className=\"post-body\">\r\n        <div className=\"post-content\">\r\n          {props.post.contentPost}\r\n        </div>\r\n        <PostImage post={props.post} images={props.post.imagesPost}/>\r\n      </div>\r\n      <div className=\"post-footer\">\r\n        <div className=\"post-total-action\">\r\n          <span>Hồ Thị Vân Anh và 156 người khác đã thích bài viết này</span>\r\n        </div>\r\n        <div className=\"post-action\">\r\n          <div className=\"post-action-item\">\r\n            <AiOutlineLike/>\r\n          </div>\r\n          <div className=\"post-action-item\" onClick={() => focusInputComment()}>\r\n            <FaRegCommentAlt/>\r\n          </div>\r\n          <div className=\"post-action-item\">\r\n            <IoIosShareAlt/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"post-comment\">\r\n        <div className=\"post-comment-current-user\">\r\n          <img src=\"https://picsum.photos/id/1019/1000/600/\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"post-comment-input\">\r\n          <CommentEditor ref={inputCommentRef}/>\r\n        </div>\r\n      </div>\r\n      {\r\n        listParentComment.length > 0\r\n          ? <div className=\"post-comment-container\">\r\n              {\r\n                listParentComment.map((comment, index) => {\r\n                  return (<CommentParent key={index} comment={comment}/>)\r\n                })\r\n              }\r\n            </div>\r\n          : null\r\n      }\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default PostPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Util, DomUtil } from 'leaflet';\nimport { Support } from './Support';\nvar callbacks = 0;\n\nfunction serialize(params) {\n  var data = '';\n  params.f = params.f || 'json';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      var param = params[key];\n      var type = Object.prototype.toString.call(param);\n      var value;\n\n      if (data.length) {\n        data += '&';\n      }\n\n      if (type === '[object Array]') {\n        value = Object.prototype.toString.call(param[0]) === '[object Object]' ? JSON.stringify(param) : param.join(',');\n      } else if (type === '[object Object]') {\n        value = JSON.stringify(param);\n      } else if (type === '[object Date]') {\n        value = param.valueOf();\n      } else {\n        value = param;\n      }\n\n      data += encodeURIComponent(key) + '=' + encodeURIComponent(value);\n    }\n  }\n\n  return data;\n}\n\nfunction createRequest(callback, context) {\n  var httpRequest = new window.XMLHttpRequest();\n\n  httpRequest.onerror = function (e) {\n    httpRequest.onreadystatechange = Util.falseFn;\n    callback.call(context, {\n      error: {\n        code: 500,\n        message: 'XMLHttpRequest error'\n      }\n    }, null);\n  };\n\n  httpRequest.onreadystatechange = function () {\n    var response;\n    var error;\n\n    if (httpRequest.readyState === 4) {\n      try {\n        response = JSON.parse(httpRequest.responseText);\n      } catch (e) {\n        response = null;\n        error = {\n          code: 500,\n          message: 'Could not parse response as JSON. This could also be caused by a CORS or XMLHttpRequest error.'\n        };\n      }\n\n      if (!error && response.error) {\n        error = response.error;\n        response = null;\n      }\n\n      httpRequest.onerror = Util.falseFn;\n      callback.call(context, error, response);\n    }\n  };\n\n  httpRequest.ontimeout = function () {\n    this.onerror();\n  };\n\n  return httpRequest;\n}\n\nfunction xmlHttpPost(url, params, callback, context) {\n  var httpRequest = createRequest(callback, context);\n  httpRequest.open('POST', url);\n\n  if (typeof context !== 'undefined' && context !== null) {\n    if (typeof context.options !== 'undefined') {\n      httpRequest.timeout = context.options.timeout;\n    }\n  }\n\n  httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n  httpRequest.send(serialize(params));\n  return httpRequest;\n}\n\nfunction xmlHttpGet(url, params, callback, context) {\n  var httpRequest = createRequest(callback, context);\n  httpRequest.open('GET', url + '?' + serialize(params), true);\n\n  if (typeof context !== 'undefined' && context !== null) {\n    if (typeof context.options !== 'undefined') {\n      httpRequest.timeout = context.options.timeout;\n\n      if (context.options.withCredentials) {\n        httpRequest.withCredentials = true;\n      }\n    }\n  }\n\n  httpRequest.send(null);\n  return httpRequest;\n} // AJAX handlers for CORS (modern browsers) or JSONP (older browsers)\n\n\nexport function request(url, params, callback, context) {\n  var paramString = serialize(params);\n  var httpRequest = createRequest(callback, context);\n  var requestLength = (url + '?' + paramString).length; // ie10/11 require the request be opened before a timeout is applied\n\n  if (requestLength <= 2000 && Support.cors) {\n    httpRequest.open('GET', url + '?' + paramString);\n  } else if (requestLength > 2000 && Support.cors) {\n    httpRequest.open('POST', url);\n    httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n  }\n\n  if (typeof context !== 'undefined' && context !== null) {\n    if (typeof context.options !== 'undefined') {\n      httpRequest.timeout = context.options.timeout;\n\n      if (context.options.withCredentials) {\n        httpRequest.withCredentials = true;\n      }\n    }\n  } // request is less than 2000 characters and the browser supports CORS, make GET request with XMLHttpRequest\n\n\n  if (requestLength <= 2000 && Support.cors) {\n    httpRequest.send(null); // request is more than 2000 characters and the browser supports CORS, make POST request with XMLHttpRequest\n  } else if (requestLength > 2000 && Support.cors) {\n    httpRequest.send(paramString); // request is less  than 2000 characters and the browser does not support CORS, make a JSONP request\n  } else if (requestLength <= 2000 && !Support.cors) {\n    return jsonp(url, params, callback, context); // request is longer then 2000 characters and the browser does not support CORS, log a warning\n  } else {\n    warn('a request to ' + url + ' was longer then 2000 characters and this browser cannot make a cross-domain post request. Please use a proxy http://esri.github.io/esri-leaflet/api-reference/request.html');\n    return;\n  }\n\n  return httpRequest;\n}\nexport function jsonp(url, params, callback, context) {\n  window._EsriLeafletCallbacks = window._EsriLeafletCallbacks || {};\n  var callbackId = 'c' + callbacks;\n  params.callback = 'window._EsriLeafletCallbacks.' + callbackId;\n\n  window._EsriLeafletCallbacks[callbackId] = function (response) {\n    if (window._EsriLeafletCallbacks[callbackId] !== true) {\n      var error;\n      var responseType = Object.prototype.toString.call(response);\n\n      if (!(responseType === '[object Object]' || responseType === '[object Array]')) {\n        error = {\n          error: {\n            code: 500,\n            message: 'Expected array or object as JSONP response'\n          }\n        };\n        response = null;\n      }\n\n      if (!error && response.error) {\n        error = response;\n        response = null;\n      }\n\n      callback.call(context, error, response);\n      window._EsriLeafletCallbacks[callbackId] = true;\n    }\n  };\n\n  var script = DomUtil.create('script', null, document.body);\n  script.type = 'text/javascript';\n  script.src = url + '?' + serialize(params);\n  script.id = callbackId;\n\n  script.onerror = function (error) {\n    if (error && window._EsriLeafletCallbacks[callbackId] !== true) {\n      // Can't get true error code: it can be 404, or 401, or 500\n      var err = {\n        error: {\n          code: 500,\n          message: 'An unknown error occurred'\n        }\n      };\n      callback.call(context, err);\n      window._EsriLeafletCallbacks[callbackId] = true;\n    }\n  };\n\n  DomUtil.addClass(script, 'esri-leaflet-jsonp');\n  callbacks++;\n  return {\n    id: callbackId,\n    url: script.src,\n    abort: function () {\n      window._EsriLeafletCallbacks._callback[callbackId]({\n        code: 0,\n        message: 'Request aborted.'\n      });\n    }\n  };\n}\nvar get = Support.cors ? xmlHttpGet : jsonp;\nget.CORS = xmlHttpGet;\nget.JSONP = jsonp;\nexport function warn() {\n  if (console && console.warn) {\n    console.warn.apply(console, arguments);\n  }\n} // choose the correct AJAX handler depending on CORS support\n\nexport { get }; // always use XMLHttpRequest for posts\n\nexport { xmlHttpPost as post }; // export the Request object to call the different handlers for debugging\n\nexport var Request = {\n  request: request,\n  get: get,\n  post: xmlHttpPost\n};\nexport default Request;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/esri-leaflet/src/Request.js"],"names":["Util","DomUtil","Support","callbacks","serialize","params","data","f","key","hasOwnProperty","param","type","Object","prototype","toString","call","value","length","JSON","stringify","join","valueOf","encodeURIComponent","createRequest","callback","context","httpRequest","window","XMLHttpRequest","onerror","e","onreadystatechange","falseFn","error","code","message","response","readyState","parse","responseText","ontimeout","xmlHttpPost","url","open","options","timeout","setRequestHeader","send","xmlHttpGet","withCredentials","request","paramString","requestLength","cors","jsonp","warn","_EsriLeafletCallbacks","callbackId","responseType","script","create","document","body","src","id","err","addClass","abort","_callback","get","CORS","JSONP","console","apply","arguments","post","Request"],"mappings":"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","sourcesContent":["import { Util, DomUtil } from 'leaflet';\r\nimport { Support } from './Support';\r\n\r\nvar callbacks = 0;\r\n\r\nfunction serialize (params) {\r\n  var data = '';\r\n\r\n  params.f = params.f || 'json';\r\n\r\n  for (var key in params) {\r\n    if (params.hasOwnProperty(key)) {\r\n      var param = params[key];\r\n      var type = Object.prototype.toString.call(param);\r\n      var value;\r\n\r\n      if (data.length) {\r\n        data += '&';\r\n      }\r\n\r\n      if (type === '[object Array]') {\r\n        value = (Object.prototype.toString.call(param[0]) === '[object Object]') ? JSON.stringify(param) : param.join(',');\r\n      } else if (type === '[object Object]') {\r\n        value = JSON.stringify(param);\r\n      } else if (type === '[object Date]') {\r\n        value = param.valueOf();\r\n      } else {\r\n        value = param;\r\n      }\r\n\r\n      data += encodeURIComponent(key) + '=' + encodeURIComponent(value);\r\n    }\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nfunction createRequest (callback, context) {\r\n  var httpRequest = new window.XMLHttpRequest();\r\n\r\n  httpRequest.onerror = function (e) {\r\n    httpRequest.onreadystatechange = Util.falseFn;\r\n\r\n    callback.call(context, {\r\n      error: {\r\n        code: 500,\r\n        message: 'XMLHttpRequest error'\r\n      }\r\n    }, null);\r\n  };\r\n\r\n  httpRequest.onreadystatechange = function () {\r\n    var response;\r\n    var error;\r\n\r\n    if (httpRequest.readyState === 4) {\r\n      try {\r\n        response = JSON.parse(httpRequest.responseText);\r\n      } catch (e) {\r\n        response = null;\r\n        error = {\r\n          code: 500,\r\n          message: 'Could not parse response as JSON. This could also be caused by a CORS or XMLHttpRequest error.'\r\n        };\r\n      }\r\n\r\n      if (!error && response.error) {\r\n        error = response.error;\r\n        response = null;\r\n      }\r\n\r\n      httpRequest.onerror = Util.falseFn;\r\n\r\n      callback.call(context, error, response);\r\n    }\r\n  };\r\n\r\n  httpRequest.ontimeout = function () {\r\n    this.onerror();\r\n  };\r\n\r\n  return httpRequest;\r\n}\r\n\r\nfunction xmlHttpPost (url, params, callback, context) {\r\n  var httpRequest = createRequest(callback, context);\r\n  httpRequest.open('POST', url);\r\n\r\n  if (typeof context !== 'undefined' && context !== null) {\r\n    if (typeof context.options !== 'undefined') {\r\n      httpRequest.timeout = context.options.timeout;\r\n    }\r\n  }\r\n  httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\r\n  httpRequest.send(serialize(params));\r\n\r\n  return httpRequest;\r\n}\r\n\r\nfunction xmlHttpGet (url, params, callback, context) {\r\n  var httpRequest = createRequest(callback, context);\r\n  httpRequest.open('GET', url + '?' + serialize(params), true);\r\n\r\n  if (typeof context !== 'undefined' && context !== null) {\r\n    if (typeof context.options !== 'undefined') {\r\n      httpRequest.timeout = context.options.timeout;\r\n      if (context.options.withCredentials) {\r\n        httpRequest.withCredentials = true;\r\n      }\r\n    }\r\n  }\r\n  httpRequest.send(null);\r\n\r\n  return httpRequest;\r\n}\r\n\r\n// AJAX handlers for CORS (modern browsers) or JSONP (older browsers)\r\nexport function request (url, params, callback, context) {\r\n  var paramString = serialize(params);\r\n  var httpRequest = createRequest(callback, context);\r\n  var requestLength = (url + '?' + paramString).length;\r\n\r\n  // ie10/11 require the request be opened before a timeout is applied\r\n  if (requestLength <= 2000 && Support.cors) {\r\n    httpRequest.open('GET', url + '?' + paramString);\r\n  } else if (requestLength > 2000 && Support.cors) {\r\n    httpRequest.open('POST', url);\r\n    httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\r\n  }\r\n\r\n  if (typeof context !== 'undefined' && context !== null) {\r\n    if (typeof context.options !== 'undefined') {\r\n      httpRequest.timeout = context.options.timeout;\r\n      if (context.options.withCredentials) {\r\n        httpRequest.withCredentials = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  // request is less than 2000 characters and the browser supports CORS, make GET request with XMLHttpRequest\r\n  if (requestLength <= 2000 && Support.cors) {\r\n    httpRequest.send(null);\r\n\r\n  // request is more than 2000 characters and the browser supports CORS, make POST request with XMLHttpRequest\r\n  } else if (requestLength > 2000 && Support.cors) {\r\n    httpRequest.send(paramString);\r\n\r\n  // request is less  than 2000 characters and the browser does not support CORS, make a JSONP request\r\n  } else if (requestLength <= 2000 && !Support.cors) {\r\n    return jsonp(url, params, callback, context);\r\n\r\n  // request is longer then 2000 characters and the browser does not support CORS, log a warning\r\n  } else {\r\n    warn('a request to ' + url + ' was longer then 2000 characters and this browser cannot make a cross-domain post request. Please use a proxy http://esri.github.io/esri-leaflet/api-reference/request.html');\r\n    return;\r\n  }\r\n\r\n  return httpRequest;\r\n}\r\n\r\nexport function jsonp (url, params, callback, context) {\r\n  window._EsriLeafletCallbacks = window._EsriLeafletCallbacks || {};\r\n  var callbackId = 'c' + callbacks;\r\n  params.callback = 'window._EsriLeafletCallbacks.' + callbackId;\r\n\r\n  window._EsriLeafletCallbacks[callbackId] = function (response) {\r\n    if (window._EsriLeafletCallbacks[callbackId] !== true) {\r\n      var error;\r\n      var responseType = Object.prototype.toString.call(response);\r\n\r\n      if (!(responseType === '[object Object]' || responseType === '[object Array]')) {\r\n        error = {\r\n          error: {\r\n            code: 500,\r\n            message: 'Expected array or object as JSONP response'\r\n          }\r\n        };\r\n        response = null;\r\n      }\r\n\r\n      if (!error && response.error) {\r\n        error = response;\r\n        response = null;\r\n      }\r\n\r\n      callback.call(context, error, response);\r\n      window._EsriLeafletCallbacks[callbackId] = true;\r\n    }\r\n  };\r\n\r\n  var script = DomUtil.create('script', null, document.body);\r\n  script.type = 'text/javascript';\r\n  script.src = url + '?' + serialize(params);\r\n  script.id = callbackId;\r\n  script.onerror = function (error) {\r\n    if (error && window._EsriLeafletCallbacks[callbackId] !== true) {\r\n      // Can't get true error code: it can be 404, or 401, or 500\r\n      var err = {\r\n        error: {\r\n          code: 500,\r\n          message: 'An unknown error occurred'\r\n        }\r\n      };\r\n\r\n      callback.call(context, err);\r\n      window._EsriLeafletCallbacks[callbackId] = true;\r\n    }\r\n  };\r\n  DomUtil.addClass(script, 'esri-leaflet-jsonp');\r\n\r\n  callbacks++;\r\n\r\n  return {\r\n    id: callbackId,\r\n    url: script.src,\r\n    abort: function () {\r\n      window._EsriLeafletCallbacks._callback[callbackId]({\r\n        code: 0,\r\n        message: 'Request aborted.'\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nvar get = ((Support.cors) ? xmlHttpGet : jsonp);\r\nget.CORS = xmlHttpGet;\r\nget.JSONP = jsonp;\r\n\r\nexport function warn () {\r\n  if (console && console.warn) {\r\n    console.warn.apply(console, arguments);\r\n  }\r\n}\r\n\r\n// choose the correct AJAX handler depending on CORS support\r\nexport { get };\r\n\r\n// always use XMLHttpRequest for posts\r\nexport { xmlHttpPost as post };\r\n\r\n// export the Request object to call the different handlers for debugging\r\nexport var Request = {\r\n  request: request,\r\n  get: get,\r\n  post: xmlHttpPost\r\n};\r\n\r\nexport default Request;\r\n"]},"metadata":{},"sourceType":"module"}
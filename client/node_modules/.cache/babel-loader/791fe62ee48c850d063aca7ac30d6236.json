{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\Profiles\\\\MyProfile\\\\TimeLine.jsx\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport SiderLeftProfile from './SiderLeftProfile.jsx';\nimport SiderRightProfile from './SiderRightProfile.jsx';\nimport { Post } from './Post.jsx';\nimport { Row, Col } from 'antd';\nimport CreatePost from './CreatePost.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { requestAddPostsProfile } from './../../../Actions/index.jsx';\nimport { responseAddPostsProfile } from './../../../Actions/index.jsx';\nimport { setCurrentPageProfile } from './../../../Actions/index.jsx';\nimport { skeletonPostNewFeed } from './../../Skeleton/index.jsx';\nimport { PUBLIC_URL } from './../../../Constants/public.jsx';\n\nfunction TimeLine({\n  myPosts\n}) {\n  const observer = useRef();\n  const {\n    listPosts,\n    loading,\n    error,\n    hasMore,\n    loadingAddComment,\n    loadingAddPost\n  } = useSelector(state => state.myPosts);\n  const dispatch = useDispatch();\n  const [statusCreatePost, setStatusCreatePost] = useState();\n  const lastNewFeed = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        console.log('aaaaaaa');\n        dispatch(setCurrentPageProfile());\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const submitCreatePost = async (valueEditor, fileList, privacyNewFeed, privacyStory, placeNewFeed, placeStory, listMention) => {\n    dispatch(requestAddPostsProfile());\n    setStatusCreatePost('loading');\n    let mention = [];\n    listMention.map(m => {\n      mention.push(m.data.mention.id);\n    });\n    let tags = mention.filter((value, index, mention) => mention.indexOf(value) === index);\n    let tag = tags.toString();\n    let data = {\n      placeStory: placeStory,\n      placePost: placeNewFeed,\n      post_Content: valueEditor,\n      post_Privacy: privacyNewFeed,\n      tag_users_UserId: tag,\n      story_Privacy: privacyStory,\n      post_images_Url: fileList\n    };\n    await axios.post('/api/auth/create-post-profile', data).then(res => {\n      dispatch(responseAddPostsProfile(res.data.newPost));\n      setStatusCreatePost('success');\n    }).catch(e => {\n      setStatusCreatePost('error');\n    });\n  };\n\n  const NoPost = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-feed-empty content-hello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Mohi\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: PUBLIC_URL + `images/nopost.jpg`,\n      alt: \"B\\u1EA3ng tin kh\\xF4ng c\\xF3 b\\xE0i vi\\u1EBFt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'rgba(0,128,128)',\n        fontSize: '15px',\n        fontWeight: '600'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"H\\xE3y k\\u1EBFt b\\u1EA1n \\u0111\\u1EC3 nh\\u1EADn \\u0111\\u01B0\\u1EE3c nhi\\u1EC1u b\\xE0i vi\\u1EBFt h\\u01A1n t\\u1EEB b\\u1EA1n b\\xE8\")));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SiderLeftProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    style: {\n      padding: '0 10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreatePost, {\n    submitCreatePost: submitCreatePost,\n    statusCreatePost: statusCreatePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), listPosts.map((post, index) => /*#__PURE__*/React.createElement(Post, {\n    key: index,\n    post: post,\n    ref: lastNewFeed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 43\n    }\n  })), loading && skeletonPostNewFeed, !loading && !listPosts.length && /*#__PURE__*/React.createElement(NoPost, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 46\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"\\u0110\\xE3 x\\u1EA3y ra l\\u1ED7i kh\\xF4ng mong mu\\u1ED1n vui l\\xF2ng t\\u1EA3i l\\u1EA1i trang\")), /*#__PURE__*/React.createElement(SiderRightProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default TimeLine;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Profiles/MyProfile/TimeLine.jsx"],"names":["React","useState","useRef","useCallback","SiderLeftProfile","SiderRightProfile","Post","Row","Col","CreatePost","useSelector","useDispatch","axios","requestAddPostsProfile","responseAddPostsProfile","setCurrentPageProfile","skeletonPostNewFeed","PUBLIC_URL","TimeLine","myPosts","observer","listPosts","loading","error","hasMore","loadingAddComment","loadingAddPost","state","dispatch","statusCreatePost","setStatusCreatePost","lastNewFeed","node","current","disconnect","IntersectionObserver","entries","isIntersecting","console","log","observe","submitCreatePost","valueEditor","fileList","privacyNewFeed","privacyStory","placeNewFeed","placeStory","listMention","mention","map","m","push","data","id","tags","filter","value","index","indexOf","tag","toString","placePost","post_Content","post_Privacy","tag_users_UserId","story_Privacy","post_images_Url","post","then","res","newPost","catch","e","NoPost","color","fontSize","fontWeight","padding","length"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useCallback} from 'react';\r\nimport SiderLeftProfile from './SiderLeftProfile.jsx';\r\nimport SiderRightProfile from './SiderRightProfile.jsx';\r\nimport {Post} from './Post.jsx';\r\nimport { Row, Col } from 'antd';\r\nimport CreatePost from './CreatePost.jsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { requestAddPostsProfile } from './../../../Actions/index.jsx';\r\nimport { responseAddPostsProfile } from './../../../Actions/index.jsx';\r\nimport { setCurrentPageProfile } from './../../../Actions/index.jsx';\r\nimport {skeletonPostNewFeed} from './../../Skeleton/index.jsx';\r\nimport {PUBLIC_URL} from './../../../Constants/public.jsx';\r\n\r\nfunction TimeLine({ myPosts }) {\r\n  const observer = useRef();\r\n  const { listPosts, loading, error, hasMore, loadingAddComment, loadingAddPost } = useSelector(state => state.myPosts);\r\n  const dispatch = useDispatch();\r\n  const [statusCreatePost, setStatusCreatePost] = useState();\r\n\r\n  const lastNewFeed = useCallback(node => {\r\n    if(loading) return\r\n      if(observer.current) observer.current.disconnect()\r\n      observer.current = new IntersectionObserver(entries => {\r\n        if(entries[0].isIntersecting && hasMore){\r\n          console.log('aaaaaaa');\r\n          dispatch(setCurrentPageProfile())\r\n        }\r\n      })\r\n    if(node) observer.current.observe(node)\r\n  }, [loading, hasMore])\r\n\r\n  const submitCreatePost = async (valueEditor, fileList, privacyNewFeed, privacyStory, placeNewFeed, placeStory, listMention) => {\r\n    dispatch(requestAddPostsProfile())\r\n    setStatusCreatePost('loading')\r\n\r\n    let mention = [];\r\n    listMention.map(m => {\r\n      mention.push(m.data.mention.id)\r\n    })\r\n    let tags = mention.filter((value, index, mention) => mention.indexOf(value) === index);\r\n    let tag = tags.toString();\r\n\r\n    let data = {\r\n      placeStory: placeStory,\r\n      placePost: placeNewFeed,\r\n      post_Content: valueEditor,\r\n      post_Privacy: privacyNewFeed,\r\n      tag_users_UserId: tag,\r\n      story_Privacy: privacyStory,\r\n      post_images_Url: fileList\r\n    }\r\n\r\n    await axios.post('/api/auth/create-post-profile', data).then((res) => {\r\n      dispatch(responseAddPostsProfile(res.data.newPost))\r\n      setStatusCreatePost('success')\r\n    }).catch((e) => {\r\n      setStatusCreatePost('error')\r\n    })\r\n\r\n  }\r\n\r\n  const NoPost = () => {\r\n      return(\r\n        <React.Fragment>\r\n          <div className=\"new-feed-empty content-hello\">\r\n            <p>Mohi</p>\r\n            <img src={PUBLIC_URL + `images/nopost.jpg`} alt=\"Bảng tin không có bài viết\" />\r\n          <div style={{color: 'rgba(0,128,128)', fontSize: '15px', fontWeight: '600'}}>Hãy kết bạn để nhận được nhiều bài viết hơn từ bạn bè</div>\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <SiderLeftProfile />\r\n        <Col span={12} style={{ padding: '0 10px' }}>\r\n          <CreatePost submitCreatePost={submitCreatePost} statusCreatePost={statusCreatePost}/>\r\n          {listPosts.map((post, index) => <Post key={index} post={post} ref={lastNewFeed}/>)}\r\n          {loading && skeletonPostNewFeed}\r\n          {!loading && !listPosts.length  && <NoPost/>}\r\n          {error && <div>Đã xảy ra lỗi không mong muốn vui lòng tải lại trang</div>}\r\n        </Col>\r\n        <SiderRightProfile />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TimeLine;\r\n"]},"metadata":{},"sourceType":"module"}
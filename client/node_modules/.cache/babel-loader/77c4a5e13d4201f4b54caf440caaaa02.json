{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Containers\\\\RegisterContainer.jsx\";\nimport React from 'react';\nimport RegisterForm from './../app/Authen/RegisterForm.jsx';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nvar CryptoJS = require(\"crypto-js\");\n\nfunction RegisterContainer() {\n  const history = useHistory();\n\n  const onSubmitRegister = async data => {\n    console.log(data);\n    await axios.post('/api/register', data).then(response => {\n      console.log(response);\n      let code = CryptoJS.AES.encrypt(JSON.stringify(response.data.veriCode), 'code_veri').toString();\n      let user_email = response.data.user_email;\n      let user_password = response.data.user_password;\n      let id_user = response.data.id_user;\n      history.push('/register/step-2', {\n        user_email: user_email,\n        code: code,\n        id_user: id_user,\n        user_password: user_password\n      });\n    }).catch(err => {\n      console.log(err);\n    }); //\n    // // Encrypt\n    // let code = CryptoJS.AES.encrypt(JSON.stringify(897263), 'code_veri').toString();\n    // let message = \"Chúng tôi đã gửi mã\";\n    // history.push('/register/step-2', {\n    //   message: message,\n    //   code: code\n    // });\n  };\n\n  return /*#__PURE__*/React.createElement(RegisterForm, {\n    onSubmitRegister: onSubmitRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default RegisterContainer;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Containers/RegisterContainer.jsx"],"names":["React","RegisterForm","axios","useHistory","CryptoJS","require","RegisterContainer","history","onSubmitRegister","data","console","log","post","then","response","code","AES","encrypt","JSON","stringify","veriCode","toString","user_email","user_password","id_user","push","catch","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,SAASC,iBAAT,GAA4B;AAC1B,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AAEA,QAAMK,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,UAAMP,KAAK,CAACU,IAAN,CAAW,eAAX,EAA4BH,IAA5B,EACLI,IADK,CACCC,QAAD,IAAc;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,UAAIC,IAAI,GAAGX,QAAQ,CAACY,GAAT,CAAaC,OAAb,CAAqBC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACL,IAAT,CAAcW,QAA7B,CAArB,EAA6D,WAA7D,EAA0EC,QAA1E,EAAX;AACA,UAAIC,UAAU,GAAGR,QAAQ,CAACL,IAAT,CAAca,UAA/B;AACA,UAAIC,aAAa,GAAGT,QAAQ,CAACL,IAAT,CAAcc,aAAlC;AACA,UAAIC,OAAO,GAAGV,QAAQ,CAACL,IAAT,CAAce,OAA5B;AACAjB,MAAAA,OAAO,CAACkB,IAAR,CAAa,kBAAb,EAAiC;AAC/BH,QAAAA,UAAU,EAAEA,UADmB;AAE/BP,QAAAA,IAAI,EAAEA,IAFyB;AAG/BS,QAAAA,OAAO,EAAEA,OAHsB;AAI/BD,QAAAA,aAAa,EAAEA;AAJgB,OAAjC;AAMD,KAbK,EAcLG,KAdK,CAcEC,GAAD,IAAS;AACdjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACD,KAhBK,CAAN,CAHuC,CAoBvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA5BD;;AA8BA,sBACE,oBAAC,YAAD;AAAc,IAAA,gBAAgB,EAAEnB,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AAED,eAAeF,iBAAf","sourcesContent":["import React from 'react';\r\nimport RegisterForm from './../app/Authen/RegisterForm.jsx';\r\nimport axios from 'axios';\r\nimport {useHistory} from 'react-router-dom';\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nfunction RegisterContainer(){\r\n  const history = useHistory();\r\n\r\n  const onSubmitRegister = async (data) => {\r\n    console.log(data);\r\n\r\n    await axios.post('/api/register', data)\r\n    .then((response) => {\r\n      console.log(response);\r\n      let code = CryptoJS.AES.encrypt(JSON.stringify(response.data.veriCode), 'code_veri').toString();\r\n      let user_email = response.data.user_email;\r\n      let user_password = response.data.user_password;\r\n      let id_user = response.data.id_user;\r\n      history.push('/register/step-2', {\r\n        user_email: user_email,\r\n        code: code,\r\n        id_user: id_user,\r\n        user_password: user_password\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    //\r\n    // // Encrypt\r\n    // let code = CryptoJS.AES.encrypt(JSON.stringify(897263), 'code_veri').toString();\r\n    // let message = \"Chúng tôi đã gửi mã\";\r\n    // history.push('/register/step-2', {\r\n    //   message: message,\r\n    //   code: code\r\n    // });\r\n  }\r\n\r\n  return(\r\n    <RegisterForm onSubmitRegister={onSubmitRegister}/>\r\n  )\r\n}\r\n\r\nexport default RegisterContainer;\r\n"]},"metadata":{},"sourceType":"module"}
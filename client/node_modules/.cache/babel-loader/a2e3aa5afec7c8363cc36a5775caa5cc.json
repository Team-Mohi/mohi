{"ast":null,"code":"\"use strict\";\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\n\n/**\r\n * @param {DOMElement} element\r\n * @param {DOMDocument} doc\r\n * @return {boolean}\r\n */\n\nfunction _isViewportScrollElement(element, doc) {\n  return !!doc && (element === doc.documentElement || element === doc.body);\n}\n/**\r\n * Scroll Module. This class contains 4 simple static functions\r\n * to be used to access Element.scrollTop/scrollLeft properties.\r\n * To solve the inconsistencies between browsers when either\r\n * document.body or document.documentElement is supplied,\r\n * below logic will be used to alleviate the issue:\r\n *\r\n * 1. If 'element' is either 'document.body' or 'document.documentElement,\r\n *    get whichever element's 'scroll{Top,Left}' is larger.\r\n * 2. If 'element' is either 'document.body' or 'document.documentElement',\r\n *    set the 'scroll{Top,Left}' on both elements.\r\n */\n\n\nvar Scroll = {\n  /**\r\n   * @param {DOMElement} element\r\n   * @return {number}\r\n   */\n  getTop: function getTop(element) {\n    var doc = element.ownerDocument;\n    return _isViewportScrollElement(element, doc) ? // In practice, they will either both have the same value,\n    // or one will be zero and the other will be the scroll position\n    // of the viewport. So we can use `X || Y` instead of `Math.max(X, Y)`\n    doc.body.scrollTop || doc.documentElement.scrollTop : element.scrollTop;\n  },\n\n  /**\r\n   * @param {DOMElement} element\r\n   * @param {number} newTop\r\n   */\n  setTop: function setTop(element, newTop) {\n    var doc = element.ownerDocument;\n\n    if (_isViewportScrollElement(element, doc)) {\n      doc.body.scrollTop = doc.documentElement.scrollTop = newTop;\n    } else {\n      element.scrollTop = newTop;\n    }\n  },\n\n  /**\r\n   * @param {DOMElement} element\r\n   * @return {number}\r\n   */\n  getLeft: function getLeft(element) {\n    var doc = element.ownerDocument;\n    return _isViewportScrollElement(element, doc) ? doc.body.scrollLeft || doc.documentElement.scrollLeft : element.scrollLeft;\n  },\n\n  /**\r\n   * @param {DOMElement} element\r\n   * @param {number} newLeft\r\n   */\n  setLeft: function setLeft(element, newLeft) {\n    var doc = element.ownerDocument;\n\n    if (_isViewportScrollElement(element, doc)) {\n      doc.body.scrollLeft = doc.documentElement.scrollLeft = newLeft;\n    } else {\n      element.scrollLeft = newLeft;\n    }\n  }\n};\nmodule.exports = Scroll;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/fbjs/lib/Scroll.js"],"names":["_isViewportScrollElement","element","doc","documentElement","body","Scroll","getTop","ownerDocument","scrollTop","setTop","newTop","getLeft","scrollLeft","setLeft","newLeft","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;AAQA;;;;;;AAKA,SAASA,wBAAT,CAAkCC,OAAlC,EAA2CC,GAA3C,EAAgD;AAC9C,SAAO,CAAC,CAACA,GAAF,KAAUD,OAAO,KAAKC,GAAG,CAACC,eAAhB,IAAmCF,OAAO,KAAKC,GAAG,CAACE,IAA7D,CAAP;AACD;AACD;;;;;;;;;;;;;;AAcA,IAAIC,MAAM,GAAG;AACX;;;;AAIAC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBL,OAAhB,EAAyB;AAC/B,QAAIC,GAAG,GAAGD,OAAO,CAACM,aAAlB;AACA,WAAOP,wBAAwB,CAACC,OAAD,EAAUC,GAAV,CAAxB,GAAyC;AAChD;AACA;AACAA,IAAAA,GAAG,CAACE,IAAJ,CAASI,SAAT,IAAsBN,GAAG,CAACC,eAAJ,CAAoBK,SAHnC,GAG+CP,OAAO,CAACO,SAH9D;AAID,GAXU;;AAaX;;;;AAIAC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBR,OAAhB,EAAyBS,MAAzB,EAAiC;AACvC,QAAIR,GAAG,GAAGD,OAAO,CAACM,aAAlB;;AAEA,QAAIP,wBAAwB,CAACC,OAAD,EAAUC,GAAV,CAA5B,EAA4C;AAC1CA,MAAAA,GAAG,CAACE,IAAJ,CAASI,SAAT,GAAqBN,GAAG,CAACC,eAAJ,CAAoBK,SAApB,GAAgCE,MAArD;AACD,KAFD,MAEO;AACLT,MAAAA,OAAO,CAACO,SAAR,GAAoBE,MAApB;AACD;AACF,GAzBU;;AA2BX;;;;AAIAC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBV,OAAjB,EAA0B;AACjC,QAAIC,GAAG,GAAGD,OAAO,CAACM,aAAlB;AACA,WAAOP,wBAAwB,CAACC,OAAD,EAAUC,GAAV,CAAxB,GAAyCA,GAAG,CAACE,IAAJ,CAASQ,UAAT,IAAuBV,GAAG,CAACC,eAAJ,CAAoBS,UAApF,GAAiGX,OAAO,CAACW,UAAhH;AACD,GAlCU;;AAoCX;;;;AAIAC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBZ,OAAjB,EAA0Ba,OAA1B,EAAmC;AAC1C,QAAIZ,GAAG,GAAGD,OAAO,CAACM,aAAlB;;AAEA,QAAIP,wBAAwB,CAACC,OAAD,EAAUC,GAAV,CAA5B,EAA4C;AAC1CA,MAAAA,GAAG,CAACE,IAAJ,CAASQ,UAAT,GAAsBV,GAAG,CAACC,eAAJ,CAAoBS,UAApB,GAAiCE,OAAvD;AACD,KAFD,MAEO;AACLb,MAAAA,OAAO,CAACW,UAAR,GAAqBE,OAArB;AACD;AACF;AAhDU,CAAb;AAkDAC,MAAM,CAACC,OAAP,GAAiBX,MAAjB","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\n/**\r\n * @param {DOMElement} element\r\n * @param {DOMDocument} doc\r\n * @return {boolean}\r\n */\r\nfunction _isViewportScrollElement(element, doc) {\r\n  return !!doc && (element === doc.documentElement || element === doc.body);\r\n}\r\n/**\r\n * Scroll Module. This class contains 4 simple static functions\r\n * to be used to access Element.scrollTop/scrollLeft properties.\r\n * To solve the inconsistencies between browsers when either\r\n * document.body or document.documentElement is supplied,\r\n * below logic will be used to alleviate the issue:\r\n *\r\n * 1. If 'element' is either 'document.body' or 'document.documentElement,\r\n *    get whichever element's 'scroll{Top,Left}' is larger.\r\n * 2. If 'element' is either 'document.body' or 'document.documentElement',\r\n *    set the 'scroll{Top,Left}' on both elements.\r\n */\r\n\r\n\r\nvar Scroll = {\r\n  /**\r\n   * @param {DOMElement} element\r\n   * @return {number}\r\n   */\r\n  getTop: function getTop(element) {\r\n    var doc = element.ownerDocument;\r\n    return _isViewportScrollElement(element, doc) ? // In practice, they will either both have the same value,\r\n    // or one will be zero and the other will be the scroll position\r\n    // of the viewport. So we can use `X || Y` instead of `Math.max(X, Y)`\r\n    doc.body.scrollTop || doc.documentElement.scrollTop : element.scrollTop;\r\n  },\r\n\r\n  /**\r\n   * @param {DOMElement} element\r\n   * @param {number} newTop\r\n   */\r\n  setTop: function setTop(element, newTop) {\r\n    var doc = element.ownerDocument;\r\n\r\n    if (_isViewportScrollElement(element, doc)) {\r\n      doc.body.scrollTop = doc.documentElement.scrollTop = newTop;\r\n    } else {\r\n      element.scrollTop = newTop;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @param {DOMElement} element\r\n   * @return {number}\r\n   */\r\n  getLeft: function getLeft(element) {\r\n    var doc = element.ownerDocument;\r\n    return _isViewportScrollElement(element, doc) ? doc.body.scrollLeft || doc.documentElement.scrollLeft : element.scrollLeft;\r\n  },\r\n\r\n  /**\r\n   * @param {DOMElement} element\r\n   * @param {number} newLeft\r\n   */\r\n  setLeft: function setLeft(element, newLeft) {\r\n    var doc = element.ownerDocument;\r\n\r\n    if (_isViewportScrollElement(element, doc)) {\r\n      doc.body.scrollLeft = doc.documentElement.scrollLeft = newLeft;\r\n    } else {\r\n      element.scrollLeft = newLeft;\r\n    }\r\n  }\r\n};\r\nmodule.exports = Scroll;"]},"metadata":{},"sourceType":"script"}
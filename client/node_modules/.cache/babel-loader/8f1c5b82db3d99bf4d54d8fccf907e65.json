{"ast":null,"code":"import * as Types from './../Constants/ActionTypes.jsx';\nconst initialState = {\n  currentPage: 1,\n  loading: true,\n  hasMore: false,\n  error: false,\n  listPosts: [],\n  loadingAddComment: false,\n  loadingAddPost: false,\n  newComment: ''\n};\n\nvar findItem = (type, arr, id) => {\n  var result = {\n    index: -1,\n    item: ''\n  };\n  arr.forEach((item, i) => {\n    if (type === 'post') {\n      if (item.id === id) {\n        result.index = i;\n        result.item = item;\n      }\n    }\n\n    if (type === 'comment') {\n      if (item.pivot.id === id) {\n        result.index = i;\n        result.item = item;\n      }\n    }\n  });\n  return result;\n};\n\nexport const myPosts = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.FECTH_POSTS_PROFILE:\n      return { ...state,\n        listPosts: [],\n        currentPage: 1,\n        loading: true\n      };\n      break;\n\n    case Types.RESPONSE_POSTS_PROFILE:\n      state.listPosts = action.posts.data;\n      state.loading = false;\n      state.hasMore = action.posts.last_page > action.posts.current_page;\n      return { ...state\n      };\n      break;\n\n    case Types.SET_CURRENT_PAGE_PROFILE:\n      state.currentPage = state.currentPage + 1;\n      return { ...state\n      };\n      break;\n\n    case Types.FECTH_MORE_POSTS_PROFILE:\n      return { ...state,\n        loading: true\n      };\n      break;\n\n    case Types.RESPONSE_MORE_POSTS_PROFILE:\n      state.listPosts = [...state.listPosts, ...action.posts.data];\n      state.loading = false;\n      state.hasMore = action.posts.last_page > action.posts.current_page;\n      return { ...state\n      };\n      break;\n\n    case Types.REQUEST_ADD_COMMENT_PROFILE:\n      return { ...state,\n        loadingAddComment: true\n      };\n      break;\n\n    case Types.RESPONSE_ADD_COMMENT_PROFILE:\n      var post = findItem('post', state.listPosts, action.payload.idPost);\n      state.listPosts[post.index].comment_post = [...state.listPosts[post.index].comment_post, ...action.payload.comment];\n      return { ...state,\n        loadingAddComment: false,\n        newComment: action.payload\n      };\n      break;\n\n    case Types.REQUEST_ADD_POSTS_PROFILE:\n      return { ...state,\n        loadingAddPost: true\n      };\n      break;\n\n    case Types.RESPONSE_ADD_POSTS_PROFILE:\n      return { ...state,\n        loadingAddPost: false,\n        listPosts: [...action.payload, ...state.listPosts]\n      };\n      break;\n\n    case Types.UPDATE_COMMENT_POST_PROFILE:\n      var post = findItem('post', state.listPosts, action.payload.idPost);\n      var commentPost = findItem('comment', post.item.comment_post, action.payload.id);\n      state.listPosts[post.index].comment_post[commentPost.index].pivot.comment_Content = action.payload.value;\n      return { ...state\n      };\n      break;\n\n    case Types.UPDATE_POST_PROFILE:\n      var post = findItem('post', state.listPosts, action.payload.idPost);\n      state.listPosts[post.index] = action.payload.data;\n      return { ...state\n      };\n      break;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/Web/mohi/client/src/Reducers/MyPost.jsx"],"names":["Types","initialState","currentPage","loading","hasMore","error","listPosts","loadingAddComment","loadingAddPost","newComment","findItem","type","arr","id","result","index","item","forEach","i","pivot","myPosts","state","action","FECTH_POSTS_PROFILE","RESPONSE_POSTS_PROFILE","posts","data","last_page","current_page","SET_CURRENT_PAGE_PROFILE","FECTH_MORE_POSTS_PROFILE","RESPONSE_MORE_POSTS_PROFILE","REQUEST_ADD_COMMENT_PROFILE","RESPONSE_ADD_COMMENT_PROFILE","post","payload","idPost","comment_post","comment","REQUEST_ADD_POSTS_PROFILE","RESPONSE_ADD_POSTS_PROFILE","UPDATE_COMMENT_POST_PROFILE","commentPost","comment_Content","value","UPDATE_POST_PROFILE"],"mappings":"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","sourcesContent":["import * as Types from './../Constants/ActionTypes.jsx';\r\n\r\nconst initialState = {\r\n  currentPage: 1,\r\n  loading: true,\r\n  hasMore: false,\r\n  error: false,\r\n  listPosts: [],\r\n  loadingAddComment: false,\r\n  loadingAddPost: false,\r\n  newComment: ''\r\n};\r\n\r\nvar findItem = (type, arr, id) => {\r\n  var result = {\r\n    index: -1,\r\n    item: ''\r\n  };\r\n\r\n  arr.forEach((item, i) => {\r\n    if(type === 'post'){\r\n      if(item.id === id){\r\n        result.index = i;\r\n        result.item = item;\r\n      }\r\n    }\r\n\r\n    if(type === 'comment'){\r\n      if(item.pivot.id === id){\r\n        result.index = i;\r\n        result.item = item;\r\n      }\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport const myPosts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.FECTH_POSTS_PROFILE:\r\n      return {\r\n              ...state,\r\n              listPosts: [],\r\n              currentPage: 1,\r\n              loading: true\r\n            }\r\n      break;\r\n    case Types.RESPONSE_POSTS_PROFILE:\r\n      state.listPosts = action.posts.data\r\n      state.loading = false\r\n      state.hasMore = action.posts.last_page > action.posts.current_page\r\n      return {...state}\r\n      break;\r\n    case Types.SET_CURRENT_PAGE_PROFILE:\r\n      state.currentPage = state.currentPage + 1\r\n      return {...state}\r\n      break;\r\n    case Types.FECTH_MORE_POSTS_PROFILE:\r\n      return {\r\n              ...state,\r\n              loading: true\r\n            }\r\n      break;\r\n    case Types.RESPONSE_MORE_POSTS_PROFILE:\r\n      state.listPosts = [...state.listPosts, ...action.posts.data]\r\n      state.loading = false\r\n      state.hasMore = action.posts.last_page > action.posts.current_page\r\n      return {...state}\r\n      break;\r\n    case Types.REQUEST_ADD_COMMENT_PROFILE:\r\n      return {...state, loadingAddComment: true}\r\n      break;\r\n    case Types.RESPONSE_ADD_COMMENT_PROFILE:\r\n      var post = findItem('post', state.listPosts, action.payload.idPost);\r\n      state.listPosts[post.index].comment_post = [...state.listPosts[post.index].comment_post, ...action.payload.comment];\r\n\r\n      return {...state, loadingAddComment:false, newComment: action.payload}\r\n      break;\r\n    case Types.REQUEST_ADD_POSTS_PROFILE:\r\n      return {...state, loadingAddPost:true}\r\n      break;\r\n    case Types.RESPONSE_ADD_POSTS_PROFILE:\r\n      return {\r\n        ...state,\r\n        loadingAddPost:false,\r\n        listPosts: [...action.payload, ...state.listPosts]\r\n      }\r\n      break;\r\n    case Types.UPDATE_COMMENT_POST_PROFILE:\r\n      var post = findItem('post', state.listPosts, action.payload.idPost);\r\n      var commentPost = findItem('comment', post.item.comment_post, action.payload.id);\r\n\r\n      state.listPosts[post.index].comment_post[commentPost.index].pivot.comment_Content = action.payload.value;\r\n\r\n      return {...state}\r\n      break;\r\n    case Types.UPDATE_POST_PROFILE:\r\n      var post = findItem('post', state.listPosts, action.payload.idPost);\r\n      state.listPosts[post.index] = action.payload.data;\r\n\r\n      return {...state}\r\n      break;\r\n    default: return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
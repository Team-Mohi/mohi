{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { useDispatch } from 'react-redux';\nexport default function InfiniteScrolling(pageNumber) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    Axios({\n      method: 'GET',\n      url: \"/api/auth/get-post-home\",\n      params: {\n        page: pageNumber\n      },\n      cancelToken: new Axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setBooks(prevListPost => {\n        return [...new Set([...prevListPost, res.data.data])];\n      });\n      setHasMore(res.data.last_page > res.data.current_page);\n      setLoading(false);\n    }).catch(e => {\n      if (Axios.isCancel(e)) return;\n      setError(true);\n    });\n    return () => cancel();\n  }, [pageNumber]);\n  return {\n    loading,\n    error,\n    books,\n    hasMore\n  };\n}","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/NewFeed/InfiniteScrolling.jsx"],"names":["React","useEffect","useState","Axios","useDispatch","InfiniteScrolling","pageNumber","loading","setLoading","error","setError","hasMore","setHasMore","dispatch","cancel","method","url","params","page","cancelToken","CancelToken","c","then","res","setBooks","prevListPost","Set","data","last_page","current_page","catch","e","isCancel","books"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,eAAe,SAASC,iBAAT,CAA2BC,UAA3B,EAAsC;AACnD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,QAAII,MAAJ;AACAX,IAAAA,KAAK,CAAC;AACJY,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,yBAFD;AAGJC,MAAAA,MAAM,EAAE;AAACC,QAAAA,IAAI,EAAGZ;AAAR,OAHJ;AAIJa,MAAAA,WAAW,EAAG,IAAIhB,KAAK,CAACiB,WAAV,CAAsBC,CAAC,IAAIP,MAAM,GAAGO,CAApC;AAJV,KAAD,CAAL,CAMCC,IAND,CAMMC,GAAG,IAAG;AACVC,MAAAA,QAAQ,CAACC,YAAY,IAAG;AACtB,eAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,YAAJ,EAAkBF,GAAG,CAACI,IAAJ,CAASA,IAA3B,CAAR,CAAJ,CAAP;AACD,OAFO,CAAR;AAGAf,MAAAA,UAAU,CAACW,GAAG,CAACI,IAAJ,CAASC,SAAT,GAAqBL,GAAG,CAACI,IAAJ,CAASE,YAA/B,CAAV;AACArB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZD,EAaCsB,KAbD,CAaOC,CAAC,IAAI;AACV,UAAG5B,KAAK,CAAC6B,QAAN,CAAeD,CAAf,CAAH,EAAsB;AACtBrB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAhBD;AAiBA,WAAO,MAAMI,MAAM,EAAnB;AACD,GAtBQ,EAsBN,CAACR,UAAD,CAtBM,CAAT;AAuBE,SAAO;AAAEC,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBwB,IAAAA,KAAlB;AAAyBtB,IAAAA;AAAzB,GAAP;AACH","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Axios from 'axios';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nexport default function InfiniteScrolling(pageNumber){\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false)\r\n  const [hasMore, setHasMore] = useState(false)\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setError(false)\r\n    let cancel\r\n    Axios({\r\n      method: 'GET',\r\n      url: \"/api/auth/get-post-home\",\r\n      params: {page : pageNumber},\r\n      cancelToken : new Axios.CancelToken(c => cancel = c)\r\n    })\r\n    .then(res =>{\r\n      setBooks(prevListPost =>{\r\n        return [...new Set([...prevListPost, res.data.data])]\r\n      })\r\n      setHasMore(res.data.last_page > res.data.current_page)\r\n      setLoading(false)\r\n    })\r\n    .catch(e => {\r\n      if(Axios.isCancel(e)) return\r\n      setError(true)\r\n    })\r\n    return () => cancel()\r\n  }, [pageNumber])\r\n    return { loading, error, books, hasMore }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as Types from'./../Constants/ActionTypes.jsx';var initialState={loading:false,loadingMore:false,list:[],infoUser:{},currentPage:1,typing:false,hasMore:false};export var oneMessage=function oneMessage(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case Types.REQUEST_ONE_MESSAGE:state.loading=true;state.list=[];state.currentPage=1;return _objectSpread({},state);break;case Types.RESPONSE_ONE_MESSAGE:return _objectSpread(_objectSpread({},state),{},{loadingMore:false,loading:false,list:action.payload.message_detail.data.reverse(),infoUser:action.payload.info,hasMore:action.payload.message_detail.last_page>action.payload.message_detail.current_page});break;case Types.SET_CURRENT_ONE_MESSAGE:state.currentPage=state.currentPage+1;return _objectSpread({},state);break;case Types.REQUEST_MORE_ONE_MESSAGE:return _objectSpread(_objectSpread({},state),{},{loadingMore:true,loading:false});break;case Types.RESPONSE_MORE_ONE_MESSAGE:state.list=[].concat(_toConsumableArray(action.payload.message_detail.data.reverse()),_toConsumableArray(state.list));state.loadingMore=false;state.hasMore=action.payload.message_detail.last_page>action.payload.message_detail.current_page;return _objectSpread({},state);break;case Types.ADD_NEW_MESSAGE:if(state.infoUser.id===action.payload[0].messages_To||state.infoUser.id===action.payload[0].messages_From){state.list=[].concat(_toConsumableArray(state.list),_toConsumableArray(action.payload));}return _objectSpread({},state);break;case Types.READ_MESSAGE:state.list.forEach(function(message,i){if(message.messages_From===action.payload.id&&action.payload.clientId===state.infoUser.id){state.list[i].messages_ReadAt='read';}});return _objectSpread({},state);break;case Types.READ_MY_MESSAGE:state.list.forEach(function(message,i){if(message.messages_From===action.payload&&action.payload===state.infoUser.id){state.list[i].messages_ReadAt='read';console.log(state);}});return _objectSpread({},state);break;case Types.TYPING_MESS:if(action.payload.from===state.infoUser.id&&action.payload.status){state.typing=true;}else{state.typing=false;}return _objectSpread({},state);break;default:return _objectSpread({},state);}};","map":{"version":3,"sources":["D:/Web/mohi/client/src/Reducers/OneMessage.jsx"],"names":["Types","initialState","loading","loadingMore","list","infoUser","currentPage","typing","hasMore","oneMessage","state","action","type","REQUEST_ONE_MESSAGE","RESPONSE_ONE_MESSAGE","payload","message_detail","data","reverse","info","last_page","current_page","SET_CURRENT_ONE_MESSAGE","REQUEST_MORE_ONE_MESSAGE","RESPONSE_MORE_ONE_MESSAGE","ADD_NEW_MESSAGE","id","messages_To","messages_From","READ_MESSAGE","forEach","message","i","clientId","messages_ReadAt","READ_MY_MESSAGE","console","log","TYPING_MESS","from","status"],"mappings":"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","sourcesContent":["import * as Types from './../Constants/ActionTypes.jsx';\r\n\r\nconst initialState = {\r\n  loading:false,\r\n  loadingMore:false,\r\n  list: [],\r\n  infoUser: {},\r\n  currentPage: 1,\r\n  typing: false,\r\n  hasMore: false\r\n};\r\n\r\nexport const oneMessage = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.REQUEST_ONE_MESSAGE:\r\n      state.loading = true\r\n      state.list = []\r\n      state.currentPage = 1\r\n      return {...state}\r\n      break;\r\n    case Types.RESPONSE_ONE_MESSAGE:\r\n      return {\r\n        ...state,\r\n        loadingMore: false,\r\n        loading: false,\r\n        list: action.payload.message_detail.data.reverse(),\r\n        infoUser: action.payload.info,\r\n        hasMore: action.payload.message_detail.last_page > action.payload.message_detail.current_page\r\n      }\r\n      break;\r\n    case Types.SET_CURRENT_ONE_MESSAGE:\r\n      state.currentPage = state.currentPage + 1\r\n      return {...state}\r\n      break;\r\n    case Types.REQUEST_MORE_ONE_MESSAGE:\r\n      return {\r\n              ...state,\r\n              loadingMore: true,\r\n              loading: false,\r\n            }\r\n      break;\r\n    case Types.RESPONSE_MORE_ONE_MESSAGE:\r\n      state.list = [...action.payload.message_detail.data.reverse(), ...state.list]\r\n      state.loadingMore = false\r\n      state.hasMore = action.payload.message_detail.last_page > action.payload.message_detail.current_page\r\n      return {...state}\r\n      break;\r\n    case Types.ADD_NEW_MESSAGE:\r\n      if(state.infoUser.id === action.payload[0].messages_To || state.infoUser.id === action.payload[0].messages_From){\r\n        state.list = [...state.list, ...action.payload];\r\n      }\r\n      return {...state}\r\n      break;\r\n    case Types.READ_MESSAGE:\r\n      state.list.forEach((message, i) => {\r\n        if(message.messages_From === action.payload.id && action.payload.clientId === state.infoUser.id){\r\n          state.list[i].messages_ReadAt = 'read';\r\n        }\r\n      });\r\n      return {...state}\r\n      break;\r\n    case Types.READ_MY_MESSAGE:\r\n      state.list.forEach((message, i) => {\r\n        if(message.messages_From === action.payload && action.payload === state.infoUser.id){\r\n          state.list[i].messages_ReadAt = 'read';\r\n          console.log(state);\r\n        }\r\n      });\r\n      return {...state}\r\n      break;\r\n    case Types.TYPING_MESS:\r\n      if(action.payload.from === state.infoUser.id && action.payload.status){\r\n        state.typing = true;\r\n      }else {\r\n        state.typing = false;\r\n      }\r\n      return {...state}\r\n      break;\r\n    default: return {...state}\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\Page\\\\VideosPage.jsx\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport './VideoPage.css';\nimport Video from './Video.jsx';\n\nfunction VideosPage() {\n  const ref = useRef();\n  const [img, setImg] = useState();\n  const [listVideo, setListVideo] = useState([1, 2, 3, 4, 5, 6]);\n\n  const getCurrentTime = () => {\n    setImg(capture(ref.current));\n  };\n\n  useEffect(() => {\n    document.querySelector('.video').addEventListener('play', evt => {\n      // code you want to happen when the video plays\n      console.log(evt.tả);\n    });\n  });\n\n  const dataURLtoFile = (dataurl, filename) => {\n    var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    return new File([u8arr], filename, {\n      type: mime\n    });\n  };\n\n  const capture = video => {\n    let w = video.videoWidth;\n    let h = video.videoHeight;\n    let canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n    let ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, w, h);\n    console.log(canvas);\n    let dataURI = canvas.toDataURL('image/jpeg'); // let a =\n\n    let boj = {\n      canvas: canvas,\n      file: dataURLtoFile(dataURI, `${+new Date()}.jpg`),\n      base64: dataURI\n    };\n    console.log(boj);\n    return boj.base64;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-video-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-video-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Video\")), listVideo.map((video, index) => {\n    return /*#__PURE__*/React.createElement(Video, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    });\n  }));\n}\n\nexport default VideosPage;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Page/VideosPage.jsx"],"names":["React","useRef","useState","useEffect","Video","VideosPage","ref","img","setImg","listVideo","setListVideo","getCurrentTime","capture","current","document","querySelector","addEventListener","evt","console","log","tả","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","video","w","videoWidth","h","videoHeight","canvas","createElement","width","height","ctx","getContext","drawImage","dataURI","toDataURL","boj","file","Date","base64","map","index"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react';\r\nimport './VideoPage.css';\r\nimport Video from './Video.jsx';\r\n\r\nfunction VideosPage(){\r\n  const ref = useRef();\r\n  const [img, setImg] = useState()\r\n  const [listVideo, setListVideo] = useState([1,2,3,4,5,6]);\r\n  const getCurrentTime = () => {\r\n    setImg(capture(ref.current))\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.querySelector('.video').addEventListener('play',  evt => {\r\n      // code you want to happen when the video plays\r\n      console.log(evt.tả);\r\n    });\r\n  })\r\n  const dataURLtoFile = (dataurl, filename) => {\r\n    var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, { type: mime });\r\n  }\r\n\r\n  const capture = (video) => {\r\n    let w = video.videoWidth ;\r\n    let h = video.videoHeight ;\r\n    let canvas = document.createElement('canvas');\r\n    canvas.width = w;\r\n    canvas.height = h;\r\n    let ctx = canvas.getContext('2d');\r\n    ctx.drawImage(video, 0, 0, w, h);\r\n    console.log(canvas);\r\n    let dataURI = canvas.toDataURL('image/jpeg');\r\n    // let a =\r\n    let boj={\r\n      canvas:canvas,\r\n      file:dataURLtoFile(dataURI, `${+new Date()}.jpg`),\r\n      base64:dataURI\r\n    }\r\n    console.log(boj);\r\n    return boj.base64;\r\n  }\r\n\r\n  return(\r\n    <div className=\"filter-video-container\">\r\n      <div className=\"filter-video-title\">\r\n        <span>Video</span>\r\n      </div>\r\n      {listVideo.map((video, index) => {\r\n        return(\r\n          <Video key={index}/>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideosPage;\r\n"]},"metadata":{},"sourceType":"module"}
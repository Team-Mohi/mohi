{"ast":null,"code":"import * as Types from './../Constants/ActionTypes.jsx';\nconst initialState = {\n  currentPage: 1,\n  loading: true,\n  hasMore: false,\n  error: false,\n  listPosts: []\n};\nexport const posts = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.SET_CURRENT_PAGE:\n      state.currentPage = state.currentPage + 1;\n      return { ...state\n      };\n      break;\n\n    case Types.FECTH_POSTS_SUCCESS:\n      state.listPosts = [...state.listPosts, ...action.posts.data];\n      state.loading = false;\n      state.hasMore = action.posts.last_page > action.posts.current_page;\n      return { ...state\n      };\n      break;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/Web/mohi/client/src/Reducers/Posts.jsx"],"names":["Types","initialState","currentPage","loading","hasMore","error","listPosts","posts","state","action","type","SET_CURRENT_PAGE","FECTH_POSTS_SUCCESS","data","last_page","current_page"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,gCAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,CADM;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE,KAJY;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAArB;AAQA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,KAAK,CAACW,gBAAX;AACEH,MAAAA,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACN,WAAN,GAAoB,CAAxC;AACA,aAAO,EAAC,GAAGM;AAAJ,OAAP;AACA;;AACF,SAAKR,KAAK,CAACY,mBAAX;AACEJ,MAAAA,KAAK,CAACF,SAAN,GAAkB,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqB,GAAGG,MAAM,CAACF,KAAP,CAAaM,IAArC,CAAlB;AACAL,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACF,KAAP,CAAaO,SAAb,GAAyBL,MAAM,CAACF,KAAP,CAAaQ,YAAtD;AACA,aAAO,EAAC,GAAGP;AAAJ,OAAP;AACA;;AACF;AAAS,aAAOA,KAAP;AAXX;AAaD,CAdM","sourcesContent":["import * as Types from './../Constants/ActionTypes.jsx';\r\n\r\nconst initialState = {\r\n  currentPage: 1,\r\n  loading: true,\r\n  hasMore: false,\r\n  error: false,\r\n  listPosts: []\r\n};\r\n\r\nexport const posts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.SET_CURRENT_PAGE:\r\n      state.currentPage = state.currentPage + 1\r\n      return {...state}\r\n      break;\r\n    case Types.FECTH_POSTS_SUCCESS:\r\n      state.listPosts = [...state.listPosts, ...action.posts.data]\r\n      state.loading = false\r\n      state.hasMore = action.posts.last_page > action.posts.current_page\r\n      return {...state}\r\n      break;\r\n    default: return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useDebounce } from '@react-hook/debounce';\nimport useEvent from '@react-hook/event';\nconst emptyObj = {};\nconst win = typeof window === 'undefined' ? null : window;\n\nconst getSize = () => [document.documentElement.clientWidth, document.documentElement.clientHeight];\n\nexport const useWindowSize = (options = emptyObj) => {\n  const {\n    wait,\n    leading,\n    initialWidth = 0,\n    initialHeight = 0\n  } = options;\n  const [size, setDebouncedSize] = useDebounce(\n  /* istanbul ignore next */\n  typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize, wait, leading);\n\n  const setSize = () => setDebouncedSize(getSize);\n\n  useEvent(win, 'resize', setSize);\n  useEvent(win, 'orientationchange', setSize);\n  return size;\n};\nexport const useWindowHeight = options => useWindowSize(options)[1];\nexport const useWindowWidth = options => useWindowSize(options)[0];","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/@react-hook/window-size/dist/module/index.js"],"names":["useDebounce","useEvent","emptyObj","win","window","getSize","document","documentElement","clientWidth","clientHeight","useWindowSize","options","wait","leading","initialWidth","initialHeight","size","setDebouncedSize","setSize","useWindowHeight","useWindowWidth"],"mappings":"AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMC,GAAG,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgC,IAAhC,GAAuCA,MAAnD;;AAEA,MAAMC,OAAO,GAAG,MAAM,CAACC,QAAQ,CAACC,eAAT,CAAyBC,WAA1B,EAAuCF,QAAQ,CAACC,eAAT,CAAyBE,YAAhE,CAAtB;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAO,GAAGT,QAAX,KAAwB;AACnD,QAAM;AACJU,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,YAAY,GAAG,CAHX;AAIJC,IAAAA,aAAa,GAAG;AAJZ,MAKFJ,OALJ;AAMA,QAAM,CAACK,IAAD,EAAOC,gBAAP,IAA2BjB,WAAW;AAC5C;AACA,SAAOM,QAAP,KAAoB,WAApB,GAAkC,CAACQ,YAAD,EAAeC,aAAf,CAAlC,GAAkEV,OAFtB,EAE+BO,IAF/B,EAEqCC,OAFrC,CAA5C;;AAIA,QAAMK,OAAO,GAAG,MAAMD,gBAAgB,CAACZ,OAAD,CAAtC;;AAEAJ,EAAAA,QAAQ,CAACE,GAAD,EAAM,QAAN,EAAgBe,OAAhB,CAAR;AACAjB,EAAAA,QAAQ,CAACE,GAAD,EAAM,mBAAN,EAA2Be,OAA3B,CAAR;AACA,SAAOF,IAAP;AACD,CAhBM;AAiBP,OAAO,MAAMG,eAAe,GAAGR,OAAO,IAAID,aAAa,CAACC,OAAD,CAAb,CAAuB,CAAvB,CAAnC;AACP,OAAO,MAAMS,cAAc,GAAGT,OAAO,IAAID,aAAa,CAACC,OAAD,CAAb,CAAuB,CAAvB,CAAlC","sourcesContent":["import { useDebounce } from '@react-hook/debounce';\nimport useEvent from '@react-hook/event';\nconst emptyObj = {};\nconst win = typeof window === 'undefined' ? null : window;\n\nconst getSize = () => [document.documentElement.clientWidth, document.documentElement.clientHeight];\n\nexport const useWindowSize = (options = emptyObj) => {\n  const {\n    wait,\n    leading,\n    initialWidth = 0,\n    initialHeight = 0\n  } = options;\n  const [size, setDebouncedSize] = useDebounce(\n  /* istanbul ignore next */\n  typeof document === 'undefined' ? [initialWidth, initialHeight] : getSize, wait, leading);\n\n  const setSize = () => setDebouncedSize(getSize);\n\n  useEvent(win, 'resize', setSize);\n  useEvent(win, 'orientationchange', setSize);\n  return size;\n};\nexport const useWindowHeight = options => useWindowSize(options)[1];\nexport const useWindowWidth = options => useWindowSize(options)[0];"]},"metadata":{},"sourceType":"module"}
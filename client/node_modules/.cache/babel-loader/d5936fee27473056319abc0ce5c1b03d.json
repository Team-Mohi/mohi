{"ast":null,"code":"'use strict';\n\nvar prefixInfo = require('./prefixInfo');\n\nvar cssPrefixFn = require('./cssPrefix');\n\nvar HYPHENATE = require('./stringUtils/hyphenate');\n\nvar CAMELIZE = require('./stringUtils/camelize');\n\nvar HAS_OWN = require('./hasOwn');\n\nvar IS_OBJECT = require('./isObject');\n\nvar IS_FUNCTION = require('./isFunction');\n\nvar applyPrefix = function applyPrefix(target, property, value, normalizeFn) {\n  cssPrefixFn(property).forEach(function (p) {\n    target[normalizeFn ? normalizeFn(p) : p] = value;\n  });\n};\n\nvar toObject = function toObject(str) {\n  str = (str || '').split(';');\n  var result = {};\n  str.forEach(function (item) {\n    var split = item.split(':');\n\n    if (split.length == 2) {\n      result[split[0].trim()] = split[1].trim();\n    }\n  });\n  return result;\n};\n\nvar CONFIG = {\n  cssUnitless: require('./cssUnitless')\n};\n/**\r\n * @ignore\r\n * @method toStyleObject\r\n *\r\n * @param  {Object} styles The object to convert to a style object.\r\n * @param  {Object} [config]\r\n * @param  {Boolean} [config.addUnits=true] True if you want to add units when numerical values are encountered.\r\n * @param  {Object}  config.cssUnitless An object whose keys represent css numerical property names that will not be appended with units.\r\n * @param  {Object}  config.prefixProperties An object whose keys represent css property names that should be prefixed\r\n * @param  {String}  config.cssUnit='px' The css unit to append to numerical values. Defaults to 'px'\r\n * @param  {String}  config.normalizeName A function that normalizes a name to a valid css property name\r\n * @param  {String}  config.scope\r\n *\r\n * @return {Object} The object, normalized with css style names\r\n */\n\nvar TO_STYLE_OBJECT = function TO_STYLE_OBJECT(styles, config, prepend, result) {\n  if (typeof styles == 'string') {\n    styles = toObject(styles);\n  }\n\n  config = config || CONFIG;\n  config.cssUnitless = config.cssUnitless || CONFIG.cssUnitless;\n  result = result || {};\n  var scope = config.scope || {},\n      //configs\n  addUnits = config.addUnits != null ? config.addUnits : scope && scope.addUnits != null ? scope.addUnits : true,\n      cssUnitless = (config.cssUnitless != null ? config.cssUnitless : scope ? scope.cssUnitless : null) || {},\n      cssUnit = (config.cssUnit || scope ? scope.cssUnit : null) || 'px',\n      prefixProperties = config.prefixProperties || (scope ? scope.prefixProperties : null) || {},\n      camelize = config.camelize,\n      normalizeFn = camelize ? CAMELIZE : HYPHENATE; // Object.keys(cssUnitless).forEach(function(key){\n  //     cssUnitless[normalizeFn(key)] = 1\n  // })\n\n  var processed, styleName, propName, propValue, propCssUnit, propType, propIsNumber, fnPropValue, prefix;\n\n  for (propName in styles) {\n    if (HAS_OWN(styles, propName)) {\n      propValue = styles[propName]; //the hyphenated style name (css property name)\n\n      styleName = HYPHENATE(prepend ? prepend + propName : propName);\n      processed = false;\n      prefix = false;\n\n      if (IS_FUNCTION(propValue)) {\n        //a function can either return a css value\n        //or an object with { value, prefix, name }\n        fnPropValue = propValue.call(scope || styles, propValue, propName, styleName, styles);\n\n        if (IS_OBJECT(fnPropValue) && fnPropValue.value != null) {\n          propValue = fnPropValue.value;\n          prefix = fnPropValue.prefix;\n          styleName = fnPropValue.name ? HYPHENATE(fnPropValue.name) : styleName;\n        } else {\n          propValue = fnPropValue;\n        }\n      }\n\n      propType = typeof propValue;\n      propIsNumber = propType == 'number' || propType == 'string' && propValue != '' && propValue * 1 == propValue;\n\n      if (propValue == null || styleName == null || styleName === '') {\n        continue;\n      }\n\n      if (propIsNumber || propType == 'string') {\n        processed = true;\n      }\n\n      if (!processed && propValue.value != null && propValue.prefix) {\n        processed = true;\n        prefix = propValue.prefix;\n        propValue = propValue.value;\n      } // hyphenStyleName = camelize? HYPHENATE(styleName): styleName\n\n\n      if (processed) {\n        prefix = prefix || !!prefixProperties[styleName];\n\n        if (propIsNumber) {\n          propValue = addUnits && !(styleName in cssUnitless) ? propValue + cssUnit : propValue + ''; //change it to a string, so that jquery does not append px or other units\n        } //special border treatment\n\n\n        if ((styleName == 'border' || !styleName.indexOf('border') && !~styleName.indexOf('radius') && !~styleName.indexOf('width')) && propIsNumber) {\n          styleName = styleName + '-width';\n        } //special border radius treatment\n\n\n        if (!styleName.indexOf('border-radius-')) {\n          styleName.replace(/border(-radius)(-(.*))/, function (str, radius, theRest) {\n            var positions = {\n              '-top': ['-top-left', '-top-right'],\n              '-left': ['-top-left', '-bottom-left'],\n              '-right': ['-top-right', '-bottom-right'],\n              '-bottom': ['-bottom-left', '-bottom-right']\n            };\n\n            if (theRest in positions) {\n              styleName = [];\n              positions[theRest].forEach(function (pos) {\n                styleName.push('border' + pos + radius);\n              });\n            } else {\n              styleName = 'border' + theRest + radius;\n            }\n          });\n\n          if (Array.isArray(styleName)) {\n            styleName.forEach(function (styleName) {\n              if (prefix) {\n                applyPrefix(result, styleName, propValue, normalizeFn);\n              } else {\n                result[normalizeFn(styleName)] = propValue;\n              }\n            });\n            continue;\n          }\n        }\n\n        if (prefix) {\n          applyPrefix(result, styleName, propValue, normalizeFn);\n        } else {\n          result[normalizeFn(styleName)] = propValue;\n        }\n      } else {\n        //the propValue must be an object, so go down the hierarchy\n        TO_STYLE_OBJECT(propValue, config, styleName + '-', result);\n      }\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = TO_STYLE_OBJECT;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/to-style/src/toStyleObject.js"],"names":["prefixInfo","require","cssPrefixFn","HYPHENATE","CAMELIZE","HAS_OWN","IS_OBJECT","IS_FUNCTION","applyPrefix","target","property","value","normalizeFn","forEach","p","toObject","str","split","result","item","length","trim","CONFIG","cssUnitless","TO_STYLE_OBJECT","styles","config","prepend","scope","addUnits","cssUnit","prefixProperties","camelize","processed","styleName","propName","propValue","propCssUnit","propType","propIsNumber","fnPropValue","prefix","call","name","indexOf","replace","radius","theRest","positions","pos","push","Array","isArray","module","exports"],"mappings":"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","sourcesContent":["'use strict'\r\n\r\nvar prefixInfo  = require('./prefixInfo')\r\nvar cssPrefixFn = require('./cssPrefix')\r\n\r\nvar HYPHENATE   = require('./stringUtils/hyphenate')\r\nvar CAMELIZE   = require('./stringUtils/camelize')\r\nvar HAS_OWN     = require('./hasOwn')\r\nvar IS_OBJECT   = require('./isObject')\r\nvar IS_FUNCTION = require('./isFunction')\r\n\r\nvar applyPrefix = function(target, property, value, normalizeFn){\r\n    cssPrefixFn(property).forEach(function(p){\r\n        target[normalizeFn? normalizeFn(p): p] = value\r\n    })\r\n}\r\n\r\nvar toObject = function(str){\r\n    str = (str || '').split(';')\r\n\r\n    var result = {}\r\n\r\n    str.forEach(function(item){\r\n        var split = item.split(':')\r\n\r\n        if (split.length == 2){\r\n            result[split[0].trim()] = split[1].trim()\r\n        }\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nvar CONFIG = {\r\n    cssUnitless: require('./cssUnitless')\r\n}\r\n\r\n/**\r\n * @ignore\r\n * @method toStyleObject\r\n *\r\n * @param  {Object} styles The object to convert to a style object.\r\n * @param  {Object} [config]\r\n * @param  {Boolean} [config.addUnits=true] True if you want to add units when numerical values are encountered.\r\n * @param  {Object}  config.cssUnitless An object whose keys represent css numerical property names that will not be appended with units.\r\n * @param  {Object}  config.prefixProperties An object whose keys represent css property names that should be prefixed\r\n * @param  {String}  config.cssUnit='px' The css unit to append to numerical values. Defaults to 'px'\r\n * @param  {String}  config.normalizeName A function that normalizes a name to a valid css property name\r\n * @param  {String}  config.scope\r\n *\r\n * @return {Object} The object, normalized with css style names\r\n */\r\nvar TO_STYLE_OBJECT = function(styles, config, prepend, result){\r\n\r\n    if (typeof styles == 'string'){\r\n        styles = toObject(styles)\r\n    }\r\n\r\n    config = config || CONFIG\r\n\r\n    config.cssUnitless = config.cssUnitless || CONFIG.cssUnitless\r\n\r\n    result = result || {}\r\n\r\n    var scope    = config.scope || {},\r\n\r\n        //configs\r\n        addUnits = config.addUnits != null?\r\n                            config.addUnits:\r\n                            scope && scope.addUnits != null?\r\n                                scope.addUnits:\r\n                                true,\r\n\r\n        cssUnitless      = (config.cssUnitless != null?\r\n                                config.cssUnitless:\r\n                                scope?\r\n                                    scope.cssUnitless:\r\n                                    null) || {},\r\n        cssUnit          = (config.cssUnit || scope? scope.cssUnit: null) || 'px',\r\n        prefixProperties = (config.prefixProperties || (scope? scope.prefixProperties: null)) || {},\r\n\r\n        camelize    = config.camelize,\r\n        normalizeFn = camelize? CAMELIZE: HYPHENATE\r\n\r\n    // Object.keys(cssUnitless).forEach(function(key){\r\n    //     cssUnitless[normalizeFn(key)] = 1\r\n    // })\r\n\r\n    var processed,\r\n        styleName,\r\n\r\n        propName,\r\n        propValue,\r\n        propCssUnit,\r\n        propType,\r\n        propIsNumber,\r\n\r\n        fnPropValue,\r\n        prefix\r\n\r\n    for (propName in styles) if (HAS_OWN(styles, propName)) {\r\n\r\n        propValue = styles[ propName ]\r\n\r\n        //the hyphenated style name (css property name)\r\n        styleName = HYPHENATE(prepend? prepend + propName: propName)\r\n\r\n        processed = false\r\n        prefix    = false\r\n\r\n        if (IS_FUNCTION(propValue)) {\r\n\r\n            //a function can either return a css value\r\n            //or an object with { value, prefix, name }\r\n            fnPropValue = propValue.call(scope || styles, propValue, propName, styleName, styles)\r\n\r\n            if (IS_OBJECT(fnPropValue) && fnPropValue.value != null){\r\n\r\n                propValue = fnPropValue.value\r\n                prefix    = fnPropValue.prefix\r\n                styleName = fnPropValue.name?\r\n                                HYPHENATE(fnPropValue.name):\r\n                                styleName\r\n\r\n            } else {\r\n                propValue = fnPropValue\r\n            }\r\n        }\r\n\r\n        propType     = typeof propValue\r\n        propIsNumber = propType == 'number' || (propType == 'string' && propValue != '' && propValue * 1 == propValue)\r\n\r\n        if (propValue == null || styleName == null || styleName === ''){\r\n            continue\r\n        }\r\n\r\n        if (propIsNumber || propType == 'string'){\r\n           processed = true\r\n        }\r\n\r\n        if (!processed && propValue.value != null && propValue.prefix){\r\n           processed = true\r\n           prefix    = propValue.prefix\r\n           propValue = propValue.value\r\n        }\r\n\r\n        // hyphenStyleName = camelize? HYPHENATE(styleName): styleName\r\n\r\n        if (processed){\r\n\r\n            prefix = prefix || !!prefixProperties[styleName]\r\n\r\n            if (propIsNumber){\r\n                propValue = addUnits && !(styleName in cssUnitless) ?\r\n                                propValue + cssUnit:\r\n                                propValue + ''//change it to a string, so that jquery does not append px or other units\r\n            }\r\n\r\n            //special border treatment\r\n            if (\r\n                    (\r\n                     styleName == 'border' ||\r\n                    (!styleName.indexOf('border')\r\n                        &&\r\n                        !~styleName.indexOf('radius')\r\n                        &&\r\n                        !~styleName.indexOf('width'))\r\n                    ) &&\r\n                    propIsNumber\r\n                ){\r\n\r\n                styleName = styleName + '-width'\r\n            }\r\n\r\n            //special border radius treatment\r\n            if (!styleName.indexOf('border-radius-')){\r\n                styleName.replace(/border(-radius)(-(.*))/, function(str, radius, theRest){\r\n                    var positions = {\r\n                        '-top'    : ['-top-left',      '-top-right' ],\r\n                        '-left'   : ['-top-left',    '-bottom-left' ],\r\n                        '-right'  : ['-top-right',   '-bottom-right'],\r\n                        '-bottom' : ['-bottom-left', '-bottom-right']\r\n                    }\r\n\r\n                    if (theRest in positions){\r\n                        styleName = []\r\n\r\n                        positions[theRest].forEach(function(pos){\r\n                            styleName.push('border' + pos + radius)\r\n                        })\r\n                    } else {\r\n                        styleName = 'border'+ theRest + radius\r\n                    }\r\n\r\n                })\r\n\r\n                if (Array.isArray(styleName)){\r\n                    styleName.forEach(function(styleName){\r\n                        if (prefix){\r\n                            applyPrefix(result, styleName, propValue, normalizeFn)\r\n                        } else {\r\n                            result[normalizeFn(styleName)] = propValue\r\n                        }\r\n                    })\r\n\r\n                    continue\r\n                }\r\n            }\r\n\r\n            if (prefix){\r\n                applyPrefix(result, styleName, propValue, normalizeFn)\r\n            } else {\r\n                result[normalizeFn(styleName)] = propValue\r\n            }\r\n\r\n        } else {\r\n            //the propValue must be an object, so go down the hierarchy\r\n            TO_STYLE_OBJECT(propValue, config, styleName + '-', result)\r\n        }\r\n    }\r\n\r\n    return result\r\n}\r\n\r\nmodule.exports = TO_STYLE_OBJECT"]},"metadata":{},"sourceType":"script"}
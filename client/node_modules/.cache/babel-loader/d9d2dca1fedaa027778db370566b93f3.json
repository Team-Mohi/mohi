{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\Profiles\\\\MyProfile\\\\TimeLine.jsx\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport SiderLeftProfile from './SiderLeftProfile.jsx';\nimport SiderRightProfile from './SiderRightProfile.jsx';\nimport { Post } from './Post.jsx';\nimport { Row, Col } from 'antd';\nimport CreatePost from './CreatePost.jsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { requestAddPostsProfile } from './../../../Actions/index.jsx';\nimport { responseAddPostsProfile } from './../../../Actions/index.jsx';\nimport { setCurrentPageProfile } from './../../../Actions/index.jsx';\nimport { skeletonPostNewFeed } from './../../Skeleton/index.jsx';\nimport { PUBLIC_URL } from './../../../Constants/public.jsx';\nimport { useParams } from 'react-router-dom';\n\nfunction TimeLine(props, {\n  myPosts\n}) {\n  const observer = useRef();\n  const {\n    listPosts,\n    loading,\n    error,\n    hasMore,\n    loadingAddComment,\n    loadingAddPost\n  } = useSelector(state => state.myPosts);\n  const dispatch = useDispatch();\n  const [statusCreatePost, setStatusCreatePost] = useState();\n  const {\n    idProfile\n  } = useParams();\n  const lastNewFeed = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        dispatch(setCurrentPageProfile());\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  const submitCreatePost = async (valueEditor, fileList, privacyNewFeed, privacyStory, placeNewFeed, placeStory, listMention) => {\n    dispatch(requestAddPostsProfile());\n    setStatusCreatePost('loading');\n    let mention = [];\n    listMention.map(m => {\n      mention.push(m.data.mention.id);\n    });\n    let tags = mention.filter((value, index, mention) => mention.indexOf(value) === index);\n    let tag = tags.toString();\n    let data = {};\n\n    if (idProfile !== JSON.parse(localStorage.getItem(ustk)).info.user_username) {\n      data = {\n        placeStory: placeStory,\n        placePost: placeNewFeed,\n        post_Content: valueEditor,\n        post_Privacy: privacyNewFeed,\n        tag_users_UserId: tag,\n        story_Privacy: privacyStory,\n        post_images_Url: fileList,\n        post_userReceiveId: idProfile\n      };\n    } else {\n      data = {\n        placeStory: placeStory,\n        placePost: placeNewFeed,\n        post_Content: valueEditor,\n        post_Privacy: privacyNewFeed,\n        tag_users_UserId: tag,\n        story_Privacy: privacyStory,\n        post_images_Url: fileList\n      };\n    }\n\n    await axios.post('/api/auth/create-post-profile', data).then(res => {\n      dispatch(responseAddPostsProfile(res.data.newPost));\n      setStatusCreatePost('success');\n    }).catch(e => {\n      setStatusCreatePost('error');\n    });\n  };\n\n  const NoPost = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"new-feed-empty content-hello\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Mohi\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: PUBLIC_URL + `images/nopost.jpg`,\n      alt: \"B\\u1EA3ng tin kh\\xF4ng c\\xF3 b\\xE0i vi\\u1EBFt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'rgba(0,128,128)',\n        fontSize: '15px',\n        fontWeight: '600'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"H\\xE3y k\\u1EBFt b\\u1EA1n \\u0111\\u1EC3 nh\\u1EADn \\u0111\\u01B0\\u1EE3c nhi\\u1EC1u b\\xE0i vi\\u1EBFt h\\u01A1n t\\u1EEB b\\u1EA1n b\\xE8\")));\n  };\n\n  const sendReactionPost = (reaction, postId) => {\n    props.sendReactionPost(reaction, postId);\n  };\n\n  const onSubmitComment = (value, idPost) => {\n    props.onSubmitComment(value, idPost);\n  };\n\n  const loadingSendRequestSetting = (type, idPost, idUser) => {\n    props.loadingSendRequestSetting(type, idPost, idUser);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SiderLeftProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    style: {\n      padding: '0 10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreatePost, {\n    submitCreatePost: submitCreatePost,\n    statusCreatePost: statusCreatePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), listPosts.map((post, index) => /*#__PURE__*/React.createElement(Post, {\n    key: index,\n    post: post,\n    ref: lastNewFeed,\n    sendReactionPost: sendReactionPost,\n    onSubmitComment: onSubmitComment,\n    loadingAddComment: loadingAddComment,\n    loadingSendRequestSetting: loadingSendRequestSetting,\n    loadingSetting: props.loadingSetting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 43\n    }\n  })), loading && skeletonPostNewFeed, !loading && !listPosts.length && /*#__PURE__*/React.createElement(NoPost, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 46\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"\\u0110\\xE3 x\\u1EA3y ra l\\u1ED7i kh\\xF4ng mong mu\\u1ED1n vui l\\xF2ng t\\u1EA3i l\\u1EA1i trang\")), /*#__PURE__*/React.createElement(SiderRightProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default TimeLine;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Profiles/MyProfile/TimeLine.jsx"],"names":["React","useState","useRef","useCallback","SiderLeftProfile","SiderRightProfile","Post","Row","Col","CreatePost","useSelector","useDispatch","axios","requestAddPostsProfile","responseAddPostsProfile","setCurrentPageProfile","skeletonPostNewFeed","PUBLIC_URL","useParams","TimeLine","props","myPosts","observer","listPosts","loading","error","hasMore","loadingAddComment","loadingAddPost","state","dispatch","statusCreatePost","setStatusCreatePost","idProfile","lastNewFeed","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","submitCreatePost","valueEditor","fileList","privacyNewFeed","privacyStory","placeNewFeed","placeStory","listMention","mention","map","m","push","data","id","tags","filter","value","index","indexOf","tag","toString","JSON","parse","localStorage","getItem","ustk","info","user_username","placePost","post_Content","post_Privacy","tag_users_UserId","story_Privacy","post_images_Url","post_userReceiveId","post","then","res","newPost","catch","e","NoPost","color","fontSize","fontWeight","sendReactionPost","reaction","postId","onSubmitComment","idPost","loadingSendRequestSetting","type","idUser","padding","loadingSetting","length"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useCallback} from 'react';\r\nimport SiderLeftProfile from './SiderLeftProfile.jsx';\r\nimport SiderRightProfile from './SiderRightProfile.jsx';\r\nimport {Post} from './Post.jsx';\r\nimport { Row, Col } from 'antd';\r\nimport CreatePost from './CreatePost.jsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { requestAddPostsProfile } from './../../../Actions/index.jsx';\r\nimport { responseAddPostsProfile } from './../../../Actions/index.jsx';\r\nimport { setCurrentPageProfile } from './../../../Actions/index.jsx';\r\nimport {skeletonPostNewFeed} from './../../Skeleton/index.jsx';\r\nimport {PUBLIC_URL} from './../../../Constants/public.jsx';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nfunction TimeLine(props, { myPosts }) {\r\n  const observer = useRef();\r\n  const { listPosts, loading, error, hasMore, loadingAddComment, loadingAddPost } = useSelector(state => state.myPosts);\r\n  const dispatch = useDispatch();\r\n  const [statusCreatePost, setStatusCreatePost] = useState();\r\n  const {idProfile} = useParams();\r\n\r\n  const lastNewFeed = useCallback(node => {\r\n    if(loading) return\r\n      if(observer.current) observer.current.disconnect()\r\n      observer.current = new IntersectionObserver(entries => {\r\n        if(entries[0].isIntersecting && hasMore){\r\n          dispatch(setCurrentPageProfile())\r\n        }\r\n      })\r\n    if(node) observer.current.observe(node)\r\n  }, [loading, hasMore])\r\n\r\n  const submitCreatePost = async (valueEditor, fileList, privacyNewFeed, privacyStory, placeNewFeed, placeStory, listMention) => {\r\n    dispatch(requestAddPostsProfile())\r\n    setStatusCreatePost('loading')\r\n\r\n    let mention = [];\r\n    listMention.map(m => {\r\n      mention.push(m.data.mention.id)\r\n    })\r\n    let tags = mention.filter((value, index, mention) => mention.indexOf(value) === index);\r\n    let tag = tags.toString();\r\n\r\n    let data = {};\r\n\r\n    if(idProfile !== JSON.parse(localStorage.getItem(ustk)).info.user_username){\r\n      data = {\r\n        placeStory: placeStory,\r\n        placePost: placeNewFeed,\r\n        post_Content: valueEditor,\r\n        post_Privacy: privacyNewFeed,\r\n        tag_users_UserId: tag,\r\n        story_Privacy: privacyStory,\r\n        post_images_Url: fileList,\r\n        post_userReceiveId: idProfile\r\n      }\r\n    }else{\r\n      data = {\r\n        placeStory: placeStory,\r\n        placePost: placeNewFeed,\r\n        post_Content: valueEditor,\r\n        post_Privacy: privacyNewFeed,\r\n        tag_users_UserId: tag,\r\n        story_Privacy: privacyStory,\r\n        post_images_Url: fileList\r\n      }\r\n    }\r\n\r\n\r\n    await axios.post('/api/auth/create-post-profile', data).then((res) => {\r\n      dispatch(responseAddPostsProfile(res.data.newPost))\r\n      setStatusCreatePost('success')\r\n    }).catch((e) => {\r\n      setStatusCreatePost('error')\r\n    })\r\n\r\n  }\r\n\r\n  const NoPost = () => {\r\n      return(\r\n        <React.Fragment>\r\n          <div className=\"new-feed-empty content-hello\">\r\n            <p>Mohi</p>\r\n            <img src={PUBLIC_URL + `images/nopost.jpg`} alt=\"Bảng tin không có bài viết\" />\r\n          <div style={{color: 'rgba(0,128,128)', fontSize: '15px', fontWeight: '600'}}>Hãy kết bạn để nhận được nhiều bài viết hơn từ bạn bè</div>\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n  }\r\n\r\n  const sendReactionPost = (reaction, postId) => {\r\n    props.sendReactionPost(reaction, postId)\r\n  }\r\n\r\n  const onSubmitComment = (value, idPost) => {\r\n    props.onSubmitComment(value, idPost)\r\n  }\r\n\r\n  const loadingSendRequestSetting = (type, idPost, idUser) => {\r\n    props.loadingSendRequestSetting(type, idPost, idUser)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <SiderLeftProfile />\r\n        <Col span={12} style={{ padding: '0 10px' }}>\r\n          <CreatePost submitCreatePost={submitCreatePost} statusCreatePost={statusCreatePost}/>\r\n          {listPosts.map((post, index) => <Post key={index} post={post} ref={lastNewFeed} sendReactionPost={sendReactionPost} onSubmitComment={onSubmitComment} loadingAddComment={loadingAddComment} loadingSendRequestSetting={loadingSendRequestSetting} loadingSetting={props.loadingSetting}/>)}\r\n          {loading && skeletonPostNewFeed}\r\n          {!loading && !listPosts.length  && <NoPost/>}\r\n          {error && <div>Đã xảy ra lỗi không mong muốn vui lòng tải lại trang</div>}\r\n        </Col>\r\n        <SiderRightProfile />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TimeLine;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\n'use strict';\n/**\r\n * Gets the scroll position of the supplied element or window.\r\n *\r\n * The return values are unbounded, unlike `getScrollPosition`. This means they\r\n * may be negative or exceed the element boundaries (which is possible using\r\n * inertial scrolling).\r\n *\r\n * @param {DOMWindow|DOMElement} scrollable\r\n * @return {object} Map with `x` and `y` keys.\r\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n    return {\n      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\n      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\n    };\n  }\n\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/fbjs/lib/getUnboundedScrollPosition.js"],"names":["getUnboundedScrollPosition","scrollable","Window","x","pageXOffset","document","documentElement","scrollLeft","y","pageYOffset","scrollTop","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;AACA;;;;;;;;;;;AAWA,SAASA,0BAAT,CAAoCC,UAApC,EAAgD;AAC9C,MAAIA,UAAU,CAACC,MAAX,IAAqBD,UAAU,YAAYA,UAAU,CAACC,MAA1D,EAAkE;AAChE,WAAO;AACLC,MAAAA,CAAC,EAAEF,UAAU,CAACG,WAAX,IAA0BH,UAAU,CAACI,QAAX,CAAoBC,eAApB,CAAoCC,UAD5D;AAELC,MAAAA,CAAC,EAAEP,UAAU,CAACQ,WAAX,IAA0BR,UAAU,CAACI,QAAX,CAAoBC,eAApB,CAAoCI;AAF5D,KAAP;AAID;;AAED,SAAO;AACLP,IAAAA,CAAC,EAAEF,UAAU,CAACM,UADT;AAELC,IAAAA,CAAC,EAAEP,UAAU,CAACS;AAFT,GAAP;AAID;;AAEDC,MAAM,CAACC,OAAP,GAAiBZ,0BAAjB","sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @typechecks\r\n */\r\n'use strict';\r\n/**\r\n * Gets the scroll position of the supplied element or window.\r\n *\r\n * The return values are unbounded, unlike `getScrollPosition`. This means they\r\n * may be negative or exceed the element boundaries (which is possible using\r\n * inertial scrolling).\r\n *\r\n * @param {DOMWindow|DOMElement} scrollable\r\n * @return {object} Map with `x` and `y` keys.\r\n */\r\n\r\nfunction getUnboundedScrollPosition(scrollable) {\r\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\r\n    return {\r\n      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\r\n      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\r\n    };\r\n  }\r\n\r\n  return {\r\n    x: scrollable.scrollLeft,\r\n    y: scrollable.scrollTop\r\n  };\r\n}\r\n\r\nmodule.exports = getUnboundedScrollPosition;"]},"metadata":{},"sourceType":"script"}
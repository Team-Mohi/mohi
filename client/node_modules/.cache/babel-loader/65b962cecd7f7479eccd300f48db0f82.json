{"ast":null,"code":"/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\nvar isLikelyAacData = function (data) {\n  if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n    return true;\n  }\n\n  return false;\n};\n\nvar parseSyncSafeInteger = function (data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n}; // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\nvar percentEncode = function (bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n}; // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\n\n\nvar parseIso88591 = function (bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function (header, byteIndex) {\n  var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function (header, byteIndex) {\n  var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n  return highTwo | middle | lowThree;\n};\n\nvar parseType = function (header, byteIndex) {\n  if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n    return 'timed-metadata';\n  } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n    return 'audio';\n  }\n\n  return null;\n};\n\nvar parseSampleRate = function (packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function (packet) {\n  var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n  frameStart = 10;\n\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  } // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n    if (frameSize < 1) {\n      return null;\n    }\n\n    frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            return size;\n          }\n\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/mux.js/lib/aac/utils.js"],"names":["ADTS_SAMPLING_FREQUENCIES","isLikelyAacData","data","charCodeAt","parseSyncSafeInteger","percentEncode","bytes","start","end","i","result","toString","slice","parseIso88591","unescape","parseId3TagSize","header","byteIndex","returnSize","flags","footerPresent","parseAdtsSize","lowThree","middle","highTwo","parseType","parseSampleRate","packet","length","parseAacTimestamp","frameStart","frameSize","frame","frameHeader","subarray","String","fromCharCode","byteLength","owner","d","size","module","exports"],"mappings":"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","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n"]},"metadata":{},"sourceType":"script"}
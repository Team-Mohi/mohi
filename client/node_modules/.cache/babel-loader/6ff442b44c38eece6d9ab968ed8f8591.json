{"ast":null,"code":"/* @preserve\n* @terraformer/arcgis - v2.0.6 - MIT\n* Copyright (c) 2012-2020 Environmental Systems Research Institute, Inc.\n* Mon May 18 2020 14:30:35 GMT-0700 (Pacific Daylight Time)\n*/\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nvar edgeIntersectsEdge = function edgeIntersectsEdge(a1, a2, b1, b2) {\n  var uaT = (b2[0] - b1[0]) * (a1[1] - b1[1]) - (b2[1] - b1[1]) * (a1[0] - b1[0]);\n  var ubT = (a2[0] - a1[0]) * (a1[1] - b1[1]) - (a2[1] - a1[1]) * (a1[0] - b1[0]);\n  var uB = (b2[1] - b1[1]) * (a2[0] - a1[0]) - (b2[0] - b1[0]) * (a2[1] - a1[1]);\n\n  if (uB !== 0) {\n    var ua = uaT / uB;\n    var ub = ubT / uB;\n\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar coordinatesContainPoint = function coordinatesContainPoint(coordinates, point) {\n  var contains = false;\n\n  for (var i = -1, l = coordinates.length, j = l - 1; ++i < l; j = i) {\n    if ((coordinates[i][1] <= point[1] && point[1] < coordinates[j][1] || coordinates[j][1] <= point[1] && point[1] < coordinates[i][1]) && point[0] < (coordinates[j][0] - coordinates[i][0]) * (point[1] - coordinates[i][1]) / (coordinates[j][1] - coordinates[i][1]) + coordinates[i][0]) {\n      contains = !contains;\n    }\n  }\n\n  return contains;\n};\n\nvar pointsEqual = function pointsEqual(a, b) {\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar arrayIntersectsArray = function arrayIntersectsArray(a, b) {\n  for (var i = 0; i < a.length - 1; i++) {\n    for (var j = 0; j < b.length - 1; j++) {\n      if (edgeIntersectsEdge(a[i], a[i + 1], b[j], b[j + 1])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\nvar closeRing = function closeRing(coordinates) {\n  if (!pointsEqual(coordinates[0], coordinates[coordinates.length - 1])) {\n    coordinates.push(coordinates[0]);\n  }\n\n  return coordinates;\n}; // determine if polygon ring coordinates are clockwise. clockwise signifies outer ring, counter-clockwise an inner ring\n// or hole. this logic was found at http://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-\n// points-are-in-clockwise-order\n\n\nvar ringIsClockwise = function ringIsClockwise(ringToTest) {\n  var total = 0;\n  var i = 0;\n  var rLength = ringToTest.length;\n  var pt1 = ringToTest[i];\n  var pt2;\n\n  for (i; i < rLength - 1; i++) {\n    pt2 = ringToTest[i + 1];\n    total += (pt2[0] - pt1[0]) * (pt2[1] + pt1[1]);\n    pt1 = pt2;\n  }\n\n  return total >= 0;\n}; // This function ensures that rings are oriented in the right directions\n// from http://jsperf.com/cloning-an-object/2\n\n\nvar shallowClone = function shallowClone(obj) {\n  var target = {};\n\n  for (var i in obj) {\n    // both arcgis attributes and geojson props are just hardcoded keys\n    if (obj.hasOwnProperty(i)) {\n      // eslint-disable-line no-prototype-builtins\n      target[i] = obj[i];\n    }\n  }\n\n  return target;\n};\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\nvar coordinatesContainCoordinates = function coordinatesContainCoordinates(outer, inner) {\n  var intersects = arrayIntersectsArray(outer, inner);\n  var contains = coordinatesContainPoint(outer, inner[0]);\n\n  if (!intersects && contains) {\n    return true;\n  }\n\n  return false;\n}; // do any polygons in this array contain any other polygons in this array?\n// used for checking for holes in arcgis rings\n\n\nvar convertRingsToGeoJSON = function convertRingsToGeoJSON(rings) {\n  var outerRings = [];\n  var holes = [];\n  var x; // iterator\n\n  var outerRing; // current outer ring being evaluated\n\n  var hole; // current hole being evaluated\n  // for each ring\n\n  for (var r = 0; r < rings.length; r++) {\n    var ring = closeRing(rings[r].slice(0));\n\n    if (ring.length < 4) {\n      continue;\n    } // is this ring an outer ring? is it clockwise?\n\n\n    if (ringIsClockwise(ring)) {\n      var polygon = [ring.slice().reverse()]; // wind outer rings counterclockwise for RFC 7946 compliance\n\n      outerRings.push(polygon); // push to outer rings\n    } else {\n      holes.push(ring.slice().reverse()); // wind inner rings clockwise for RFC 7946 compliance\n    }\n  }\n\n  var uncontainedHoles = []; // while there are holes left...\n\n  while (holes.length) {\n    // pop a hole off out stack\n    hole = holes.pop(); // loop over all outer rings and see if they contain our hole.\n\n    var contained = false;\n\n    for (x = outerRings.length - 1; x >= 0; x--) {\n      outerRing = outerRings[x][0];\n\n      if (coordinatesContainCoordinates(outerRing, hole)) {\n        // the hole is contained push it into our polygon\n        outerRings[x].push(hole);\n        contained = true;\n        break;\n      }\n    } // ring is not contained in any outer ring\n    // sometimes this happens https://github.com/Esri/esri-leaflet/issues/320\n\n\n    if (!contained) {\n      uncontainedHoles.push(hole);\n    }\n  } // if we couldn't match any holes using contains we can try intersects...\n\n\n  while (uncontainedHoles.length) {\n    // pop a hole off out stack\n    hole = uncontainedHoles.pop(); // loop over all outer rings and see if any intersect our hole.\n\n    var intersects = false;\n\n    for (x = outerRings.length - 1; x >= 0; x--) {\n      outerRing = outerRings[x][0];\n\n      if (arrayIntersectsArray(outerRing, hole)) {\n        // the hole is contained push it into our polygon\n        outerRings[x].push(hole);\n        intersects = true;\n        break;\n      }\n    }\n\n    if (!intersects) {\n      outerRings.push([hole.reverse()]);\n    }\n  }\n\n  if (outerRings.length === 1) {\n    return {\n      type: 'Polygon',\n      coordinates: outerRings[0]\n    };\n  } else {\n    return {\n      type: 'MultiPolygon',\n      coordinates: outerRings\n    };\n  }\n};\n\nvar getId = function getId(attributes, idAttribute) {\n  var keys = idAttribute ? [idAttribute, 'OBJECTID', 'FID'] : ['OBJECTID', 'FID'];\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (key in attributes && (typeof attributes[key] === 'string' || typeof attributes[key] === 'number')) {\n      return attributes[key];\n    }\n  }\n\n  throw Error('No valid id attribute found');\n};\n\nvar arcgisToGeoJSON = function arcgisToGeoJSON(arcgis, idAttribute) {\n  var geojson = {};\n\n  if (arcgis.features) {\n    geojson.type = 'FeatureCollection';\n    geojson.features = [];\n\n    for (var i = 0; i < arcgis.features.length; i++) {\n      geojson.features.push(arcgisToGeoJSON(arcgis.features[i], idAttribute));\n    }\n  }\n\n  if (typeof arcgis.x === 'number' && typeof arcgis.y === 'number') {\n    geojson.type = 'Point';\n    geojson.coordinates = [arcgis.x, arcgis.y];\n\n    if (typeof arcgis.z === 'number') {\n      geojson.coordinates.push(arcgis.z);\n    }\n  }\n\n  if (arcgis.points) {\n    geojson.type = 'MultiPoint';\n    geojson.coordinates = arcgis.points.slice(0);\n  }\n\n  if (arcgis.paths) {\n    if (arcgis.paths.length === 1) {\n      geojson.type = 'LineString';\n      geojson.coordinates = arcgis.paths[0].slice(0);\n    } else {\n      geojson.type = 'MultiLineString';\n      geojson.coordinates = arcgis.paths.slice(0);\n    }\n  }\n\n  if (arcgis.rings) {\n    geojson = convertRingsToGeoJSON(arcgis.rings.slice(0));\n  }\n\n  if (typeof arcgis.xmin === 'number' && typeof arcgis.ymin === 'number' && typeof arcgis.xmax === 'number' && typeof arcgis.ymax === 'number') {\n    geojson.type = 'Polygon';\n    geojson.coordinates = [[[arcgis.xmax, arcgis.ymax], [arcgis.xmin, arcgis.ymax], [arcgis.xmin, arcgis.ymin], [arcgis.xmax, arcgis.ymin], [arcgis.xmax, arcgis.ymax]]];\n  }\n\n  if (arcgis.geometry || arcgis.attributes) {\n    geojson.type = 'Feature';\n    geojson.geometry = arcgis.geometry ? arcgisToGeoJSON(arcgis.geometry) : null;\n    geojson.properties = arcgis.attributes ? shallowClone(arcgis.attributes) : null;\n\n    if (arcgis.attributes) {\n      try {\n        geojson.id = getId(arcgis.attributes, idAttribute);\n      } catch (err) {// don't set an id\n      }\n    }\n  } // if no valid geometry was encountered\n\n\n  if (JSON.stringify(geojson.geometry) === JSON.stringify({})) {\n    geojson.geometry = null;\n  }\n\n  if (arcgis.spatialReference && arcgis.spatialReference.wkid && arcgis.spatialReference.wkid !== 4326) {\n    console.warn('Object converted in non-standard crs - ' + JSON.stringify(arcgis.spatialReference));\n  }\n\n  return geojson;\n};\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n// outer rings are clockwise, holes are counterclockwise\n// used for converting GeoJSON Polygons to ArcGIS Polygons\n\n\nvar orientRings = function orientRings(poly) {\n  var output = [];\n  var polygon = poly.slice(0);\n  var outerRing = closeRing(polygon.shift().slice(0));\n\n  if (outerRing.length >= 4) {\n    if (!ringIsClockwise(outerRing)) {\n      outerRing.reverse();\n    }\n\n    output.push(outerRing);\n\n    for (var i = 0; i < polygon.length; i++) {\n      var hole = closeRing(polygon[i].slice(0));\n\n      if (hole.length >= 4) {\n        if (ringIsClockwise(hole)) {\n          hole.reverse();\n        }\n\n        output.push(hole);\n      }\n    }\n  }\n\n  return output;\n}; // This function flattens holes in multipolygons to one array of polygons\n// used for converting GeoJSON Polygons to ArcGIS Polygons\n\n\nvar flattenMultiPolygonRings = function flattenMultiPolygonRings(rings) {\n  var output = [];\n\n  for (var i = 0; i < rings.length; i++) {\n    var polygon = orientRings(rings[i]);\n\n    for (var x = polygon.length - 1; x >= 0; x--) {\n      var ring = polygon[x].slice(0);\n      output.push(ring);\n    }\n  }\n\n  return output;\n};\n\nvar geojsonToArcGIS = function geojsonToArcGIS(geojson, idAttribute) {\n  idAttribute = idAttribute || 'OBJECTID';\n  var spatialReference = {\n    wkid: 4326\n  };\n  var result = {};\n  var i;\n\n  switch (geojson.type) {\n    case 'Point':\n      result.x = geojson.coordinates[0];\n      result.y = geojson.coordinates[1];\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'MultiPoint':\n      result.points = geojson.coordinates.slice(0);\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'LineString':\n      result.paths = [geojson.coordinates.slice(0)];\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'MultiLineString':\n      result.paths = geojson.coordinates.slice(0);\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'Polygon':\n      result.rings = orientRings(geojson.coordinates.slice(0));\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'MultiPolygon':\n      result.rings = flattenMultiPolygonRings(geojson.coordinates.slice(0));\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'Feature':\n      if (geojson.geometry) {\n        result.geometry = geojsonToArcGIS(geojson.geometry, idAttribute);\n      }\n\n      result.attributes = geojson.properties ? shallowClone(geojson.properties) : {};\n\n      if (geojson.id) {\n        result.attributes[idAttribute] = geojson.id;\n      }\n\n      break;\n\n    case 'FeatureCollection':\n      result = [];\n\n      for (i = 0; i < geojson.features.length; i++) {\n        result.push(geojsonToArcGIS(geojson.features[i], idAttribute));\n      }\n\n      break;\n\n    case 'GeometryCollection':\n      result = [];\n\n      for (i = 0; i < geojson.geometries.length; i++) {\n        result.push(geojsonToArcGIS(geojson.geometries[i], idAttribute));\n      }\n\n      break;\n  }\n\n  return result;\n};\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\n\nexport { arcgisToGeoJSON, geojsonToArcGIS };","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/@terraformer/arcgis/dist/t-arcgis.esm.js"],"names":["edgeIntersectsEdge","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","coordinatesContainPoint","coordinates","point","contains","i","l","length","j","pointsEqual","a","b","arrayIntersectsArray","closeRing","push","ringIsClockwise","ringToTest","total","rLength","pt1","pt2","shallowClone","obj","target","hasOwnProperty","coordinatesContainCoordinates","outer","inner","intersects","convertRingsToGeoJSON","rings","outerRings","holes","x","outerRing","hole","r","ring","slice","polygon","reverse","uncontainedHoles","pop","contained","type","getId","attributes","idAttribute","keys","key","Error","arcgisToGeoJSON","arcgis","geojson","features","y","z","points","paths","xmin","ymin","xmax","ymax","geometry","properties","id","err","JSON","stringify","spatialReference","wkid","console","warn","orientRings","poly","output","shift","flattenMultiPolygonRings","geojsonToArcGIS","result","geometries"],"mappings":"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","sourcesContent":["/* @preserve\n* @terraformer/arcgis - v2.0.6 - MIT\n* Copyright (c) 2012-2020 Environmental Systems Research Institute, Inc.\n* Mon May 18 2020 14:30:35 GMT-0700 (Pacific Daylight Time)\n*/\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nvar edgeIntersectsEdge = function edgeIntersectsEdge(a1, a2, b1, b2) {\n  var uaT = (b2[0] - b1[0]) * (a1[1] - b1[1]) - (b2[1] - b1[1]) * (a1[0] - b1[0]);\n  var ubT = (a2[0] - a1[0]) * (a1[1] - b1[1]) - (a2[1] - a1[1]) * (a1[0] - b1[0]);\n  var uB = (b2[1] - b1[1]) * (a2[0] - a1[0]) - (b2[0] - b1[0]) * (a2[1] - a1[1]);\n\n  if (uB !== 0) {\n    var ua = uaT / uB;\n    var ub = ubT / uB;\n\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n      return true;\n    }\n  }\n\n  return false;\n};\nvar coordinatesContainPoint = function coordinatesContainPoint(coordinates, point) {\n  var contains = false;\n\n  for (var i = -1, l = coordinates.length, j = l - 1; ++i < l; j = i) {\n    if ((coordinates[i][1] <= point[1] && point[1] < coordinates[j][1] || coordinates[j][1] <= point[1] && point[1] < coordinates[i][1]) && point[0] < (coordinates[j][0] - coordinates[i][0]) * (point[1] - coordinates[i][1]) / (coordinates[j][1] - coordinates[i][1]) + coordinates[i][0]) {\n      contains = !contains;\n    }\n  }\n\n  return contains;\n};\nvar pointsEqual = function pointsEqual(a, b) {\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\nvar arrayIntersectsArray = function arrayIntersectsArray(a, b) {\n  for (var i = 0; i < a.length - 1; i++) {\n    for (var j = 0; j < b.length - 1; j++) {\n      if (edgeIntersectsEdge(a[i], a[i + 1], b[j], b[j + 1])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nvar closeRing = function closeRing(coordinates) {\n  if (!pointsEqual(coordinates[0], coordinates[coordinates.length - 1])) {\n    coordinates.push(coordinates[0]);\n  }\n\n  return coordinates;\n}; // determine if polygon ring coordinates are clockwise. clockwise signifies outer ring, counter-clockwise an inner ring\n// or hole. this logic was found at http://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-\n// points-are-in-clockwise-order\n\nvar ringIsClockwise = function ringIsClockwise(ringToTest) {\n  var total = 0;\n  var i = 0;\n  var rLength = ringToTest.length;\n  var pt1 = ringToTest[i];\n  var pt2;\n\n  for (i; i < rLength - 1; i++) {\n    pt2 = ringToTest[i + 1];\n    total += (pt2[0] - pt1[0]) * (pt2[1] + pt1[1]);\n    pt1 = pt2;\n  }\n\n  return total >= 0;\n}; // This function ensures that rings are oriented in the right directions\n// from http://jsperf.com/cloning-an-object/2\n\nvar shallowClone = function shallowClone(obj) {\n  var target = {};\n\n  for (var i in obj) {\n    // both arcgis attributes and geojson props are just hardcoded keys\n    if (obj.hasOwnProperty(i)) {\n      // eslint-disable-line no-prototype-builtins\n      target[i] = obj[i];\n    }\n  }\n\n  return target;\n};\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nvar coordinatesContainCoordinates = function coordinatesContainCoordinates(outer, inner) {\n  var intersects = arrayIntersectsArray(outer, inner);\n  var contains = coordinatesContainPoint(outer, inner[0]);\n\n  if (!intersects && contains) {\n    return true;\n  }\n\n  return false;\n}; // do any polygons in this array contain any other polygons in this array?\n// used for checking for holes in arcgis rings\n\n\nvar convertRingsToGeoJSON = function convertRingsToGeoJSON(rings) {\n  var outerRings = [];\n  var holes = [];\n  var x; // iterator\n\n  var outerRing; // current outer ring being evaluated\n\n  var hole; // current hole being evaluated\n  // for each ring\n\n  for (var r = 0; r < rings.length; r++) {\n    var ring = closeRing(rings[r].slice(0));\n\n    if (ring.length < 4) {\n      continue;\n    } // is this ring an outer ring? is it clockwise?\n\n\n    if (ringIsClockwise(ring)) {\n      var polygon = [ring.slice().reverse()]; // wind outer rings counterclockwise for RFC 7946 compliance\n\n      outerRings.push(polygon); // push to outer rings\n    } else {\n      holes.push(ring.slice().reverse()); // wind inner rings clockwise for RFC 7946 compliance\n    }\n  }\n\n  var uncontainedHoles = []; // while there are holes left...\n\n  while (holes.length) {\n    // pop a hole off out stack\n    hole = holes.pop(); // loop over all outer rings and see if they contain our hole.\n\n    var contained = false;\n\n    for (x = outerRings.length - 1; x >= 0; x--) {\n      outerRing = outerRings[x][0];\n\n      if (coordinatesContainCoordinates(outerRing, hole)) {\n        // the hole is contained push it into our polygon\n        outerRings[x].push(hole);\n        contained = true;\n        break;\n      }\n    } // ring is not contained in any outer ring\n    // sometimes this happens https://github.com/Esri/esri-leaflet/issues/320\n\n\n    if (!contained) {\n      uncontainedHoles.push(hole);\n    }\n  } // if we couldn't match any holes using contains we can try intersects...\n\n\n  while (uncontainedHoles.length) {\n    // pop a hole off out stack\n    hole = uncontainedHoles.pop(); // loop over all outer rings and see if any intersect our hole.\n\n    var intersects = false;\n\n    for (x = outerRings.length - 1; x >= 0; x--) {\n      outerRing = outerRings[x][0];\n\n      if (arrayIntersectsArray(outerRing, hole)) {\n        // the hole is contained push it into our polygon\n        outerRings[x].push(hole);\n        intersects = true;\n        break;\n      }\n    }\n\n    if (!intersects) {\n      outerRings.push([hole.reverse()]);\n    }\n  }\n\n  if (outerRings.length === 1) {\n    return {\n      type: 'Polygon',\n      coordinates: outerRings[0]\n    };\n  } else {\n    return {\n      type: 'MultiPolygon',\n      coordinates: outerRings\n    };\n  }\n};\n\nvar getId = function getId(attributes, idAttribute) {\n  var keys = idAttribute ? [idAttribute, 'OBJECTID', 'FID'] : ['OBJECTID', 'FID'];\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (key in attributes && (typeof attributes[key] === 'string' || typeof attributes[key] === 'number')) {\n      return attributes[key];\n    }\n  }\n\n  throw Error('No valid id attribute found');\n};\n\nvar arcgisToGeoJSON = function arcgisToGeoJSON(arcgis, idAttribute) {\n  var geojson = {};\n\n  if (arcgis.features) {\n    geojson.type = 'FeatureCollection';\n    geojson.features = [];\n\n    for (var i = 0; i < arcgis.features.length; i++) {\n      geojson.features.push(arcgisToGeoJSON(arcgis.features[i], idAttribute));\n    }\n  }\n\n  if (typeof arcgis.x === 'number' && typeof arcgis.y === 'number') {\n    geojson.type = 'Point';\n    geojson.coordinates = [arcgis.x, arcgis.y];\n\n    if (typeof arcgis.z === 'number') {\n      geojson.coordinates.push(arcgis.z);\n    }\n  }\n\n  if (arcgis.points) {\n    geojson.type = 'MultiPoint';\n    geojson.coordinates = arcgis.points.slice(0);\n  }\n\n  if (arcgis.paths) {\n    if (arcgis.paths.length === 1) {\n      geojson.type = 'LineString';\n      geojson.coordinates = arcgis.paths[0].slice(0);\n    } else {\n      geojson.type = 'MultiLineString';\n      geojson.coordinates = arcgis.paths.slice(0);\n    }\n  }\n\n  if (arcgis.rings) {\n    geojson = convertRingsToGeoJSON(arcgis.rings.slice(0));\n  }\n\n  if (typeof arcgis.xmin === 'number' && typeof arcgis.ymin === 'number' && typeof arcgis.xmax === 'number' && typeof arcgis.ymax === 'number') {\n    geojson.type = 'Polygon';\n    geojson.coordinates = [[[arcgis.xmax, arcgis.ymax], [arcgis.xmin, arcgis.ymax], [arcgis.xmin, arcgis.ymin], [arcgis.xmax, arcgis.ymin], [arcgis.xmax, arcgis.ymax]]];\n  }\n\n  if (arcgis.geometry || arcgis.attributes) {\n    geojson.type = 'Feature';\n    geojson.geometry = arcgis.geometry ? arcgisToGeoJSON(arcgis.geometry) : null;\n    geojson.properties = arcgis.attributes ? shallowClone(arcgis.attributes) : null;\n\n    if (arcgis.attributes) {\n      try {\n        geojson.id = getId(arcgis.attributes, idAttribute);\n      } catch (err) {// don't set an id\n      }\n    }\n  } // if no valid geometry was encountered\n\n\n  if (JSON.stringify(geojson.geometry) === JSON.stringify({})) {\n    geojson.geometry = null;\n  }\n\n  if (arcgis.spatialReference && arcgis.spatialReference.wkid && arcgis.spatialReference.wkid !== 4326) {\n    console.warn('Object converted in non-standard crs - ' + JSON.stringify(arcgis.spatialReference));\n  }\n\n  return geojson;\n};\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n// outer rings are clockwise, holes are counterclockwise\n// used for converting GeoJSON Polygons to ArcGIS Polygons\n\nvar orientRings = function orientRings(poly) {\n  var output = [];\n  var polygon = poly.slice(0);\n  var outerRing = closeRing(polygon.shift().slice(0));\n\n  if (outerRing.length >= 4) {\n    if (!ringIsClockwise(outerRing)) {\n      outerRing.reverse();\n    }\n\n    output.push(outerRing);\n\n    for (var i = 0; i < polygon.length; i++) {\n      var hole = closeRing(polygon[i].slice(0));\n\n      if (hole.length >= 4) {\n        if (ringIsClockwise(hole)) {\n          hole.reverse();\n        }\n\n        output.push(hole);\n      }\n    }\n  }\n\n  return output;\n}; // This function flattens holes in multipolygons to one array of polygons\n// used for converting GeoJSON Polygons to ArcGIS Polygons\n\n\nvar flattenMultiPolygonRings = function flattenMultiPolygonRings(rings) {\n  var output = [];\n\n  for (var i = 0; i < rings.length; i++) {\n    var polygon = orientRings(rings[i]);\n\n    for (var x = polygon.length - 1; x >= 0; x--) {\n      var ring = polygon[x].slice(0);\n      output.push(ring);\n    }\n  }\n\n  return output;\n};\n\nvar geojsonToArcGIS = function geojsonToArcGIS(geojson, idAttribute) {\n  idAttribute = idAttribute || 'OBJECTID';\n  var spatialReference = {\n    wkid: 4326\n  };\n  var result = {};\n  var i;\n\n  switch (geojson.type) {\n    case 'Point':\n      result.x = geojson.coordinates[0];\n      result.y = geojson.coordinates[1];\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'MultiPoint':\n      result.points = geojson.coordinates.slice(0);\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'LineString':\n      result.paths = [geojson.coordinates.slice(0)];\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'MultiLineString':\n      result.paths = geojson.coordinates.slice(0);\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'Polygon':\n      result.rings = orientRings(geojson.coordinates.slice(0));\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'MultiPolygon':\n      result.rings = flattenMultiPolygonRings(geojson.coordinates.slice(0));\n      result.spatialReference = spatialReference;\n      break;\n\n    case 'Feature':\n      if (geojson.geometry) {\n        result.geometry = geojsonToArcGIS(geojson.geometry, idAttribute);\n      }\n\n      result.attributes = geojson.properties ? shallowClone(geojson.properties) : {};\n\n      if (geojson.id) {\n        result.attributes[idAttribute] = geojson.id;\n      }\n\n      break;\n\n    case 'FeatureCollection':\n      result = [];\n\n      for (i = 0; i < geojson.features.length; i++) {\n        result.push(geojsonToArcGIS(geojson.features[i], idAttribute));\n      }\n\n      break;\n\n    case 'GeometryCollection':\n      result = [];\n\n      for (i = 0; i < geojson.geometries.length; i++) {\n        result.push(geojsonToArcGIS(geojson.geometries[i], idAttribute));\n      }\n\n      break;\n  }\n\n  return result;\n};\n\n/* Copyright (c) 2012-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nexport { arcgisToGeoJSON, geojsonToArcGIS };\n"]},"metadata":{},"sourceType":"module"}
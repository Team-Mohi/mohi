{"ast":null,"code":"import _toConsumableArray from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\Web\\\\mohi\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as Types from'./../Constants/ActionTypes.jsx';var initialState={loading:true,list:[]};var findItem=function findItem(arr,id){var result={index:-1,item:''};arr.forEach(function(item,i){if(item.id===id){result.index=i;result.item=item;}});return result;};export var message=function message(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case Types.REQUEST_MESSAGE_POPUP:return _objectSpread({},state);break;case Types.RESPONSE_MESSAGE_POPUP:return{loading:!state.loading,list:action.payload};break;case Types.ADD_NEW_MESSAGE_OF_LIST:if(action.payload.type==='send'){//find message of usereceived\nvar messReceived=findItem(state.list,action.payload.to.id);if(messReceived.index>=0){state.list[messReceived.index].pivot=action.payload.message[0];}else{var newMessOfList=action.payload.to;newMessOfList.pivot={};var newMess=action.payload.message[0];newMessOfList.pivot.messages_Message=newMess.messages_Message;newMessOfList.pivot.id=newMess.id;newMessOfList.pivot.messages_To=newMess.messages_To;newMessOfList.pivot.messages_From=newMess.messages_From;newMessOfList.pivot.messages_ReadAt=newMess.messages_ReadAt;newMessOfList.pivot.created_at=newMess.created_at;state.list=[newMessOfList].concat(_toConsumableArray(state.list));}}if(action.payload.type==='received'){//find message of send\nvar messSend=findItem(state.list,action.payload.from.id);if(messSend.index>=0){state.list[messSend.index].pivot=action.payload.message[0];}else{var newMessOfList=action.payload.from;newMessOfList.pivot={};var newMess=action.payload.message[0];newMessOfList.pivot.messages_Message=newMess.messages_Message;newMessOfList.pivot.id=newMess.id;newMessOfList.pivot.messages_To=newMess.messages_To;newMessOfList.pivot.messages_From=newMess.messages_From;newMessOfList.pivot.messages_ReadAt=newMess.messages_ReadAt;newMessOfList.pivot.created_at=newMess.created_at;state.list=[newMessOfList].concat(_toConsumableArray(state.list));}}return _objectSpread({},state);break;case Types.READ_MESSAGE_OF_LIST:var mess=findItem(state.list,action.payload.clientId);if(mess.index>=0){state.list[mess.index].pivot.messages_ReadAt='read';}return _objectSpread({},state);break;default:return _objectSpread({},state);}};","map":{"version":3,"sources":["D:/Web/mohi/client/src/Reducers/Message.jsx"],"names":["Types","initialState","loading","list","findItem","arr","id","result","index","item","forEach","i","message","state","action","type","REQUEST_MESSAGE_POPUP","RESPONSE_MESSAGE_POPUP","payload","ADD_NEW_MESSAGE_OF_LIST","messReceived","to","pivot","newMessOfList","newMess","messages_Message","messages_To","messages_From","messages_ReadAt","created_at","messSend","from","READ_MESSAGE_OF_LIST","mess","clientId"],"mappings":"ySAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,gCAAvB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,OAAO,CAAC,IADW,CAEnBC,IAAI,CAAG,EAFY,CAArB,CAKA,GAAIC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAMC,EAAN,CAAa,CAC1B,GAAIC,CAAAA,MAAM,CAAG,CACXC,KAAK,CAAE,CAAC,CADG,CAEXC,IAAI,CAAE,EAFK,CAAb,CAKAJ,GAAG,CAACK,OAAJ,CAAY,SAACD,IAAD,CAAOE,CAAP,CAAa,CACvB,GAAGF,IAAI,CAACH,EAAL,GAAYA,EAAf,CAAkB,CAChBC,MAAM,CAACC,KAAP,CAAeG,CAAf,CACAJ,MAAM,CAACE,IAAP,CAAcA,IAAd,CACD,CACF,CALD,EAOA,MAAOF,CAAAA,MAAP,CACD,CAdD,CAgBA,MAAO,IAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBZ,YAAyB,IAAXa,CAAAA,MAAW,2CACvD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKf,CAAAA,KAAK,CAACgB,qBAAX,CACE,wBACKH,KADL,EAGA,MACF,IAAKb,CAAAA,KAAK,CAACiB,sBAAX,CACE,MAAO,CACLf,OAAO,CAAE,CAACW,KAAK,CAACX,OADX,CAELC,IAAI,CAAEW,MAAM,CAACI,OAFR,CAAP,CAIA,MACF,IAAKlB,CAAAA,KAAK,CAACmB,uBAAX,CACE,GAAGL,MAAM,CAACI,OAAP,CAAeH,IAAf,GAAwB,MAA3B,CAAkC,CAChC;AACE,GAAIK,CAAAA,YAAY,CAAGhB,QAAQ,CAACS,KAAK,CAACV,IAAP,CAAaW,MAAM,CAACI,OAAP,CAAeG,EAAf,CAAkBf,EAA/B,CAA3B,CAEA,GAAGc,YAAY,CAACZ,KAAb,EAAsB,CAAzB,CAA2B,CACzBK,KAAK,CAACV,IAAN,CAAWiB,YAAY,CAACZ,KAAxB,EAA+Bc,KAA/B,CAAuCR,MAAM,CAACI,OAAP,CAAeN,OAAf,CAAuB,CAAvB,CAAvC,CACD,CAFD,IAEM,CAEJ,GAAIW,CAAAA,aAAa,CAAGT,MAAM,CAACI,OAAP,CAAeG,EAAnC,CACAE,aAAa,CAACD,KAAd,CAAsB,EAAtB,CAEA,GAAIE,CAAAA,OAAO,CAAGV,MAAM,CAACI,OAAP,CAAeN,OAAf,CAAuB,CAAvB,CAAd,CAEAW,aAAa,CAACD,KAAd,CAAoBG,gBAApB,CAAuCD,OAAO,CAACC,gBAA/C,CACAF,aAAa,CAACD,KAAd,CAAoBhB,EAApB,CAAyBkB,OAAO,CAAClB,EAAjC,CACAiB,aAAa,CAACD,KAAd,CAAoBI,WAApB,CAAkCF,OAAO,CAACE,WAA1C,CACAH,aAAa,CAACD,KAAd,CAAoBK,aAApB,CAAoCH,OAAO,CAACG,aAA5C,CACAJ,aAAa,CAACD,KAAd,CAAoBM,eAApB,CAAsCJ,OAAO,CAACI,eAA9C,CACAL,aAAa,CAACD,KAAd,CAAoBO,UAApB,CAAiCL,OAAO,CAACK,UAAzC,CAEAhB,KAAK,CAACV,IAAN,EAAcoB,aAAd,4BAAgCV,KAAK,CAACV,IAAtC,GAED,CACJ,CAED,GAAGW,MAAM,CAACI,OAAP,CAAeH,IAAf,GAAwB,UAA3B,CAAsC,CACpC;AACE,GAAIe,CAAAA,QAAQ,CAAG1B,QAAQ,CAACS,KAAK,CAACV,IAAP,CAAaW,MAAM,CAACI,OAAP,CAAea,IAAf,CAAoBzB,EAAjC,CAAvB,CAEA,GAAGwB,QAAQ,CAACtB,KAAT,EAAkB,CAArB,CAAuB,CACrBK,KAAK,CAACV,IAAN,CAAW2B,QAAQ,CAACtB,KAApB,EAA2Bc,KAA3B,CAAmCR,MAAM,CAACI,OAAP,CAAeN,OAAf,CAAuB,CAAvB,CAAnC,CAED,CAHD,IAGM,CAEJ,GAAIW,CAAAA,aAAa,CAAGT,MAAM,CAACI,OAAP,CAAea,IAAnC,CACAR,aAAa,CAACD,KAAd,CAAsB,EAAtB,CAEA,GAAIE,CAAAA,OAAO,CAAGV,MAAM,CAACI,OAAP,CAAeN,OAAf,CAAuB,CAAvB,CAAd,CAEAW,aAAa,CAACD,KAAd,CAAoBG,gBAApB,CAAuCD,OAAO,CAACC,gBAA/C,CACAF,aAAa,CAACD,KAAd,CAAoBhB,EAApB,CAAyBkB,OAAO,CAAClB,EAAjC,CACAiB,aAAa,CAACD,KAAd,CAAoBI,WAApB,CAAkCF,OAAO,CAACE,WAA1C,CACAH,aAAa,CAACD,KAAd,CAAoBK,aAApB,CAAoCH,OAAO,CAACG,aAA5C,CACAJ,aAAa,CAACD,KAAd,CAAoBM,eAApB,CAAsCJ,OAAO,CAACI,eAA9C,CACAL,aAAa,CAACD,KAAd,CAAoBO,UAApB,CAAiCL,OAAO,CAACK,UAAzC,CAEAhB,KAAK,CAACV,IAAN,EAAcoB,aAAd,4BAAgCV,KAAK,CAACV,IAAtC,GACD,CAEJ,CAED,wBAAWU,KAAX,EACA,MACF,IAAKb,CAAAA,KAAK,CAACgC,oBAAX,CAEE,GAAIC,CAAAA,IAAI,CAAG7B,QAAQ,CAACS,KAAK,CAACV,IAAP,CAAaW,MAAM,CAACI,OAAP,CAAegB,QAA5B,CAAnB,CAEA,GAAGD,IAAI,CAACzB,KAAL,EAAc,CAAjB,CAAmB,CACjBK,KAAK,CAACV,IAAN,CAAW8B,IAAI,CAACzB,KAAhB,EAAuBc,KAAvB,CAA6BM,eAA7B,CAA+C,MAA/C,CACD,CAED,wBAAWf,KAAX,EACA,MACF,QAAS,wBAAWA,KAAX,EA5EX,CA8ED,CA/EM","sourcesContent":["import * as Types from './../Constants/ActionTypes.jsx';\r\n\r\nconst initialState = {\r\n  loading:true,\r\n  list : []\r\n};\r\n\r\nvar findItem = (arr, id) => {\r\n  var result = {\r\n    index: -1,\r\n    item: ''\r\n  };\r\n\r\n  arr.forEach((item, i) => {\r\n    if(item.id === id){\r\n      result.index = i;\r\n      result.item = item;\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport const message = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.REQUEST_MESSAGE_POPUP:\r\n      return {\r\n        ...state\r\n      }\r\n      break;\r\n    case Types.RESPONSE_MESSAGE_POPUP:\r\n      return {\r\n        loading: !state.loading,\r\n        list: action.payload\r\n      }\r\n      break;\r\n    case Types.ADD_NEW_MESSAGE_OF_LIST:\r\n      if(action.payload.type === 'send'){\r\n        //find message of usereceived\r\n          var messReceived = findItem(state.list, action.payload.to.id);\r\n\r\n          if(messReceived.index >= 0){\r\n            state.list[messReceived.index].pivot = action.payload.message[0];\r\n          }else {\r\n\r\n            var newMessOfList = action.payload.to;\r\n            newMessOfList.pivot = {};\r\n\r\n            var newMess = action.payload.message[0];\r\n\r\n            newMessOfList.pivot.messages_Message = newMess.messages_Message;\r\n            newMessOfList.pivot.id = newMess.id;\r\n            newMessOfList.pivot.messages_To = newMess.messages_To;\r\n            newMessOfList.pivot.messages_From = newMess.messages_From;\r\n            newMessOfList.pivot.messages_ReadAt = newMess.messages_ReadAt;\r\n            newMessOfList.pivot.created_at = newMess.created_at;\r\n\r\n            state.list = [newMessOfList, ...state.list]\r\n\r\n          }\r\n      }\r\n\r\n      if(action.payload.type === 'received'){\r\n        //find message of send\r\n          var messSend = findItem(state.list, action.payload.from.id);\r\n\r\n          if(messSend.index >= 0){\r\n            state.list[messSend.index].pivot = action.payload.message[0];\r\n\r\n          }else {\r\n\r\n            var newMessOfList = action.payload.from;\r\n            newMessOfList.pivot = {};\r\n\r\n            var newMess = action.payload.message[0];\r\n\r\n            newMessOfList.pivot.messages_Message = newMess.messages_Message;\r\n            newMessOfList.pivot.id = newMess.id;\r\n            newMessOfList.pivot.messages_To = newMess.messages_To;\r\n            newMessOfList.pivot.messages_From = newMess.messages_From;\r\n            newMessOfList.pivot.messages_ReadAt = newMess.messages_ReadAt;\r\n            newMessOfList.pivot.created_at = newMess.created_at;\r\n\r\n            state.list = [newMessOfList, ...state.list]\r\n          }\r\n\r\n      }\r\n\r\n      return {...state}\r\n      break;\r\n    case Types.READ_MESSAGE_OF_LIST:\r\n\r\n      var mess = findItem(state.list, action.payload.clientId);\r\n\r\n      if(mess.index >= 0){\r\n        state.list[mess.index].pivot.messages_ReadAt = 'read';\r\n      }\r\n\r\n      return {...state}\r\n      break;\r\n    default: return {...state}\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\app\\\\Authen\\\\VeriCodeForm.jsx\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\n\nvar CryptoJS = require(\"crypto-js\");\n\nfunction VeriCode() {\n  const history = useHistory();\n  console.log(history);\n  const code_encrypt = history.location.state ? history.location.state.code : '';\n\n  if (!code_encrypt) {\n    history.push('/');\n  } //  Giải mã code\n\n\n  let bytes = CryptoJS.AES.decrypt(code_encrypt, 'code_veri');\n  let code = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  const message = history.location.state.message;\n  const user_email = history.location.state.user_email;\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"veri-code-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"X\\xE1c nh\\u1EADn m\\xE3\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"veri-code-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, message, \" \", user_email, \". Vui l\\xF2ng ki\\u1EC3m tra v\\xE0 ti\\u1EBFp t\\u1EE5c ho\\xE0n th\\xE0nh qu\\xE1 tr\\xECnh \\u0111\\u0103ng k\\xED t\\xE0i kho\\u1EA3n\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-veri-code-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"M\\xE3 code:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"code\",\n    id: \"code\",\n    placeholder: \"Nh\\u1EADp m\\xE3 g\\u1ED3m 6 s\\u1ED1...\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-veri-code-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"X\\xE1c nh\\u1EADn\"))));\n}\n\nexport default VeriCode;","map":{"version":3,"sources":["D:/Web/mohi/client/src/app/Authen/VeriCodeForm.jsx"],"names":["React","useState","useHistory","useForm","CryptoJS","require","VeriCode","history","console","log","code_encrypt","location","state","code","push","bytes","AES","decrypt","JSON","parse","toString","enc","Utf8","message","user_email","register","handleSubmit","errors","onSubmit","data","required"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,YAAY,GAAGH,OAAO,CAACI,QAAR,CAAiBC,KAAjB,GAAyBL,OAAO,CAACI,QAAR,CAAiBC,KAAjB,CAAuBC,IAAhD,GAAuD,EAA5E;;AACA,MAAI,CAACH,YAAL,EAAmB;AACjBH,IAAAA,OAAO,CAACO,IAAR,CAAa,GAAb;AACD,GANiB,CAOlB;;;AACA,MAAIC,KAAK,GAAGX,QAAQ,CAACY,GAAT,CAAaC,OAAb,CAAqBP,YAArB,EAAmC,WAAnC,CAAZ;AACA,MAAIG,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,QAAN,CAAehB,QAAQ,CAACiB,GAAT,CAAaC,IAA5B,CAAX,CAAX;AACA,QAAMC,OAAO,GAAGhB,OAAO,CAACI,QAAR,CAAiBC,KAAjB,CAAuBW,OAAvC;AACA,QAAMC,UAAU,GAAGjB,OAAO,CAACI,QAAR,CAAiBC,KAAjB,CAAuBY,UAA1C;AACA,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAmCxB,OAAO,EAAhD;;AAEA,QAAMyB,QAAQ,GAAIC,IAAD,IAAU;AACzBrB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAZ;AACD,GAFD;;AAIA,sBAAQ;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN;AAAM,IAAA,QAAQ,EAAEH,YAAY,CAACE,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEA;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCL,OAApC,OAA8CC,UAA9C,iIAFA,eAGE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAGE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,EAAE,EAAC,MAAlC;AAAyC,IAAA,WAAW,EAAC,uCAArD;AAA2E,IAAA,GAAG,EAAEC,QAAQ,CAAC;AAACK,MAAAA,QAAQ,EAAE;AAAX,KAAD,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHF,eAQE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CARF,CADM,CAAR;AAcD;;AAED,eAAexB,QAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useForm} from 'react-hook-form';\r\n\r\nvar CryptoJS = require(\"crypto-js\");\r\n\r\nfunction VeriCode() {\r\n  const history = useHistory();\r\n  console.log(history);\r\n  const code_encrypt = history.location.state ? history.location.state.code : '';\r\n  if (!code_encrypt) {\r\n    history.push('/')\r\n  }\r\n  //  Giải mã code\r\n  let bytes = CryptoJS.AES.decrypt(code_encrypt, 'code_veri');\r\n  let code = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n  const message = history.location.state.message;\r\n  const user_email = history.location.state.user_email;\r\n  const {register, handleSubmit, errors} = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  }\r\n\r\n  return (<div className=\"veri-code-container\">\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <h2>Xác nhận mã</h2>\r\n    <div className=\"veri-code-message\">{message} {user_email}. Vui lòng kiểm tra và tiếp tục hoàn thành quá trình đăng kí tài khoản</div>\r\n      <div className=\"form-veri-code-group\">\r\n        <label htmlFor=\"code\">Mã code:\r\n        </label>\r\n        <input type=\"text\" name=\"code\" id=\"code\" placeholder=\"Nhập mã gồm 6 số...\" ref={register({required: true})}/>\r\n      </div>\r\n      <div className=\"form-veri-code-group\">\r\n        <button type=\"submit\">Xác nhận</button>\r\n      </div>\r\n    </form>\r\n  </div>)\r\n}\r\n\r\nexport default VeriCode;\r\n"]},"metadata":{},"sourceType":"module"}
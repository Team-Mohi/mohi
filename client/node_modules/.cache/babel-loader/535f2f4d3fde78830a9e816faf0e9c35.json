{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\NewFeed\\\\CommentEditor.jsx\";\nimport React, { Component } from \"react\";\nimport Editor, { createEditorStateWithText } from \"draft-js-plugins-editor\";\nimport createEmojiPlugin from \"draft-js-emoji-plugin\";\nimport { convertToRaw } from \"draft-js\";\nimport \"draft-js-emoji-plugin/lib/plugin.css\";\nimport style from 'styled-components';\nimport draftToHtml from 'draftjs-to-html';\nconst emojiPlugin = createEmojiPlugin({\n  useNativeArt: true\n});\nconst {\n  EmojiSuggestions,\n  EmojiSelect\n} = emojiPlugin;\nconst plugins = [emojiPlugin];\nconst text = ``;\nconst StyleEditor = style.div`\n  width: 100%;\n  max-height: 100px;\n  overflow-y: auto;\n  border: 1px solid #ddd;\n  margin-left: 10px;\n  font-size: 14px;\n  padding: 5px 10px;\n  border-radius: 30px;\n`;\nconst Wrapper = style.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\nconst StyleEmoji = style.div`\n  position: absolute;\n  right: 10px;\n  border: 0;\n  z-index: 2;\n`;\nexport default class CommentEditor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editorState: createEditorStateWithText(text)\n    };\n\n    this.onChange = editorState => {\n      this.setState({\n        editorState\n      });\n      const value = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n      this.props.onChangeCommentEditor(value);\n    };\n  }\n\n  focusCommentInput() {\n    this.commentInput.focus();\n  }\n\n  keyBindingFn(e) {\n    if (e.key === 'Enter') {\n      return 'submit-comment'; // name this whatever you want\n    } // This wasn't the delete key, so we return Draft's default command for this key\n\n\n    return Draft.getDefaultKeyBinding(e);\n  }\n\n  handleKeyCommand() {\n    if (command === 'submit-comment') {\n      // Do what you want to here, then tell Draft that we've taken care of this command\n      return 'handled';\n    } // This wasn't the 'delete-me' command, so we want Draft to handle it instead.\n    // We do this by telling Draft we haven't handled it.\n\n\n    return 'not-handled';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyleEditor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      keyBindingFn: this.keyBindingFn,\n      handleKeyCommand: this.handleKeyCommand,\n      editorState: this.state.editorState,\n      onChange: this.onChange,\n      plugins: plugins,\n      placeholder: \"Vi\\u1EBFt b\\xECnh lu\\u1EADn...\",\n      ref: element => {\n        this.commentInput = element;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(EmojiSuggestions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(StyleEmoji, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(EmojiSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/NewFeed/CommentEditor.jsx"],"names":["React","Component","Editor","createEditorStateWithText","createEmojiPlugin","convertToRaw","style","draftToHtml","emojiPlugin","useNativeArt","EmojiSuggestions","EmojiSelect","plugins","text","StyleEditor","div","Wrapper","StyleEmoji","CommentEditor","state","editorState","onChange","setState","value","getCurrentContent","props","onChangeCommentEditor","focusCommentInput","commentInput","focus","keyBindingFn","e","key","Draft","getDefaultKeyBinding","handleKeyCommand","command","render","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,yBAAjB,QAAiD,yBAAjD;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,SAAQC,YAAR,QAA2B,UAA3B;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,MAAMC,WAAW,GAAGJ,iBAAiB,CAAC;AACpCK,EAAAA,YAAY,EAAE;AADsB,CAAD,CAArC;AAGA,MAAM;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,IAAoCH,WAA1C;AACA,MAAMI,OAAO,GAAG,CAACJ,WAAD,CAAhB;AACA,MAAMK,IAAI,GAAI,EAAd;AAEA,MAAMC,WAAW,GAAGR,KAAK,CAACS,GAAI;;;;;;;;;CAA9B;AAWA,MAAMC,OAAO,GAAGV,KAAK,CAACS,GAAI;;;;CAA1B;AAMA,MAAME,UAAU,GAAGX,KAAK,CAACS,GAAI;;;;;CAA7B;AAOA,eAAe,MAAMG,aAAN,SAA4BjB,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACjDkB,KADiD,GACzC;AACNC,MAAAA,WAAW,EAAEjB,yBAAyB,CAACU,IAAD;AADhC,KADyC;;AAAA,SAKnDQ,QALmD,GAKvCD,WAAD,IAAiB;AAC1B,WAAKE,QAAL,CAAc;AACZF,QAAAA;AADY,OAAd;AAGA,YAAMG,KAAK,GAAGhB,WAAW,CAACF,YAAY,CAACe,WAAW,CAACI,iBAAZ,EAAD,CAAb,CAAzB;AACA,WAAKC,KAAL,CAAWC,qBAAX,CAAiCH,KAAjC;AACD,KAXkD;AAAA;;AAanDI,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,YAAL,CAAkBC,KAAlB;AACD;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAG;AACb,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrB,aAAO,gBAAP,CADqB,CACG;AACzB,KAHY,CAKb;;;AACA,WAAOC,KAAK,CAACC,oBAAN,CAA2BH,CAA3B,CAAP;AACD;;AAEDI,EAAAA,gBAAgB,GAAE;AAChB,QAAIC,OAAO,KAAK,gBAAhB,EAAkC;AAClC;AACA,aAAO,SAAP;AACD,KAJiB,CAMlB;AACA;;;AACA,WAAO,aAAP;AACC;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,YAAY,EAAE,KAAKP,YADrB;AAEE,MAAA,gBAAgB,EAAE,KAAKK,gBAFzB;AAGE,MAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWC,WAH1B;AAIE,MAAA,QAAQ,EAAE,KAAKC,QAJjB;AAKE,MAAA,OAAO,EAAET,OALX;AAME,MAAA,WAAW,EAAC,gCANd;AAOE,MAAA,GAAG,EAAG0B,OAAD,IAAa;AAChB,aAAKV,YAAL,GAAoBU,OAApB;AACD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAYE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,eAeE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfF,CADF;AAqBD;;AA3DkD","sourcesContent":["import React, { Component } from \"react\";\r\nimport Editor, { createEditorStateWithText} from \"draft-js-plugins-editor\";\r\nimport createEmojiPlugin from \"draft-js-emoji-plugin\";\r\nimport {convertToRaw} from \"draft-js\";\r\nimport \"draft-js-emoji-plugin/lib/plugin.css\";\r\nimport style from 'styled-components';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\nconst emojiPlugin = createEmojiPlugin({\r\n  useNativeArt: true\r\n});\r\nconst { EmojiSuggestions, EmojiSelect } = emojiPlugin;\r\nconst plugins = [emojiPlugin];\r\nconst text = ``;\r\n\r\nconst StyleEditor = style.div`\r\n  width: 100%;\r\n  max-height: 100px;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  padding: 5px 10px;\r\n  border-radius: 30px;\r\n`;\r\n\r\nconst Wrapper = style.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyleEmoji = style.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  border: 0;\r\n  z-index: 2;\r\n`;\r\n\r\nexport default class CommentEditor extends Component {\r\n    state = {\r\n      editorState: createEditorStateWithText(text)\r\n  }\r\n\r\n  onChange = (editorState) => {\r\n    this.setState({\r\n      editorState\r\n    });\r\n    const value = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    this.props.onChangeCommentEditor(value)\r\n  };\r\n\r\n  focusCommentInput(){\r\n    this.commentInput.focus();\r\n  }\r\n\r\n  keyBindingFn(e){\r\n    if (e.key === 'Enter') {\r\n      return 'submit-comment' // name this whatever you want\r\n    }\r\n\r\n    // This wasn't the delete key, so we return Draft's default command for this key\r\n    return Draft.getDefaultKeyBinding(e)\r\n  }\r\n\r\n  handleKeyCommand(){\r\n    if (command === 'submit-comment') {\r\n    // Do what you want to here, then tell Draft that we've taken care of this command\r\n    return 'handled'\r\n  }\r\n\r\n  // This wasn't the 'delete-me' command, so we want Draft to handle it instead.\r\n  // We do this by telling Draft we haven't handled it.\r\n  return 'not-handled'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <StyleEditor>\r\n          <Editor\r\n            keyBindingFn={this.keyBindingFn}\r\n            handleKeyCommand={this.handleKeyCommand}\r\n            editorState={this.state.editorState}\r\n            onChange={this.onChange}\r\n            plugins={plugins}\r\n            placeholder=\"Viết bình luận...\"\r\n            ref={(element) => {\r\n              this.commentInput = element;\r\n            }}\r\n          />\r\n          <EmojiSuggestions />\r\n        </StyleEditor>\r\n        <StyleEmoji>\r\n          <EmojiSelect />\r\n        </StyleEmoji>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
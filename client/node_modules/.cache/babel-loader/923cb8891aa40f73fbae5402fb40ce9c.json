{"ast":null,"code":"import * as Types from './../Constants/ActionTypes.jsx'; // const initialState = {\n//   currentPage: 1,\n//   loading: true,\n//   hasMore: false,\n//   error: false,\n//   listPosts: []\n// };\n\nconst initialState = [];\nexport const posts = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.SET_CURRENT_PAGE:\n      state.currentPage = state.currentPage + 1;\n      return { ...state\n      };\n      break;\n\n    case Types.FECTH_POSTS:\n      state.loading = true;\n      return { ...state\n      };\n      break;\n\n    case Types.RESPONSE_POSTS:\n      state.listPosts = [...state.listPosts, ...action.posts.data];\n      state.loading = false;\n      state.hasMore = action.posts.last_page > action.posts.current_page;\n      return { ...state\n      };\n      break;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/Web/mohi/client/src/Reducers/Posts.jsx"],"names":["Types","initialState","posts","state","action","type","SET_CURRENT_PAGE","currentPage","FECTH_POSTS","loading","RESPONSE_POSTS","listPosts","data","hasMore","last_page","current_page"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,gCAAvB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,KAAK,CAACM,gBAAX;AACEH,MAAAA,KAAK,CAACI,WAAN,GAAoBJ,KAAK,CAACI,WAAN,GAAoB,CAAxC;AACA,aAAO,EAAC,GAAGJ;AAAJ,OAAP;AACA;;AACF,SAAKH,KAAK,CAACQ,WAAX;AACEL,MAAAA,KAAK,CAACM,OAAN,GAAgB,IAAhB;AACA,aAAO,EAAC,GAAGN;AAAJ,OAAP;AACA;;AACF,SAAKH,KAAK,CAACU,cAAX;AACEP,MAAAA,KAAK,CAACQ,SAAN,GAAkB,CAAC,GAAGR,KAAK,CAACQ,SAAV,EAAqB,GAAGP,MAAM,CAACF,KAAP,CAAaU,IAArC,CAAlB;AACAT,MAAAA,KAAK,CAACM,OAAN,GAAgB,KAAhB;AACAN,MAAAA,KAAK,CAACU,OAAN,GAAgBT,MAAM,CAACF,KAAP,CAAaY,SAAb,GAAyBV,MAAM,CAACF,KAAP,CAAaa,YAAtD;AACA,aAAO,EAAC,GAAGZ;AAAJ,OAAP;AACA;;AACF;AAAS,aAAOA,KAAP;AAfX;AAiBD,CAlBM","sourcesContent":["import * as Types from './../Constants/ActionTypes.jsx';\r\n\r\n// const initialState = {\r\n//   currentPage: 1,\r\n//   loading: true,\r\n//   hasMore: false,\r\n//   error: false,\r\n//   listPosts: []\r\n// };\r\nconst initialState = [];\r\n\r\nexport const posts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.SET_CURRENT_PAGE:\r\n      state.currentPage = state.currentPage + 1\r\n      return {...state}\r\n      break;\r\n    case Types.FECTH_POSTS:\r\n      state.loading = true\r\n      return {...state}\r\n      break;\r\n    case Types.RESPONSE_POSTS:\r\n      state.listPosts = [...state.listPosts, ...action.posts.data]\r\n      state.loading = false\r\n      state.hasMore = action.posts.last_page > action.posts.current_page\r\n      return {...state}\r\n      break;\r\n    default: return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function BinarySearchIndex(values) {\n  this.values = [].concat(values || []);\n}\n\nBinarySearchIndex.prototype.query = function (value) {\n  var index = this.getIndex(value);\n  return this.values[index];\n};\n\nBinarySearchIndex.prototype.getIndex = function getIndex(value) {\n  if (this.dirty) {\n    this.sort();\n  }\n\n  var minIndex = 0;\n  var maxIndex = this.values.length - 1;\n  var currentIndex;\n  var currentElement;\n\n  while (minIndex <= maxIndex) {\n    currentIndex = (minIndex + maxIndex) / 2 | 0;\n    currentElement = this.values[Math.round(currentIndex)];\n\n    if (+currentElement.value < +value) {\n      minIndex = currentIndex + 1;\n    } else if (+currentElement.value > +value) {\n      maxIndex = currentIndex - 1;\n    } else {\n      return currentIndex;\n    }\n  }\n\n  return Math.abs(~maxIndex);\n};\n\nBinarySearchIndex.prototype.between = function between(start, end) {\n  var startIndex = this.getIndex(start);\n  var endIndex = this.getIndex(end);\n\n  if (startIndex === 0 && endIndex === 0) {\n    return [];\n  }\n\n  while (this.values[startIndex - 1] && this.values[startIndex - 1].value === start) {\n    startIndex--;\n  }\n\n  while (this.values[endIndex + 1] && this.values[endIndex + 1].value === end) {\n    endIndex++;\n  }\n\n  if (this.values[endIndex] && this.values[endIndex].value === end && this.values[endIndex + 1]) {\n    endIndex++;\n  }\n\n  return this.values.slice(startIndex, endIndex);\n};\n\nBinarySearchIndex.prototype.insert = function insert(item) {\n  this.values.splice(this.getIndex(item.value), 0, item);\n  return this;\n};\n\nBinarySearchIndex.prototype.bulkAdd = function bulkAdd(items, sort) {\n  this.values = this.values.concat([].concat(items || []));\n\n  if (sort) {\n    this.sort();\n  } else {\n    this.dirty = true;\n  }\n\n  return this;\n};\n\nBinarySearchIndex.prototype.sort = function sort() {\n  this.values.sort(function (a, b) {\n    return +b.value - +a.value;\n  }).reverse();\n  this.dirty = false;\n  return this;\n};\n\nexport default BinarySearchIndex;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/tiny-binary-search/index.js"],"names":["BinarySearchIndex","values","concat","prototype","query","value","index","getIndex","dirty","sort","minIndex","maxIndex","length","currentIndex","currentElement","Math","round","abs","between","start","end","startIndex","endIndex","slice","insert","item","splice","bulkAdd","items","a","b","reverse"],"mappings":"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","sourcesContent":["function BinarySearchIndex (values) {\r\n  this.values = [].concat(values || []);\r\n}\r\n\r\nBinarySearchIndex.prototype.query = function (value) {\r\n  var index = this.getIndex(value);\r\n  return this.values[index];\r\n};\r\n\r\nBinarySearchIndex.prototype.getIndex = function getIndex (value) {\r\n  if (this.dirty) {\r\n    this.sort();\r\n  }\r\n\r\n  var minIndex = 0;\r\n  var maxIndex = this.values.length - 1;\r\n  var currentIndex;\r\n  var currentElement;\r\n\r\n  while (minIndex <= maxIndex) {\r\n    currentIndex = (minIndex + maxIndex) / 2 | 0;\r\n    currentElement = this.values[Math.round(currentIndex)];\r\n    if (+currentElement.value < +value) {\r\n      minIndex = currentIndex + 1;\r\n    } else if (+currentElement.value > +value) {\r\n      maxIndex = currentIndex - 1;\r\n    } else {\r\n      return currentIndex;\r\n    }\r\n  }\r\n\r\n  return Math.abs(~maxIndex);\r\n};\r\n\r\nBinarySearchIndex.prototype.between = function between (start, end) {\r\n  var startIndex = this.getIndex(start);\r\n  var endIndex = this.getIndex(end);\r\n\r\n  if (startIndex === 0 && endIndex === 0) {\r\n    return [];\r\n  }\r\n\r\n  while (this.values[startIndex - 1] && this.values[startIndex - 1].value === start) {\r\n    startIndex--;\r\n  }\r\n\r\n  while (this.values[endIndex + 1] && this.values[endIndex + 1].value === end) {\r\n    endIndex++;\r\n  }\r\n\r\n  if (this.values[endIndex] && this.values[endIndex].value === end && this.values[endIndex + 1]) {\r\n    endIndex++;\r\n  }\r\n\r\n  return this.values.slice(startIndex, endIndex);\r\n};\r\n\r\nBinarySearchIndex.prototype.insert = function insert (item) {\r\n  this.values.splice(this.getIndex(item.value), 0, item);\r\n  return this;\r\n};\r\n\r\nBinarySearchIndex.prototype.bulkAdd = function bulkAdd (items, sort) {\r\n  this.values = this.values.concat([].concat(items || []));\r\n\r\n  if (sort) {\r\n    this.sort();\r\n  } else {\r\n    this.dirty = true;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nBinarySearchIndex.prototype.sort = function sort () {\r\n  this.values.sort(function (a, b) {\r\n    return +b.value - +a.value;\r\n  }).reverse();\r\n  this.dirty = false;\r\n  return this;\r\n};\r\n\r\nexport default BinarySearchIndex;\r\n"]},"metadata":{},"sourceType":"module"}
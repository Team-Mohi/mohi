{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\Post\\\\CommentEditor.jsx\";\nimport React, { Component } from \"react\";\nimport Editor, { createEditorStateWithText } from \"draft-js-plugins-editor\";\nimport createEmojiPlugin from \"draft-js-emoji-plugin\";\nimport \"draft-js-emoji-plugin/lib/plugin.css\";\nimport style from 'styled-components';\nimport htmlToDraft from 'html-to-draftjs';\nconst emojiPlugin = createEmojiPlugin({\n  useNativeArt: true\n});\nconst {\n  EmojiSuggestions,\n  EmojiSelect\n} = emojiPlugin;\nconst plugins = [emojiPlugin];\nconst StyleEditor = style.div`\n  width: 100%;\n  max-height: 100px;\n  overflow-y: auto;\n  border: 1px solid #ddd;\n  margin-left: 10px;\n  font-size: 14px;\n  padding: 5px 10px;\n  border-radius: 30px;\n`;\nconst Wrapper = style.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`;\nconst StyleEmoji = style.div`\n  position: absolute;\n  right: 10px;\n  border: 0;\n  z-index: 2;\n`;\nexport default class CommentEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n\n    const text = '';\n    this.state = {\n      editorState: createEditorStateWithText(text),\n      idUserReceivedReply: '',\n      userReceivedReply: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      idUserReceivedReply: this.props.idUserReceivedReply,\n      userReceivedReply: this.props.userReceivedReply\n    });\n  }\n\n  focusCommentInput() {\n    this.commentInput.focus();\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyleEditor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      editorState: this.state.editorState,\n      onChange: this.onChange,\n      plugins: plugins,\n      placeholder: \"Vi\\u1EBFt b\\xECnh lu\\u1EADn...\",\n      ref: element => {\n        this.commentInput = element;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(EmojiSuggestions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(StyleEmoji, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(EmojiSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Post/CommentEditor.jsx"],"names":["React","Component","Editor","createEditorStateWithText","createEmojiPlugin","style","htmlToDraft","emojiPlugin","useNativeArt","EmojiSuggestions","EmojiSelect","plugins","StyleEditor","div","Wrapper","StyleEmoji","CommentEditor","constructor","props","onChange","editorState","setState","text","state","idUserReceivedReply","userReceivedReply","componentDidMount","focusCommentInput","commentInput","focus","render","console","log","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,yBAAjB,QAAkD,yBAAlD;AACA,OAAOC,iBAAP,MAA8B,uBAA9B;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,MAAMC,WAAW,GAAGH,iBAAiB,CAAC;AACpCI,EAAAA,YAAY,EAAE;AADsB,CAAD,CAArC;AAGA,MAAM;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,IAAoCH,WAA1C;AACA,MAAMI,OAAO,GAAG,CAACJ,WAAD,CAAhB;AAEA,MAAMK,WAAW,GAAGP,KAAK,CAACQ,GAAI;;;;;;;;;CAA9B;AAWA,MAAMC,OAAO,GAAGT,KAAK,CAACQ,GAAI;;;;CAA1B;AAMA,MAAME,UAAU,GAAGV,KAAK,CAACQ,GAAI;;;;;CAA7B;AAOA,eAAe,MAAMG,aAAN,SAA4Bf,SAA5B,CAAsC;AACnDgB,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAgBlBC,QAhBkB,GAgBNC,WAAD,IAAiB;AAC1B,WAAKC,QAAL,CAAc;AACZD,QAAAA;AADY,OAAd;AAGD,KApBiB;;AAEhB,UAAME,IAAI,GAAG,EAAb;AACA,SAAKC,KAAL,GAAa;AACXH,MAAAA,WAAW,EAAEjB,yBAAyB,CAACmB,IAAD,CAD3B;AAEXE,MAAAA,mBAAmB,EAAE,EAFV;AAGXC,MAAAA,iBAAiB,EAAE;AAHR,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKL,QAAL,CAAc;AACZG,MAAAA,mBAAmB,EAAE,KAAKN,KAAL,CAAWM,mBADpB;AAEZC,MAAAA,iBAAiB,EAAE,KAAKP,KAAL,CAAWO;AAFlB,KAAd;AAID;;AAODE,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,YAAL,CAAkBC,KAAlB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AAEA,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,KAAKA,KAAL,CAAWH,WAD1B;AAEE,MAAA,QAAQ,EAAE,KAAKD,QAFjB;AAGE,MAAA,OAAO,EAAER,OAHX;AAIE,MAAA,WAAW,EAAC,gCAJd;AAKE,MAAA,GAAG,EAAGsB,OAAD,IAAa;AAChB,aAAKL,YAAL,GAAoBK,OAApB;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAYE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAaE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbF,CADF;AAmBD;;AAjDkD","sourcesContent":["import React, { Component } from \"react\";\r\nimport Editor, { createEditorStateWithText } from \"draft-js-plugins-editor\";\r\nimport createEmojiPlugin from \"draft-js-emoji-plugin\";\r\nimport \"draft-js-emoji-plugin/lib/plugin.css\";\r\nimport style from 'styled-components';\r\nimport htmlToDraft from 'html-to-draftjs';\r\n\r\nconst emojiPlugin = createEmojiPlugin({\r\n  useNativeArt: true\r\n});\r\nconst { EmojiSuggestions, EmojiSelect } = emojiPlugin;\r\nconst plugins = [emojiPlugin];\r\n\r\nconst StyleEditor = style.div`\r\n  width: 100%;\r\n  max-height: 100px;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  margin-left: 10px;\r\n  font-size: 14px;\r\n  padding: 5px 10px;\r\n  border-radius: 30px;\r\n`;\r\n\r\nconst Wrapper = style.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyleEmoji = style.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  border: 0;\r\n  z-index: 2;\r\n`;\r\n\r\nexport default class CommentEditor extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    const text = '';\r\n    this.state = {\r\n      editorState: createEditorStateWithText(text),\r\n      idUserReceivedReply: '',\r\n      userReceivedReply: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      idUserReceivedReply: this.props.idUserReceivedReply,\r\n      userReceivedReply: this.props.userReceivedReply\r\n    })\r\n  }\r\n  onChange = (editorState) => {\r\n    this.setState({\r\n      editorState\r\n    });\r\n  };\r\n\r\n  focusCommentInput(){\r\n    this.commentInput.focus();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <Wrapper>\r\n        <StyleEditor>\r\n          <Editor\r\n            editorState={this.state.editorState}\r\n            onChange={this.onChange}\r\n            plugins={plugins}\r\n            placeholder=\"Viết bình luận...\"\r\n            ref={(element) => {\r\n              this.commentInput = element;\r\n            }}\r\n          />\r\n        </StyleEditor>\r\n        <EmojiSuggestions />\r\n        <StyleEmoji>\r\n          <EmojiSelect />\r\n        </StyleEmoji>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
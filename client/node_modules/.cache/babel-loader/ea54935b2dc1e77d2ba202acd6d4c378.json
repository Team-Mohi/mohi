{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\Page\\\\PopupEditPage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PopupEditPage.css';\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { PUBLIC_URL } from './../../Constants/public.jsx';\n\nfunction PopupEditPage() {\n  const [lat, setLat] = useState(10.7553411);\n  const [long, setLong] = useState(106.4150395);\n  const [zoom, setZoom] = useState(5);\n  useEffect(() => {\n    var map = L.map('map_page').setView([lat, long], zoom);\n    var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    });\n    OpenStreetMap_Mapnik.addTo(map);\n    var myIcon = L.icon({\n      iconUrl: PUBLIC_URL + 'adress_icon.png',\n      iconSize: [50, 50]\n    });\n    L.marker([lat, long], {\n      icon: myIcon\n    }).addTo(map).bindPopup('ReactJS Việt Nam').openPopup();\n  }, []);\n\n  const getMyAdress = () => {\n    navigator.geolocation.getCurrentPosition(getLatLon);\n  };\n\n  function getLatLon(position) {\n    let latitude = position.coords.latitude;\n    let longitude = position.coords.longitude;\n  }\n\n  console.log(long, lat, zoom);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-edit-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-edit-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Ch\\u1EC9nh s\\u1EEDa v\\u1ECB tr\\xED c\\u1EEDa h\\xE0ng \", /*#__PURE__*/React.createElement(Link, {\n    to: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }, \"ReactJS Vi\\u1EC7t Nam\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map_page\",\n    className: \"map_page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-page-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: getMyAdress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"L\\u1EA5y v\\u1ECB tr\\xED c\\u1EE7a b\\u1EA1n\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"X\\xE1c nh\\u1EADn\")))));\n}\n\nexport default PopupEditPage;","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/Page/PopupEditPage.jsx"],"names":["React","useState","useEffect","Link","L","PUBLIC_URL","PopupEditPage","lat","setLat","long","setLong","zoom","setZoom","map","setView","OpenStreetMap_Mapnik","tileLayer","maxZoom","attribution","addTo","myIcon","icon","iconUrl","iconSize","marker","bindPopup","openPopup","getMyAdress","navigator","geolocation","getCurrentPosition","getLatLon","position","latitude","coords","longitude","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAM,qBAAN;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,0BAAP;AACA,SAAQC,UAAR,QAAyB,8BAAzB;;AAEA,SAASC,aAAT,GAAwB;AACtB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,UAAD,CAA9B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,WAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIW,GAAG,GAAGT,CAAC,CAACS,GAAF,CAAM,UAAN,EAAkBC,OAAlB,CAA0B,CAACP,GAAD,EAAME,IAAN,CAA1B,EAAuCE,IAAvC,CAAV;AAEA,QAAII,oBAAoB,GAAGX,CAAC,CAACY,SAAF,CAAY,oDAAZ,EAAkE;AAC5FC,MAAAA,OAAO,EAAE,EADmF;AAE5FC,MAAAA,WAAW,EAAE;AAF+E,KAAlE,CAA3B;AAIAH,IAAAA,oBAAoB,CAACI,KAArB,CAA2BN,GAA3B;AACA,QAAIO,MAAM,GAAGhB,CAAC,CAACiB,IAAF,CAAO;AAClBC,MAAAA,OAAO,EAAEjB,UAAU,GAAG,iBADJ;AAElBkB,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAFQ,KAAP,CAAb;AAIAnB,IAAAA,CAAC,CAACoB,MAAF,CAAS,CAACjB,GAAD,EAAME,IAAN,CAAT,EAAsB;AAACY,MAAAA,IAAI,EAAED;AAAP,KAAtB,EAAsCD,KAAtC,CAA4CN,GAA5C,EACKY,SADL,CACe,kBADf,EAEKC,SAFL;AAGD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,SAAzC;AACD,GAFD;;AAIA,WAASA,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,QAAIC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAA/B;AACA,QAAIE,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAhC;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY5B,IAAZ,EAAkBF,GAAlB,EAAuBI,IAAvB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAA8B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA9B,CADF,eAEE;AAAK,IAAA,EAAE,EAAC,UAAR;AAAmB,IAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEgB,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CAHF,CADF,CADF,CADF;AAcD;;AAED,eAAerB,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport'./PopupEditPage.css';\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport {PUBLIC_URL} from './../../Constants/public.jsx';\r\n\r\nfunction PopupEditPage(){\r\n  const [lat, setLat] = useState(10.7553411);\r\n  const [long, setLong] = useState(106.4150395);\r\n  const [zoom, setZoom] = useState(5);\r\n\r\n  useEffect(() => {\r\n\r\n    var map = L.map('map_page').setView([lat, long], zoom);\r\n\r\n    var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n    \tmaxZoom: 19,\r\n    \tattribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    });\r\n    OpenStreetMap_Mapnik.addTo(map);\r\n    var myIcon = L.icon({\r\n      iconUrl: PUBLIC_URL + 'adress_icon.png',\r\n      iconSize: [50, 50],\r\n    });\r\n    L.marker([lat, long], {icon: myIcon}).addTo(map)\r\n        .bindPopup('ReactJS Việt Nam')\r\n        .openPopup();\r\n  }, []);\r\n\r\n  const getMyAdress = () => {\r\n    navigator.geolocation.getCurrentPosition(getLatLon);\r\n  }\r\n\r\n  function getLatLon(position) {\r\n    let latitude = position.coords.latitude;\r\n    let longitude = position.coords.longitude;\r\n  }\r\n  console.log(long, lat, zoom);\r\n  return(\r\n    <div className=\"popup-edit-page\">\r\n      <div className=\"popup-edit-page-container\">\r\n        <div className=\"map-page-container\">\r\n          <h5>Chỉnh sửa vị trí cửa hàng <Link to=\"\">ReactJS Việt Nam</Link></h5>\r\n          <div id=\"map_page\" className=\"map_page\"></div>\r\n          <div className=\"map-page-button\">\r\n            <button type=\"submit\" onClick={getMyAdress}>Lấy vị trí của bạn</button>\r\n            <button type=\"submit\">Xác nhận</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PopupEditPage;\r\n"]},"metadata":{},"sourceType":"module"}
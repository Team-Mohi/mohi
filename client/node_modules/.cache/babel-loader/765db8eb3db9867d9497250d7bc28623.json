{"ast":null,"code":"import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nexport const useDebounceCallback = (callback, wait = 100, leading = false) => {\n  const storedCallback = useLatest(callback);\n  const timeout = React.useRef();\n  const deps = [wait, leading, storedCallback]; // Cleans up pending timeouts when the deps change\n\n  function _ref() {\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = void 0;\n  }\n\n  React.useEffect(() => _ref, deps);\n\n  function _ref2() {\n    timeout.current = void 0;\n  }\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const {\n      current\n    } = timeout; // Calls on leading edge\n\n    if (current === void 0 && leading) {\n      timeout.current = setTimeout(_ref2, wait); // eslint-disable-next-line prefer-spread\n\n      return storedCallback.current.apply(null, args);\n    } // Clear the timeout every call and start waiting again\n\n\n    current && clearTimeout(current); // Waits for `wait` before invoking the callback\n\n    timeout.current = setTimeout(() => {\n      timeout.current = void 0;\n      storedCallback.current.apply(null, args);\n    }, wait);\n  }, deps);\n};\nexport const useDebounce = (initialState, wait, leading) => {\n  const state = React.useState(initialState);\n  return [state[0], useDebounceCallback(state[1], wait, leading)];\n};","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/@react-hook/debounce/dist/module/index.js"],"names":["React","useLatest","useDebounceCallback","callback","wait","leading","storedCallback","timeout","useRef","deps","_ref","current","clearTimeout","useEffect","_ref2","useCallback","args","arguments","setTimeout","apply","useDebounce","initialState","state","useState"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAWC,IAAI,GAAG,GAAlB,EAAuBC,OAAO,GAAG,KAAjC,KAA2C;AAC5E,QAAMC,cAAc,GAAGL,SAAS,CAACE,QAAD,CAAhC;AACA,QAAMI,OAAO,GAAGP,KAAK,CAACQ,MAAN,EAAhB;AACA,QAAMC,IAAI,GAAG,CAACL,IAAD,EAAOC,OAAP,EAAgBC,cAAhB,CAAb,CAH4E,CAG9B;;AAE9C,WAASI,IAAT,GAAgB;AACdH,IAAAA,OAAO,CAACI,OAAR,IAAmBC,YAAY,CAACL,OAAO,CAACI,OAAT,CAA/B;AACAJ,IAAAA,OAAO,CAACI,OAAR,GAAkB,KAAK,CAAvB;AACD;;AAEDX,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAMH,IAAtB,EAA4BD,IAA5B;;AAEA,WAASK,KAAT,GAAiB;AACfP,IAAAA,OAAO,CAACI,OAAR,GAAkB,KAAK,CAAvB;AACD;;AAED,SAAOX,KAAK,CAACe,WAAN,CAAkB,YAAY;AACnC;AACA,UAAMC,IAAI,GAAGC,SAAb;AACA,UAAM;AACJN,MAAAA;AADI,QAEFJ,OAFJ,CAHmC,CAKtB;;AAEb,QAAII,OAAO,KAAK,KAAK,CAAjB,IAAsBN,OAA1B,EAAmC;AACjCE,MAAAA,OAAO,CAACI,OAAR,GAAkBO,UAAU,CAACJ,KAAD,EAAQV,IAAR,CAA5B,CADiC,CACU;;AAE3C,aAAOE,cAAc,CAACK,OAAf,CAAuBQ,KAAvB,CAA6B,IAA7B,EAAmCH,IAAnC,CAAP;AACD,KAXkC,CAWjC;;;AAGFL,IAAAA,OAAO,IAAIC,YAAY,CAACD,OAAD,CAAvB,CAdmC,CAcD;;AAElCJ,IAAAA,OAAO,CAACI,OAAR,GAAkBO,UAAU,CAAC,MAAM;AACjCX,MAAAA,OAAO,CAACI,OAAR,GAAkB,KAAK,CAAvB;AACAL,MAAAA,cAAc,CAACK,OAAf,CAAuBQ,KAAvB,CAA6B,IAA7B,EAAmCH,IAAnC;AACD,KAH2B,EAGzBZ,IAHyB,CAA5B;AAID,GApBM,EAoBJK,IApBI,CAAP;AAqBD,CArCM;AAsCP,OAAO,MAAMW,WAAW,GAAG,CAACC,YAAD,EAAejB,IAAf,EAAqBC,OAArB,KAAiC;AAC1D,QAAMiB,KAAK,GAAGtB,KAAK,CAACuB,QAAN,CAAeF,YAAf,CAAd;AACA,SAAO,CAACC,KAAK,CAAC,CAAD,CAAN,EAAWpB,mBAAmB,CAACoB,KAAK,CAAC,CAAD,CAAN,EAAWlB,IAAX,EAAiBC,OAAjB,CAA9B,CAAP;AACD,CAHM","sourcesContent":["import * as React from 'react';\nimport useLatest from '@react-hook/latest';\nexport const useDebounceCallback = (callback, wait = 100, leading = false) => {\n  const storedCallback = useLatest(callback);\n  const timeout = React.useRef();\n  const deps = [wait, leading, storedCallback]; // Cleans up pending timeouts when the deps change\n\n  function _ref() {\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = void 0;\n  }\n\n  React.useEffect(() => _ref, deps);\n\n  function _ref2() {\n    timeout.current = void 0;\n  }\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments;\n    const {\n      current\n    } = timeout; // Calls on leading edge\n\n    if (current === void 0 && leading) {\n      timeout.current = setTimeout(_ref2, wait); // eslint-disable-next-line prefer-spread\n\n      return storedCallback.current.apply(null, args);\n    } // Clear the timeout every call and start waiting again\n\n\n    current && clearTimeout(current); // Waits for `wait` before invoking the callback\n\n    timeout.current = setTimeout(() => {\n      timeout.current = void 0;\n      storedCallback.current.apply(null, args);\n    }, wait);\n  }, deps);\n};\nexport const useDebounce = (initialState, wait, leading) => {\n  const state = React.useState(initialState);\n  return [state[0], useDebounceCallback(state[1], wait, leading)];\n};"]},"metadata":{},"sourceType":"module"}
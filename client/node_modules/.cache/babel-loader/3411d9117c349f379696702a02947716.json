{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\mohi\\\\client\\\\src\\\\Components\\\\NewFeed\\\\EditorMention.jsx\";\nimport 'draft-js-mention-plugin/lib/plugin.css';\nimport style from 'styled-components';\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport Editor from 'draft-js-plugins-editor';\nimport createMentionPlugin, { defaultSuggestionsFilter } from 'draft-js-mention-plugin';\nimport editorStyles from './editorStyles.css';\nimport { connect } from 'react-redux';\nconst mentions = [{\n  name: 'Matthew Russell',\n  link: 'https://twitter.com/mrussell247',\n  avatar: 'https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg'\n}];\nconst StyleEditorMention = style.div`\n  width: 100%;\n  max-height: 200px;\n  overflow-y: auto;\n  font-size: 14px;\n  padding: 5px 10px;\n  margin-top: 10px;\n  border: 0.5px solid rgba(0,0,0,0.1);\n  border-radius:30px;\n`;\n\nclass SimpleMentionEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      suggestions: mentions,\n      listMention: []\n    };\n\n    this.onChange = editorState => {\n      this.setState({\n        editorState\n      });\n      let currentContent = editorState.getCurrentContent();\n      let raw = convertToRaw(currentContent);\n\n      for (let key in raw.entityMap) {\n        const ent = raw.entityMap[key];\n\n        if (ent.type === 'mention') {\n          this.props.showMentionList(ent.data.mention);\n        }\n      }\n    };\n\n    this.onSearchChange = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: defaultSuggestionsFilter(value, mentions)\n      });\n    };\n\n    this.mentionPlugin = createMentionPlugin({\n      mentions,\n      entityMutability: 'IMMUTABLE',\n      supportWhitespace: true\n    });\n  }\n\n  componentDidMount() {\n    props.friends.map(mention => {\n      mentions.push({\n        name: mention.user_last_name + ' ' + mention.user_first_name,\n        link: '/' + mention.user_username,\n        avatar: mention.user_avatar\n      });\n    });\n  }\n\n  //\n  // onAddMention = (mention) => {\n  //   this.props.showMentionList(mention);\n  // }\n  render() {\n    const {\n      MentionSuggestions\n    } = this.mentionPlugin;\n    const plugins = [this.mentionPlugin];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: editorStyles.editor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyleEditorMention, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      editorState: this.state.editorState,\n      onChange: this.onChange,\n      plugins: plugins,\n      placeholder: \"G\\u1EAFn th\\u1EBB ai \\u0111\\xF3...\",\n      ref: element => {\n        this.editor = element;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(MentionSuggestions, {\n      onSearchChange: this.onSearchChange,\n      suggestions: this.state.suggestions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  friends: state.friends.list\n});\n\nexport default connect(mapStateToProps, null)(SimpleMentionEditor);","map":{"version":3,"sources":["D:/Web/mohi/client/src/Components/NewFeed/EditorMention.jsx"],"names":["style","React","Component","EditorState","convertToRaw","Editor","createMentionPlugin","defaultSuggestionsFilter","editorStyles","connect","mentions","name","link","avatar","StyleEditorMention","div","SimpleMentionEditor","constructor","props","state","editorState","createEmpty","suggestions","listMention","onChange","setState","currentContent","getCurrentContent","raw","key","entityMap","ent","type","showMentionList","data","mention","onSearchChange","value","mentionPlugin","entityMutability","supportWhitespace","componentDidMount","friends","map","push","user_last_name","user_first_name","user_username","user_avatar","render","MentionSuggestions","plugins","editor","element","mapStateToProps","list"],"mappings":"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","sourcesContent":["import 'draft-js-mention-plugin/lib/plugin.css';\nimport style from 'styled-components';\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport Editor from 'draft-js-plugins-editor';\nimport createMentionPlugin, { defaultSuggestionsFilter } from 'draft-js-mention-plugin';\nimport editorStyles from './editorStyles.css';\nimport { connect } from 'react-redux';\n\nconst mentions = [\n  {\n    name: 'Matthew Russell',\n    link: 'https://twitter.com/mrussell247',\n    avatar: 'https://pbs.twimg.com/profile_images/517863945/mattsailing_400x400.jpg',\n  }];\n\nconst StyleEditorMention = style.div`\n  width: 100%;\n  max-height: 200px;\n  overflow-y: auto;\n  font-size: 14px;\n  padding: 5px 10px;\n  margin-top: 10px;\n  border: 0.5px solid rgba(0,0,0,0.1);\n  border-radius:30px;\n`;\n\n class SimpleMentionEditor extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.mentionPlugin = createMentionPlugin({\n      mentions,\n      entityMutability: 'IMMUTABLE',\n      supportWhitespace: true\n    });\n  }\n\n  componentDidMount(){\n    props.friends.map((mention) => {\n      mentions.push({\n        name: mention.user_last_name + ' ' + mention.user_first_name,\n        link: '/' + mention.user_username,\n        avatar: mention.user_avatar\n      });\n    })\n  }\n\n  state = {\n    editorState: EditorState.createEmpty(),\n    suggestions: mentions,\n    listMention: []\n  };\n\n  onChange = (editorState) => {\n    this.setState({\n      editorState,\n    });\n\n    let currentContent = editorState .getCurrentContent();\n    let raw = convertToRaw(currentContent);\n    for(let key in raw.entityMap){\n      const ent = raw.entityMap[key];\n      if(ent.type === 'mention'){\n          this.props.showMentionList(ent.data.mention);\n      }\n    }\n  };\n\n  onSearchChange = ({ value }) => {\n    this.setState({\n      suggestions: defaultSuggestionsFilter(value, mentions),\n    });\n  };\n  //\n  // onAddMention = (mention) => {\n  //   this.props.showMentionList(mention);\n  // }\n\n  render() {\n    const { MentionSuggestions } = this.mentionPlugin;\n    const plugins = [this.mentionPlugin];\n\n    return (\n      <div className={editorStyles.editor}>\n        <StyleEditorMention>\n          <Editor\n            editorState={this.state.editorState}\n            onChange={this.onChange}\n            plugins={plugins}\n            placeholder=\"Gắn thẻ ai đó...\"\n            ref={(element) => { this.editor = element; }}\n          />\n        </StyleEditorMention>\n        <MentionSuggestions\n          onSearchChange={this.onSearchChange}\n          suggestions={this.state.suggestions}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  friends: state.friends.list,\n});\n\nexport default connect(mapStateToProps, null)(SimpleMentionEditor)\n"]},"metadata":{},"sourceType":"module"}
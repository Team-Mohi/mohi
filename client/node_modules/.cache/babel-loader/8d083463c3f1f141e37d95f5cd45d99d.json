{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\r\n * Executes the provided `callback` once for each enumerable own property in the\r\n * object and constructs a new object from the results. The `callback` is\r\n * invoked with three arguments:\r\n *\r\n *  - the property value\r\n *  - the property name\r\n *  - the object being traversed\r\n *\r\n * Properties that are added after the call to `mapObject` will not be visited\r\n * by `callback`. If the values of existing properties are changed, the value\r\n * passed to `callback` will be the value at the time `mapObject` visits them.\r\n * Properties that are deleted before being visited are not visited.\r\n *\r\n * @grep function objectMap()\r\n * @grep function objMap()\r\n *\r\n * @param {?object} object\r\n * @param {function} callback\r\n * @param {*} context\r\n * @return {?object}\r\n */\n\nfunction mapObject(object, callback, context) {\n  if (!object) {\n    return null;\n  }\n\n  var result = {};\n\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name)) {\n      result[name] = callback.call(context, object[name], name, object);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = mapObject;","map":{"version":3,"sources":["D:/mohi/mohi/client/node_modules/fbjs/lib/mapObject.js"],"names":["hasOwnProperty","Object","prototype","mapObject","object","callback","context","result","name","call","module","exports"],"mappings":"AAAA;;;;;;;AAOA;;AAEA,IAAIA,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAtC;AACA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASG,SAAT,CAAmBC,MAAnB,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8C;AAC5C,MAAI,CAACF,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MAAIG,MAAM,GAAG,EAAb;;AAEA,OAAK,IAAIC,IAAT,IAAiBJ,MAAjB,EAAyB;AACvB,QAAIJ,cAAc,CAACS,IAAf,CAAoBL,MAApB,EAA4BI,IAA5B,CAAJ,EAAuC;AACrCD,MAAAA,MAAM,CAACC,IAAD,CAAN,GAAeH,QAAQ,CAACI,IAAT,CAAcH,OAAd,EAAuBF,MAAM,CAACI,IAAD,CAA7B,EAAqCA,IAArC,EAA2CJ,MAA3C,CAAf;AACD;AACF;;AAED,SAAOG,MAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBR,SAAjB","sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n'use strict';\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/**\r\n * Executes the provided `callback` once for each enumerable own property in the\r\n * object and constructs a new object from the results. The `callback` is\r\n * invoked with three arguments:\r\n *\r\n *  - the property value\r\n *  - the property name\r\n *  - the object being traversed\r\n *\r\n * Properties that are added after the call to `mapObject` will not be visited\r\n * by `callback`. If the values of existing properties are changed, the value\r\n * passed to `callback` will be the value at the time `mapObject` visits them.\r\n * Properties that are deleted before being visited are not visited.\r\n *\r\n * @grep function objectMap()\r\n * @grep function objMap()\r\n *\r\n * @param {?object} object\r\n * @param {function} callback\r\n * @param {*} context\r\n * @return {?object}\r\n */\r\n\r\nfunction mapObject(object, callback, context) {\r\n  if (!object) {\r\n    return null;\r\n  }\r\n\r\n  var result = {};\r\n\r\n  for (var name in object) {\r\n    if (hasOwnProperty.call(object, name)) {\r\n      result[name] = callback.call(context, object[name], name, object);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports = mapObject;"]},"metadata":{},"sourceType":"script"}
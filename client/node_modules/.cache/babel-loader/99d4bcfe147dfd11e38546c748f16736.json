{"ast":null,"code":"import * as Types from './../Constants/ActionTypes.jsx';\nconst initialState = {\n  currentPage: 1,\n  loading: true,\n  hasMore: false,\n  error: false,\n  listPosts: []\n};\nexport const posts = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.SET_CURRENT_PAGE:\n      state.currentPage = state.currentPage + 1;\n      return { ...state\n      };\n      break;\n\n    case Types.FECTH_POSTS:\n      return { ...state\n      };\n      break;\n\n    case Types.RESPONSE_POSTS:\n      return {\n        listPosts: [...action.posts.data],\n        loading: !state.loading,\n        hasMore: action.posts.last_page > action.posts.current_page\n      };\n      break;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/Web/mohi/client/src/Reducers/Posts.jsx"],"names":["Types","initialState","currentPage","loading","hasMore","error","listPosts","posts","state","action","type","SET_CURRENT_PAGE","FECTH_POSTS","RESPONSE_POSTS","data","last_page","current_page"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,gCAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,CADM;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE,KAJY;AAKnBC,EAAAA,SAAS,EAAE;AALQ,CAArB;AAQA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,KAAK,CAACW,gBAAX;AACEH,MAAAA,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACN,WAAN,GAAoB,CAAxC;AACA,aAAO,EAAC,GAAGM;AAAJ,OAAP;AACA;;AACF,SAAKR,KAAK,CAACY,WAAX;AACE,aAAO,EAAC,GAAGJ;AAAJ,OAAP;AACA;;AACF,SAAKR,KAAK,CAACa,cAAX;AACE,aAAO;AACLP,QAAAA,SAAS,EAAE,CAAC,GAAGG,MAAM,CAACF,KAAP,CAAaO,IAAjB,CADN;AAELX,QAAAA,OAAO,EAAE,CAACK,KAAK,CAACL,OAFX;AAGLC,QAAAA,OAAO,EAAEK,MAAM,CAACF,KAAP,CAAaQ,SAAb,GAAyBN,MAAM,CAACF,KAAP,CAAaS;AAH1C,OAAP;AAKA;;AACF;AAAS,aAAOR,KAAP;AAfX;AAiBD,CAlBM","sourcesContent":["import * as Types from './../Constants/ActionTypes.jsx';\r\n\r\nconst initialState = {\r\n  currentPage: 1,\r\n  loading: true,\r\n  hasMore: false,\r\n  error: false,\r\n  listPosts: []\r\n};\r\n\r\nexport const posts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Types.SET_CURRENT_PAGE:\r\n      state.currentPage = state.currentPage + 1\r\n      return {...state}\r\n      break;\r\n    case Types.FECTH_POSTS:\r\n      return {...state}\r\n      break;\r\n    case Types.RESPONSE_POSTS:\r\n      return {\r\n        listPosts: [...action.posts.data],\r\n        loading: !state.loading,\r\n        hasMore: action.posts.last_page > action.posts.current_page\r\n      }\r\n      break;\r\n    default: return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
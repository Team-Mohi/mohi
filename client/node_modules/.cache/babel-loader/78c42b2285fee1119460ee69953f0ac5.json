{"ast":null,"code":"'use strict';\n\nvar toStyleObject = require('./toStyleObject');\n\nvar hasOwn = require('./hasOwn');\n/**\r\n * @ignore\r\n * @method toStyleString\r\n *\r\n * @param  {Object} styles The object to convert to a style string.\r\n * @param  {Object} config\r\n * @param  {Boolean} config.addUnits=true True if you want to add units when numerical values are encountered. Defaults to true\r\n * @param  {Object}  config.cssUnitless An object whose keys represent css numerical property names that will not be appended with units.\r\n * @param  {Object}  config.prefixProperties An object whose keys represent css property names that should be prefixed\r\n * @param  {String}  config.cssUnit='px' The css unit to append to numerical values. Defaults to 'px'\r\n * @param  {String}  config.scope\r\n *\r\n * @return {Object} The object, normalized with css style names\r\n */\n\n\nmodule.exports = function (styles, config) {\n  styles = toStyleObject(styles, config);\n  var result = [];\n  var prop;\n\n  for (prop in styles) if (hasOwn(styles, prop)) {\n    result.push(prop + ': ' + styles[prop]);\n  }\n\n  return result.join('; ');\n};","map":{"version":3,"sources":["D:/mohi/mohi/client/node_modules/to-style/src/toStyleString.js"],"names":["toStyleObject","require","hasOwn","module","exports","styles","config","result","prop","push","join"],"mappings":"AAAA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAIC,MAAM,GAAUD,OAAO,CAAC,UAAD,CAA3B;AAEA;;;;;;;;;;;;;;;;AAcAE,MAAM,CAACC,OAAP,GAAiB,UAASC,MAAT,EAAiBC,MAAjB,EAAwB;AACrCD,EAAAA,MAAM,GAAGL,aAAa,CAACK,MAAD,EAASC,MAAT,CAAtB;AAEA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,IAAJ;;AAEA,OAAIA,IAAJ,IAAYH,MAAZ,EAAoB,IAAIH,MAAM,CAACG,MAAD,EAASG,IAAT,CAAV,EAAyB;AACzCD,IAAAA,MAAM,CAACE,IAAP,CAAYD,IAAI,GAAG,IAAP,GAAcH,MAAM,CAACG,IAAD,CAAhC;AACH;;AAED,SAAOD,MAAM,CAACG,IAAP,CAAY,IAAZ,CAAP;AACH,CAXD","sourcesContent":["'use strict'\r\n\r\nvar toStyleObject = require('./toStyleObject')\r\nvar hasOwn        = require('./hasOwn')\r\n\r\n/**\r\n * @ignore\r\n * @method toStyleString\r\n *\r\n * @param  {Object} styles The object to convert to a style string.\r\n * @param  {Object} config\r\n * @param  {Boolean} config.addUnits=true True if you want to add units when numerical values are encountered. Defaults to true\r\n * @param  {Object}  config.cssUnitless An object whose keys represent css numerical property names that will not be appended with units.\r\n * @param  {Object}  config.prefixProperties An object whose keys represent css property names that should be prefixed\r\n * @param  {String}  config.cssUnit='px' The css unit to append to numerical values. Defaults to 'px'\r\n * @param  {String}  config.scope\r\n *\r\n * @return {Object} The object, normalized with css style names\r\n */\r\nmodule.exports = function(styles, config){\r\n    styles = toStyleObject(styles, config)\r\n\r\n    var result = []\r\n    var prop\r\n\r\n    for(prop in styles) if (hasOwn(styles, prop)){\r\n        result.push(prop + ': ' + styles[prop])\r\n    }\r\n\r\n    return result.join('; ')\r\n}"]},"metadata":{},"sourceType":"script"}
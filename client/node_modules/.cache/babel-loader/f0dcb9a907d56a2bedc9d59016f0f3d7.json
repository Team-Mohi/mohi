{"ast":null,"code":"/**\n * @license\n * Video.js 7.0.3 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar window$1 = _interopDefault(require('global/window'));\n\nvar document = _interopDefault(require('global/document'));\n\nvar tsml = _interopDefault(require('tsml'));\n\nvar xhr = _interopDefault(require('xhr'));\n\nvar vtt = _interopDefault(require('videojs-vtt.js'));\n\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\n\nvar URLToolkit = _interopDefault(require('url-toolkit'));\n\nvar m3u8Parser = require('m3u8-parser');\n\nvar mpdParser = require('mpd-parser');\n\nvar mp4probe = _interopDefault(require('mux.js/lib/mp4/probe'));\n\nvar tsInspector = _interopDefault(require('mux.js/lib/tools/ts-inspector.js'));\n\nvar aesDecrypter = require('aes-decrypter');\n\nvar version = \"7.0.3\";\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0; // This is the private tracking variable for logging level.\n\nvar level = 'info'; // This is the private tracking variable for the logging history.\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  } // Add a clone of the args at this point to history.\n\n\n  if (history) {\n    history.push([].concat(args));\n  } // Add console prefix after adding to history.\n\n\n  args.unshift('VIDEOJS:'); // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n\n  if (!window$1.console) {\n    return;\n  } // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n\n\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  } // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n\n\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\n\n\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\n\n\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\n\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n\n    level = lvl;\n  }\n\n  return level;\n};\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\n\n\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\n\n\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n/**\n * Disable history tracking if it is currently enabled.\n */\n\n\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n/**\n * Enable history tracking if it is currently disabled.\n */\n\n\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\n\n\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\n\n\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\n\n\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\n\n\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\n\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\n\n\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\n\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\n\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\n\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\n\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\n\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\n\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\n\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\n\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\n\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\n\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\n\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\n\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text while dragging controls\n */\n\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking\n */\n\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\n\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\n\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\n\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\n\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\n\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\n\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\n\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + new Date().getTime();\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\n\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\n\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\n\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\n\n\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\n\n\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n  var timeout = void 0;\n  /* eslint-disable consistent-this */\n\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin); // When any evented object is disposed, it removes all its listeners.\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this; // Support providing the `stateUpdates` state as a function.\n\n\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\n\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\n\nvar Component = function () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component); // The component might be the player itself and we can't pass `this` to super\n\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Make a copy of prototype.options_ to protect against overriding defaults\n\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  };\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  };\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n    var component = void 0;\n    var componentName = void 0; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  };\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  };\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap = void 0;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = new Date().getTime(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding = void 0;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose}.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    fn = bind(this, fn);\n    var timeoutId = window$1.setTimeout(fn, timeout);\n\n    var disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  };\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  };\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  };\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  };\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      var id = window$1.requestAnimationFrame(fn);\n\n      var disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  };\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  };\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  };\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT); // The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && /Chrome/i.test(USER_AGENT);\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/Chrome\\/(\\d+)/);\n\n  if (match && match[1]) {\n    return parseFloat(match[1]);\n  }\n\n  return null;\n}();\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = IS_SAFARI || IS_IOS;\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\n\nvar FullscreenApi = {}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\nvar specApi = apiMap[0];\nvar browserApi = void 0; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\n\n\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\n\n\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      } // Hide controls and note if they were enabled.\n\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  };\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  };\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalempty');\n  };\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  };\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList); // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList); // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\n\nvar HtmlTrackElementList = function () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\n\nvar TextTrackCueList = function () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\n\n\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\n\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\n\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode === 'showing') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n    Object.defineProperties(_this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech); // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n    options.reportTouchActivity = false; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  };\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  };\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  };\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  };\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  };\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  };\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  };\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  };\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  };\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\n\n\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\n\n\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\n\n\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\nvar allowedSetters = {\n  setCurrentTime: 1\n};\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\n\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader); // MediaLoader has no element\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options); // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  };\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  };\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n *\n * @private\n */\n\nfunction constructColor(color, opacity) {\n  return 'rgba(' + // color looks like \"#f0e\"\n  parseInt(color[1] + color[1], 16) + ',' + parseInt(color[2] + color[2], 16) + ',' + parseInt(color[3] + color[3], 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    this.clearDisplay(); // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n\n\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  };\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var className = this.constructor.name;\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.'); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  };\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  };\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  };\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  };\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\n\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime(seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n  return implementation(seconds, guide);\n}\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  };\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay); // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n/**\n * @file remaining-time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n/**\n * @file live-display.js\n */\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function Slider(player, options) {\n    classCallCheck(this, Slider); // Set property names to bar to match with the child Slider class is looking for\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  };\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  };\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}; // Add the slider element class to all sub classes\n\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n    event.preventDefault();\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  };\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  };\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  };\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack(); // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_; // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this; // If there is an existing rAF ID, cancel it so we don't over-queue.\n\n\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n      var content = formatTime(time, _this2.player_.duration());\n\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this; // If there is an existing rAF ID, cancel it so we don't over-queue.\n\n\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n\n      var content = formatTime(seekBarPoint * duration, duration);\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n/**\n * @file seek-bar.js\n */\n// The number of seconds the `step*` functions move the timeline.\n\nvar STEP_SECONDS = 5; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded); // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration(); // machine readable value of progress bar (percentage complete)\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n    return percent >= 1 ? 1 : percent || 0;\n  };\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration(); // Don't let video end while scrubbing.\n\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\n\nSeekBar.prototype.playerEvent = 'timeupdate';\nComponent.registerComponent('SeekBar', SeekBar);\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  };\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  };\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    } // hide this control if volume support is missing\n\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle); // hide this control if volume support is missing\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    } // hide this control if volume support is missing\n\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    return _this;\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton(); // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward(); // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  };\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  };\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n    return this.menuButton_.controlText(text, el);\n  };\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (event.which !== 9) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.el_.focus();\n      } // Up (38) key or Down (40) key press the 'button'\n\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (event.which !== 9) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  };\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      // TODO: May need to be either menuitemcheckbox or menuitemradio,\n      //       and may need logical grouping of menu items.\n      _this.el_.setAttribute('role', 'menuitemcheckbox');\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n  /**\n   * Any click on a `MenuItem` puts int into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem); // Create pseudo track info\n    // Requires options['kind']\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true;\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n    options.tracks = player.textTracks();\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem; // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true\n        });\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  };\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  };\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n/**\n * @file sub-caps-button.js\n */\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton); // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  };\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n    options.tracks = player.audioTracks();\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : []; // if there's only one audio track, there no point in showing it\n\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  };\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  };\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  };\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE\n    }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  };\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this; // If there is no behavioral change don't add/remove listeners\n\n\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this; // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n\n\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  };\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  };\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  };\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']); // The following tech events are simply re-triggered\n// on the player when they happen\n\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player); // Make sure tag ID exists\n\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n    // Tracks when a tech changes the poster\n\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    } // Cache for video property values.\n\n\n    _this.cache_ = {}; // Set poster\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Set default values for lastVolume\n\n    _this.cache_.lastVolume = 1; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Set default value for lastPlaybackRate\n\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_this, {\n      eventBusKey: 'el_'\n    }); // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      var plugins = options.plugins;\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n    // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _this; // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 so we could focus on the player element\n\n\n    tag.setAttribute('tabindex', '-1'); // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    } // Pass in the width/height/aspectRatio options which will update the style el\n\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  };\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  };\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this; // Pause and remove current playback technology\n\n\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'autoplay': this.options_.autoplay,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this; // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mousedown', this.handleTechClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_(); // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log$1('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n  };\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = {\n      src: src,\n      type: type\n    };\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  };\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this4 = this; // only update the source cache when the source\n    // was not updated using the player api\n\n\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this4.updateSourceCaches_(_this4.techGet_('currentSrc'));\n          }\n\n          _this4.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  };\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  };\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this5 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this5.removeClass('vjs-waiting');\n    });\n  };\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  };\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  };\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  };\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  };\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  };\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   * @deprecated As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  };\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  };\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  };\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  };\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  };\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  };\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log$1(e);\n      throw e;\n    }\n  };\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a `Promise` only if the browser returns one and the player\n   *         is ready to begin playback. For some browsers and all non-ready\n   *         situations, this will return `undefined`.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this6 = this; // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n\n\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    } // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n\n\n    if (!this.isReady_) {\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this6.playWaitingForReady_ = false;\n        silencePromise(_this6.play());\n      }); // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      return this.techGet_('play'); // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n      this.playOnLoadstart_ = function () {\n        _this6.playOnLoadstart_ = null;\n        silencePromise(_this6.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('durationchange');\n    }\n  };\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }; //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  };\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  };\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  };\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  };\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]); // If cancelling fullscreen, remove event listener.\n\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n\n\n        this.trigger('fullscreenchange');\n      }));\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  };\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  };\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey)); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  };\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  };\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this7 = this; // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n\n\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1]; // Check if the current tech is defined before continuing\n\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this7.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this8 = this; // getter usage\n\n\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this8.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this8.cache_.sources = sources;\n\n      _this8.updateSourceCaches_(middlewareSource);\n\n      var err = _this8.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this8.src(sources.slice(1));\n        }\n\n        _this8.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this8.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this8.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this8.tech_);\n    });\n  };\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this9 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this9.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  };\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  };\n  /**\n   * Get or set the autoplay attribute.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should autoplay\n   *        - false means that we should not autoplay\n   *\n   * @return {string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    if (value !== undefined) {\n      this.techCall_('setAutoplay', value);\n      this.options_.autoplay = value;\n      return;\n    }\n\n    return this.techGet_('autoplay', value);\n  };\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  };\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  };\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  };\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  };\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  };\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  };\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  };\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp); // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout = void 0;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  };\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  };\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track; // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this10 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this10.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  };\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global player list\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))(); // The plugin is replaced by a function that returns the current instance.\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin = function () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n    var result = void 0;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  };\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\n\n\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\n\n\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\n\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\n\n\nvideojs$1.players = Player.players;\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\n\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\n\n\nvideojs$1.getTech = Tech.getTech;\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\n\nvideojs$1.registerTech = Tech.registerTech;\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\n\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\n\nvideojs$1.browser = browser;\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\n\nvideojs$1.extend = extendFn;\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\n\nvideojs$1.mergeOptions = mergeOptions;\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\n\nvideojs$1.bind = bind;\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\n\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\n\n\nvideojs$1.getPlugins = Plugin.getPlugins;\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\n\nvideojs$1.getPlugin = Plugin.getPlugin;\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\n\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\n\n\nvideojs$1.log = log$1;\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\n\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\n\nvideojs$1.formatTime = formatTime;\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\n\nvideojs$1.setFormatTime = setFormatTime;\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\n\nvideojs$1.resetFormatTime = resetFormatTime;\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\n\nvideojs$1.parseUrl = parseUrl;\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\n\nvideojs$1.isCrossOrigin = isCrossOrigin;\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\n\nvideojs$1.EventTarget = EventTarget;\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\n\nvideojs$1.on = on;\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\n\nvideojs$1.one = one;\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\n\nvideojs$1.off = off;\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\n\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = xhr;\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\n\nvideojs$1.TextTrack = TextTrack;\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\n\nvideojs$1.AudioTrack = AudioTrack;\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\n\nvideojs$1.VideoTrack = VideoTrack;\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\n\nvideojs$1.computedStyle = computedStyle;\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\n\nvideojs$1.dom = Dom;\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\n\nvideojs$1.url = Url;\n/**\n * @videojs/http-streaming\n * @version 1.0.0\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck(this, PlaylistLoader);\n\n    var _this2 = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this2.srcUrl = srcUrl;\n    _this2.hls_ = hls;\n    _this2.withCredentials = withCredentials;\n\n    if (!_this2.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this2.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this2.on('mediaupdatetimeout', function () {\n      if (_this2.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this2.state = 'HAVE_CURRENT_METADATA';\n      _this2.request = _this2.hls_.xhr({\n        uri: resolveUrl(_this2.master.uri, _this2.media().uri),\n        withCredentials: _this2.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        if (error) {\n          return _this2.playlistRequestError(_this2.request, _this2.media().uri, 'HAVE_METADATA');\n        }\n\n        _this2.haveMetadata(_this2.request, _this2.media().uri);\n      });\n    });\n\n    return _this2;\n  }\n\n  PlaylistLoader.prototype.playlistRequestError = function playlistRequestError(xhr$$1, url, startingState) {\n    // any in-flight request is now finished\n    this.request = null;\n\n    if (startingState) {\n      this.state = startingState;\n    }\n\n    this.error = {\n      playlist: this.master.playlists[url],\n      status: xhr$$1.status,\n      message: 'HLS playlist request error at URL: ' + url,\n      responseText: xhr$$1.responseText,\n      code: xhr$$1.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  }; // update the playlist loader's state in response to a new or\n  // updated playlist.\n\n\n  PlaylistLoader.prototype.haveMetadata = function haveMetadata(xhr$$1, url) {\n    var _this3 = this; // any in-flight request is now finished\n\n\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    var parser = new m3u8Parser.Parser();\n    parser.push(xhr$$1.responseText);\n    parser.end();\n    parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n    // sure that the property is attached to avoid undefined reference errors\n\n    parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n    var update = updateMaster(this.master, parser.manifest);\n    this.targetDuration = parser.manifest.targetDuration;\n\n    if (update) {\n      this.master = update;\n      this.media_ = this.master.playlists[parser.manifest.uri];\n    } else {\n      this.trigger('playlistunchanged');\n    } // refresh live playlists after a target duration passes\n\n\n    if (!this.media().endList) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        _this3.trigger('mediaupdatetimeout');\n      }, refreshDelay(this.media(), !!update));\n    }\n\n    this.trigger('loadedplaylist');\n  };\n  /**\n   * Abort any outstanding work and clean up.\n   */\n\n\n  PlaylistLoader.prototype.dispose = function dispose() {\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n  };\n\n  PlaylistLoader.prototype.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n  /**\n   * When called without any arguments, returns the currently\n   * active media playlist. When called with a single argument,\n   * triggers the playlist loader to asynchronously switch to the\n   * specified media playlist. Calling this method while the\n   * loader is in the HAVE_NOTHING causes an error to be emitted\n   * but otherwise has no effect.\n   *\n   * @param {Object=} playlist the parsed media playlist\n   * object to switch to\n   * @return {Playlist} the current loaded media\n   */\n\n\n  PlaylistLoader.prototype.media = function media(playlist) {\n    var _this4 = this; // getter\n\n\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n\n    var startingState = this.state; // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n\n      playlist = this.master.playlists[playlist];\n    }\n\n    var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n    if (this.master.playlists[playlist.uri].endList) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n\n      return;\n    } // switching to the active playlist is a no-op\n\n\n    if (!mediaChange) {\n      return;\n    }\n\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.request = this.hls_.xhr({\n      uri: resolveUrl(this.master.uri, playlist.uri),\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this4.request) {\n        return;\n      }\n\n      if (error) {\n        return _this4.playlistRequestError(_this4.request, playlist.uri, startingState);\n      }\n\n      _this4.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n      if (startingState === 'HAVE_MASTER') {\n        _this4.trigger('loadedmetadata');\n      } else {\n        _this4.trigger('mediachange');\n      }\n    });\n  };\n  /**\n   * pause loading of the playlist\n   */\n\n\n  PlaylistLoader.prototype.pause = function pause() {\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MASTER';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  };\n  /**\n   * start loading of the playlist\n   */\n\n\n  PlaylistLoader.prototype.load = function load(isFinalRendition) {\n    var _this5 = this;\n\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    var media = this.media();\n\n    if (isFinalRendition) {\n      var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        return _this5.load();\n      }, delay);\n      return;\n    }\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  };\n  /**\n   * start loading of the playlist\n   */\n\n\n  PlaylistLoader.prototype.start = function start() {\n    var _this6 = this;\n\n    this.started = true; // request the specified URL\n\n    this.request = this.hls_.xhr({\n      uri: this.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this6.request) {\n        return;\n      } // clear the loader's request reference\n\n\n      _this6.request = null;\n\n      if (error) {\n        _this6.error = {\n          status: req.status,\n          message: 'HLS playlist request error at URL: ' + _this6.srcUrl,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (_this6.state === 'HAVE_NOTHING') {\n          _this6.started = false;\n        }\n\n        return _this6.trigger('error');\n      }\n\n      var parser = new m3u8Parser.Parser();\n      parser.push(req.responseText);\n      parser.end();\n      _this6.state = 'HAVE_MASTER';\n      parser.manifest.uri = _this6.srcUrl; // loaded a master playlist\n\n      if (parser.manifest.playlists) {\n        _this6.master = parser.manifest;\n        setupMediaPlaylists(_this6.master);\n        resolveMediaGroupUris(_this6.master);\n\n        _this6.trigger('loadedplaylist');\n\n        if (!_this6.request) {\n          // no media playlist was specifically selected so start\n          // from the first listed one\n          _this6.media(parser.manifest.playlists[0]);\n        }\n\n        return;\n      } // loaded a media playlist\n      // infer a master playlist if none was previously requested\n\n\n      _this6.master = {\n        mediaGroups: {\n          'AUDIO': {},\n          'VIDEO': {},\n          'CLOSED-CAPTIONS': {},\n          'SUBTITLES': {}\n        },\n        uri: window$1.location.href,\n        playlists: [{\n          uri: _this6.srcUrl,\n          id: 0\n        }]\n      };\n      _this6.master.playlists[_this6.srcUrl] = _this6.master.playlists[0];\n      _this6.master.playlists[0].resolvedUri = _this6.srcUrl; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      _this6.master.playlists[0].attributes = _this6.master.playlists[0].attributes || {};\n\n      _this6.haveMetadata(req, _this6.srcUrl);\n\n      return _this6.trigger('loadedmetadata');\n    });\n  };\n\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i2 = startIndex; _i2 < endIndex; _i2++) {\n    durations += playlist.segments[_i2].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref2) {\n  var bytes = _ref2.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream; // -----------------\n    // Link To Transport\n    // -----------------\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      this.captionPackets_ = this.captionPackets_.concat(parseCaptionPackets(event.pts, userData));\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 1;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 2;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 3;\n          this.mode_ = 'rollUp';\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[BOTTOM_ROW] = this.nonDisplayed_[BOTTOM_ROW].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          this.mode_ = 'paintOn'; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode (not supported)\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[BOTTOM_ROW];\n      baseRow += text;\n      this.displayed_[BOTTOM_ROW] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < BOTTOM_ROW; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[BOTTOM_ROW] = '';\n    }; // paintOn mode is not implemented\n\n\n    Cea608Stream.prototype.paintOn = function () {}; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the stream.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n          flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = this.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    var H264Stream = h264.H264Stream; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n    // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream; // Helper functions\n\n\n    var createDefaultSample, isLikelyAacData, collectDtsInfo, clearDtsInfo, calculateTrackBaseMediaDecodeTime, arrayEquals, sumFrameByteLengths;\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n    createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0\n        }\n      };\n    };\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.prefixWithSilence_(track, frames); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = this.generateSampleTable_(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      }; // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n\n\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        } // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n\n\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      }; // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n\n\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        } // We will need to recalculate the earliest segment Dts\n\n\n        track.minSegmentDts = Infinity;\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          } // Otherwise, discard it\n\n\n          return false;\n        });\n      }; // generate the track's raw mdat data from an array of frames\n\n\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n          });\n        }\n\n        return samples;\n      }; // generate the track's sample table from an array of frames\n\n\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n\n      this.push = function (nalUnit) {\n        collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = this.groupNalsIntoFrames_(nalUnits);\n        gops = this.groupFramesIntoGops_(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = this.extendFirstKeyFrame_(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = this.generateSampleTable_(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(this.concatenateNalData_(gops));\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        })); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      };\n\n      this.extendFirstKeyFrame_ = function (gops) {\n        var currentGop;\n\n        if (!gops[0][0].keyFrame && gops.length > 1) {\n          // Remove the first GOP\n          currentGop = gops.shift();\n          gops.byteLength -= currentGop.byteLength;\n          gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n          // first gop to cover the time period of the\n          // frames we just removed\n\n          gops[0][0].dts = currentGop.dts;\n          gops[0][0].pts = currentGop.pts;\n          gops[0][0].duration += currentGop.duration;\n        }\n\n        return gops;\n      }; // Convert an array of nal units into an array of frames with each frame being\n      // composed of the nal units that make up that frame\n      // Also keep track of cummulative data about the frame from the nal units such\n      // as the frame duration, starting pts, etc.\n\n\n      this.groupNalsIntoFrames_ = function (nalUnits) {\n        var i,\n            currentNal,\n            currentFrame = [],\n            frames = [];\n        currentFrame.byteLength = 0;\n\n        for (i = 0; i < nalUnits.length; i++) {\n          currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n          if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n            // Since the very first nal unit is expected to be an AUD\n            // only push to the frames array when currentFrame is not empty\n            if (currentFrame.length) {\n              currentFrame.duration = currentNal.dts - currentFrame.dts;\n              frames.push(currentFrame);\n            }\n\n            currentFrame = [currentNal];\n            currentFrame.byteLength = currentNal.data.byteLength;\n            currentFrame.pts = currentNal.pts;\n            currentFrame.dts = currentNal.dts;\n          } else {\n            // Specifically flag key frames for ease of use later\n            if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n              currentFrame.keyFrame = true;\n            }\n\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            currentFrame.byteLength += currentNal.data.byteLength;\n            currentFrame.push(currentNal);\n          }\n        } // For the last frame, use the duration of the previous frame if we\n        // have nothing better to go on\n\n\n        if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n          currentFrame.duration = frames[frames.length - 1].duration;\n        } // Push the final frame\n\n\n        frames.push(currentFrame);\n        return frames;\n      }; // Convert an array of frames into an array of Gop with each Gop being composed\n      // of the frames that make up that Gop\n      // Also keep track of cummulative data about the Gop from the frames such as the\n      // Gop duration, starting pts, etc.\n\n\n      this.groupFramesIntoGops_ = function (frames) {\n        var i,\n            currentFrame,\n            currentGop = [],\n            gops = []; // We must pre-set some of the values on the Gop since we\n        // keep running totals of these values\n\n        currentGop.byteLength = 0;\n        currentGop.nalCount = 0;\n        currentGop.duration = 0;\n        currentGop.pts = frames[0].pts;\n        currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n        gops.byteLength = 0;\n        gops.nalCount = 0;\n        gops.duration = 0;\n        gops.pts = frames[0].pts;\n        gops.dts = frames[0].dts;\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          if (currentFrame.keyFrame) {\n            // Since the very first frame is expected to be an keyframe\n            // only push to the gops array when currentGop is not empty\n            if (currentGop.length) {\n              gops.push(currentGop);\n              gops.byteLength += currentGop.byteLength;\n              gops.nalCount += currentGop.nalCount;\n              gops.duration += currentGop.duration;\n            }\n\n            currentGop = [currentFrame];\n            currentGop.nalCount = currentFrame.length;\n            currentGop.byteLength = currentFrame.byteLength;\n            currentGop.pts = currentFrame.pts;\n            currentGop.dts = currentFrame.dts;\n            currentGop.duration = currentFrame.duration;\n          } else {\n            currentGop.duration += currentFrame.duration;\n            currentGop.nalCount += currentFrame.length;\n            currentGop.byteLength += currentFrame.byteLength;\n            currentGop.push(currentFrame);\n          }\n        }\n\n        if (gops.length && currentGop.duration <= 0) {\n          currentGop.duration = gops[gops.length - 1].duration;\n        }\n\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration; // push the final Gop\n\n        gops.push(currentGop);\n        return gops;\n      }; // generate the track's sample table from an array of gops\n\n\n      this.generateSampleTable_ = function (gops, baseDataOffset) {\n        var h,\n            i,\n            sample,\n            currentGop,\n            currentFrame,\n            dataOffset = baseDataOffset || 0,\n            samples = [];\n\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n            sample = createDefaultSample();\n            sample.dataOffset = dataOffset;\n            sample.compositionTimeOffset = currentFrame.pts - currentFrame.dts;\n            sample.duration = currentFrame.duration;\n            sample.size = 4 * currentFrame.length; // Space for nal unit size\n\n            sample.size += currentFrame.byteLength;\n\n            if (currentFrame.keyFrame) {\n              sample.flags.dependsOn = 2;\n            }\n\n            dataOffset += sample.size;\n            samples.push(sample);\n          }\n        }\n\n        return samples;\n      }; // generate the track's raw mdat data from an array of gops\n\n\n      this.concatenateNalData_ = function (gops) {\n        var h,\n            i,\n            j,\n            currentGop,\n            currentFrame,\n            currentNal,\n            dataOffset = 0,\n            nalsByteLength = gops.byteLength,\n            numberOfNals = gops.nalCount,\n            totalByteLength = nalsByteLength + 4 * numberOfNals,\n            data = new Uint8Array(totalByteLength),\n            view = new DataView(data.buffer); // For each Gop..\n\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h]; // For each Frame..\n\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i]; // For each NAL..\n\n            for (j = 0; j < currentFrame.length; j++) {\n              currentNal = currentFrame[j];\n              view.setUint32(dataOffset, currentNal.data.byteLength);\n              dataOffset += 4;\n              data.set(currentNal.data, dataOffset);\n              dataOffset += currentNal.data.byteLength;\n            }\n          }\n        }\n\n        return data;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n    var mp4 = {\n      generator: mp4Generator,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        window_1.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          window_1.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        window_1.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        window_1.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(options) {\n        classCallCheck$$1(this, MessageHandlers);\n        this.options = options || {};\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers();\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * @file virtual-source-buffer.js\n */\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Player} player\n *        The player instance\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, player, mapping) {\n  if (!player || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((player.currentTime() - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this7 = possibleConstructorReturn(this, _videojs$EventTarget.call(this, videojs$1.EventTarget));\n\n    _this7.timestampOffset_ = 0;\n    _this7.pendingBuffers_ = [];\n    _this7.bufferUpdating_ = false;\n    _this7.mediaSource_ = mediaSource;\n    _this7.codecs_ = codecs;\n    _this7.audioCodec_ = null;\n    _this7.videoCodec_ = null;\n    _this7.audioDisabled_ = false;\n    _this7.appendAudioInitSegment_ = true;\n    _this7.gopBuffer_ = [];\n    _this7.timeMapping_ = 0;\n    _this7.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this7.safeAppend_\n    };\n\n    _this7.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this7.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this7.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this7.transmuxer_ = new TransmuxWorker();\n\n    _this7.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this7.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this7.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this7.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this7.appendGopInfo_(event);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this7, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this7, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this7, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this7, 'buffered', {\n      get: function get$$1() {\n        var start = null;\n        var end = null;\n        var arity = 0;\n        var extents = [];\n        var ranges = []; // neither buffer has been created yet\n\n        if (!this.videoBuffer_ && !this.audioBuffer_) {\n          return videojs$1.createTimeRange();\n        } // only one buffer is configured\n\n\n        if (!this.videoBuffer_) {\n          return this.audioBuffer_.buffered;\n        }\n\n        if (!this.audioBuffer_) {\n          return this.videoBuffer_.buffered;\n        } // both buffers are configured\n\n\n        if (this.audioDisabled_) {\n          return this.videoBuffer_.buffered;\n        } // both buffers are empty\n\n\n        if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {\n          return videojs$1.createTimeRange();\n        } // Handle the case where we have both buffers and create an\n        // intersection of the two\n\n\n        var videoBuffered = this.videoBuffer_.buffered;\n        var audioBuffered = this.audioBuffer_.buffered;\n        var count = videoBuffered.length; // A) Gather up all start and end times\n\n        while (count--) {\n          extents.push({\n            time: videoBuffered.start(count),\n            type: 'start'\n          });\n          extents.push({\n            time: videoBuffered.end(count),\n            type: 'end'\n          });\n        }\n\n        count = audioBuffered.length;\n\n        while (count--) {\n          extents.push({\n            time: audioBuffered.start(count),\n            type: 'start'\n          });\n          extents.push({\n            time: audioBuffered.end(count),\n            type: 'end'\n          });\n        } // B) Sort them by time\n\n\n        extents.sort(function (a, b) {\n          return a.time - b.time;\n        }); // C) Go along one by one incrementing arity for start and decrementing\n        //    arity for ends\n\n        for (count = 0; count < extents.length; count++) {\n          if (extents[count].type === 'start') {\n            arity++; // D) If arity is ever incremented to 2 we are entering an\n            //    overlapping range\n\n            if (arity === 2) {\n              start = extents[count].time;\n            }\n          } else if (extents[count].type === 'end') {\n            arity--; // E) If arity is ever decremented to 1 we leaving an\n            //    overlapping range\n\n            if (arity === 1) {\n              end = extents[count].time;\n            }\n          } // F) Record overlapping ranges\n\n\n          if (start !== null && end !== null) {\n            ranges.push([start, end]);\n            start = null;\n            end = null;\n          }\n        }\n\n        return videojs$1.createTimeRanges(ranges);\n      }\n    });\n    return _this7;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  VirtualSourceBuffer.prototype.data_ = function data_(event) {\n    var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n    segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n    segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n    createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n    this.pendingBuffers_.push(segment);\n    return;\n  };\n  /**\n   * When we get a done event from the transmuxer\n   * we call this function and we process all\n   * of the pending data that we have been saving in the\n   * data_ function\n   *\n   * @private\n   * @param {Event} event the done event from the transmuxer\n   */\n\n\n  VirtualSourceBuffer.prototype.done_ = function done_(event) {\n    // Don't process and append data if the mediaSource is closed\n    if (this.mediaSource_.readyState === 'closed') {\n      this.pendingBuffers_.length = 0;\n      return;\n    } // All buffers should have been flushed from the muxer\n    // start processing anything we have received\n\n\n    this.processPendingSegments_();\n    return;\n  };\n  /**\n   * Create our internal native audio/video source buffers and add\n   * event handlers to them with the following conditions:\n   * 1. they do not already exist on the mediaSource\n   * 2. this VSB has a codec for them\n   *\n   * @private\n   */\n\n\n  VirtualSourceBuffer.prototype.createRealSourceBuffers_ = function createRealSourceBuffers_() {\n    var _this8 = this;\n\n    var types = ['audio', 'video'];\n    types.forEach(function (type) {\n      // Don't create a SourceBuffer of this type if we don't have a\n      // codec for it\n      if (!_this8[type + 'Codec_']) {\n        return;\n      } // Do nothing if a SourceBuffer of this type already exists\n\n\n      if (_this8[type + 'Buffer_']) {\n        return;\n      }\n\n      var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n      // use that\n\n      if (_this8.mediaSource_[type + 'Buffer_']) {\n        buffer = _this8.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n        // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n        // than createRealSourceBuffers_ is called to create the second\n        // VirtualSourceBuffer because that happens as a side-effect of\n        // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n        // the audioBuffer is essentially \"ownerless\" and no one will toggle\n        // the `updating` state back to false once the `updateend` event is received\n        //\n        // Setting `updating` to false manually will work around this\n        // situation and allow work to continue\n\n        buffer.updating = false;\n      } else {\n        var codecProperty = type + 'Codec_';\n        var mimeType = type + '/mp4;codecs=\"' + _this8[codecProperty] + '\"';\n        buffer = makeWrappedSourceBuffer(_this8.mediaSource_.nativeMediaSource_, mimeType);\n        _this8.mediaSource_[type + 'Buffer_'] = buffer;\n      }\n\n      _this8[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n      ['update', 'updatestart', 'updateend'].forEach(function (event) {\n        buffer.addEventListener(event, function () {\n          // if audio is disabled\n          if (type === 'audio' && _this8.audioDisabled_) {\n            return;\n          }\n\n          if (event === 'updateend') {\n            _this8[type + 'Buffer_'].updating = false;\n          }\n\n          var shouldTrigger = types.every(function (t) {\n            // skip checking audio's updating status if audio\n            // is not enabled\n            if (t === 'audio' && _this8.audioDisabled_) {\n              return true;\n            } // if the other type if updating we don't trigger\n\n\n            if (type !== t && _this8[t + 'Buffer_'] && _this8[t + 'Buffer_'].updating) {\n              return false;\n            }\n\n            return true;\n          });\n\n          if (shouldTrigger) {\n            return _this8.trigger(event);\n          }\n        });\n      });\n    });\n  };\n  /**\n   * Emulate the native mediasource function, but our function will\n   * send all of the proposed segments to the transmuxer so that we\n   * can transmux them before we append them to our internal\n   * native source buffers in the correct format.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n   * @param {Uint8Array} segment the segment to append to the buffer\n   */\n\n\n  VirtualSourceBuffer.prototype.appendBuffer = function appendBuffer(segment) {\n    // Start the internal \"updating\" state\n    this.bufferUpdating_ = true;\n\n    if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n      var audioBuffered = this.audioBuffer_.buffered;\n      this.transmuxer_.postMessage({\n        action: 'setAudioAppendStart',\n        appendStart: audioBuffered.end(audioBuffered.length - 1)\n      });\n    }\n\n    if (this.videoBuffer_) {\n      this.transmuxer_.postMessage({\n        action: 'alignGopsWith',\n        gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_, this.timeMapping_)\n      });\n    }\n\n    this.transmuxer_.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: segment.buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset: segment.byteOffset,\n      byteLength: segment.byteLength\n    }, [segment.buffer]);\n    this.transmuxer_.postMessage({\n      action: 'flush'\n    });\n  };\n  /**\n   * Appends gop information (timing and byteLength) received by the transmuxer for the\n   * gops appended in the last call to appendBuffer\n   *\n   * @param {Event} event\n   *        The gopInfo event from the transmuxer\n   * @param {Array} event.data.gopInfo\n   *        List of gop info to append\n   */\n\n\n  VirtualSourceBuffer.prototype.appendGopInfo_ = function appendGopInfo_(event) {\n    this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n  };\n  /**\n   * Emulate the native mediasource function and remove parts\n   * of the buffer from any of our internal buffers that exist\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n   * @param {Double} start position to start the remove at\n   * @param {Double} end position to end the remove at\n   */\n\n\n  VirtualSourceBuffer.prototype.remove = function remove(start, end) {\n    if (this.videoBuffer_) {\n      this.videoBuffer_.updating = true;\n      this.videoBuffer_.remove(start, end);\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n    }\n\n    if (!this.audioDisabled_ && this.audioBuffer_) {\n      this.audioBuffer_.updating = true;\n      this.audioBuffer_.remove(start, end);\n    } // Remove Metadata Cues (id3)\n\n\n    removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n    if (this.inbandTextTracks_) {\n      for (var track in this.inbandTextTracks_) {\n        removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n      }\n    }\n  };\n  /**\n   * Process any segments that the muxer has output\n   * Concatenate segments together based on type and append them into\n   * their respective sourceBuffers\n   *\n   * @private\n   */\n\n\n  VirtualSourceBuffer.prototype.processPendingSegments_ = function processPendingSegments_() {\n    var sortedSegments = {\n      video: {\n        segments: [],\n        bytes: 0\n      },\n      audio: {\n        segments: [],\n        bytes: 0\n      },\n      captions: [],\n      metadata: []\n    }; // Sort segments into separate video/audio arrays and\n    // keep track of their total byte lengths\n\n    sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n      var type = segment.type;\n      var data = segment.data;\n      var initSegment = segment.initSegment;\n      segmentObj[type].segments.push(data);\n      segmentObj[type].bytes += data.byteLength;\n      segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n      if (segment.captions) {\n        segmentObj.captions = segmentObj.captions.concat(segment.captions);\n      }\n\n      if (segment.info) {\n        segmentObj[type].info = segment.info;\n      } // Gather any metadata into a single array\n\n\n      if (segment.metadata) {\n        segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n      }\n\n      return segmentObj;\n    }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n    // finally are sure what tracks are contained in the source\n\n    if (!this.videoBuffer_ && !this.audioBuffer_) {\n      // Remove any codecs that may have been specified by default but\n      // are no longer applicable now\n      if (sortedSegments.video.bytes === 0) {\n        this.videoCodec_ = null;\n      }\n\n      if (sortedSegments.audio.bytes === 0) {\n        this.audioCodec_ = null;\n      }\n\n      this.createRealSourceBuffers_();\n    }\n\n    if (sortedSegments.audio.info) {\n      this.mediaSource_.trigger({\n        type: 'audioinfo',\n        info: sortedSegments.audio.info\n      });\n    }\n\n    if (sortedSegments.video.info) {\n      this.mediaSource_.trigger({\n        type: 'videoinfo',\n        info: sortedSegments.video.info\n      });\n    }\n\n    if (this.appendAudioInitSegment_) {\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n        sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n      }\n\n      this.appendAudioInitSegment_ = false;\n    }\n\n    var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n    if (this.videoBuffer_ && sortedSegments.video.bytes) {\n      sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n      sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n      this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_); // TODO: are video tracks the only ones with text tracks?\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n    } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n      // The transmuxer did not return any bytes of video, meaning it was all trimmed\n      // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n      // will never be triggered by this source buffer, which will cause contrib-hls\n      // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n      // will be triggered by the audio buffer, which will be sent upwards since the video\n      // buffer will not be in an updating state.\n      triggerUpdateend = true;\n    }\n\n    if (!this.audioDisabled_ && this.audioBuffer_) {\n      this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n    }\n\n    this.pendingBuffers_.length = 0;\n\n    if (triggerUpdateend) {\n      this.trigger('updateend');\n    } // We are no longer in the internal \"updating\" state\n\n\n    this.bufferUpdating_ = false;\n  };\n  /**\n   * Combine all segments into a single Uint8Array and then append them\n   * to the destination buffer\n   *\n   * @param {Object} segmentObj\n   * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n   * @private\n   */\n\n\n  VirtualSourceBuffer.prototype.concatAndAppendSegments_ = function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n    var offset = 0;\n    var tempBuffer = void 0;\n\n    if (segmentObj.bytes) {\n      tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n      segmentObj.segments.forEach(function (segment) {\n        tempBuffer.set(segment, offset);\n        offset += segment.byteLength;\n      });\n\n      try {\n        destinationBuffer.updating = true;\n        destinationBuffer.appendBuffer(tempBuffer);\n      } catch (error) {\n        if (this.mediaSource_.player_) {\n          this.mediaSource_.player_.error({\n            code: -3,\n            type: 'APPEND_BUFFER_ERR',\n            message: error.message,\n            originalError: error\n          });\n        }\n      }\n    }\n  };\n  /**\n   * Emulate the native mediasource function. abort any soureBuffer\n   * actions and throw out any un-appended data.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n   */\n\n\n  VirtualSourceBuffer.prototype.abort = function abort() {\n    if (this.videoBuffer_) {\n      this.videoBuffer_.abort();\n    }\n\n    if (!this.audioDisabled_ && this.audioBuffer_) {\n      this.audioBuffer_.abort();\n    }\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n\n    this.pendingBuffers_.length = 0;\n    this.bufferUpdating_ = false;\n  };\n\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget2) {\n  inherits(HtmlMediaSource, _videojs$EventTarget2);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this9 = possibleConstructorReturn(this, _videojs$EventTarget2.call(this));\n\n    var property = void 0;\n    _this9.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this9.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this9.nativeMediaSource_[property] === 'function') {\n        _this9[property] = _this9.nativeMediaSource_[property].bind(_this9.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this9.duration_ = NaN;\n    Object.defineProperty(_this9, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this9, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this9, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this9, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this9.sourceBuffers = [];\n    _this9.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this9.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this9.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this9.sourceBuffers.length === 1) {\n        var sourceBuffer = _this9.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this9.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this9.player_.audioTracks().length; i++) {\n        var track = _this9.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this9.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this9.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this9.onPlayerMediachange_ = function () {\n      _this9.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this9.onHlsReset_ = function () {\n      _this9.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this9.onHlsSegmentTimeMapping_ = function (event) {\n      _this9.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this9); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this9.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this9.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this9.player_ = videojs$1(video.parentNode); // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n      _this9.player_.tech_.on('hls-reset', _this9.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this9.player_.tech_.on('hls-segment-time-mapping', _this9.onHlsSegmentTimeMapping_);\n\n      if (_this9.player_.audioTracks && _this9.player_.audioTracks()) {\n        _this9.player_.audioTracks().on('change', _this9.updateActiveSourceBuffers_);\n\n        _this9.player_.audioTracks().on('addtrack', _this9.updateActiveSourceBuffers_);\n\n        _this9.player_.audioTracks().on('removetrack', _this9.updateActiveSourceBuffers_);\n      }\n\n      _this9.player_.on('mediachange', _this9.onPlayerMediachange_);\n    });\n\n    _this9.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this9.duration);\n\n      for (var i = 0; i < _this9.sourceBuffers.length; i++) {\n        var sourcebuffer = _this9.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this9.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this9;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  HtmlMediaSource.prototype.addSeekableRange_ = function addSeekableRange_(start, end) {\n    var error = void 0;\n\n    if (this.duration !== Infinity) {\n      error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n      error.name = 'InvalidStateError';\n      error.code = 11;\n      throw error;\n    }\n\n    if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n      this.nativeMediaSource_.duration = end;\n    }\n  };\n  /**\n   * Add a source buffer to the media source.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n   * @param {String} type the content-type of the content\n   * @return {Object} the created source buffer\n   */\n\n\n  HtmlMediaSource.prototype.addSourceBuffer = function addSourceBuffer(type) {\n    var buffer = void 0;\n    var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n    // stream segments into fragmented MP4s\n\n    if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n      var codecs = [];\n\n      if (parsedType.parameters && parsedType.parameters.codecs) {\n        codecs = parsedType.parameters.codecs.split(',');\n        codecs = translateLegacyCodecs(codecs);\n        codecs = codecs.filter(function (codec) {\n          return isAudioCodec(codec) || isVideoCodec(codec);\n        });\n      }\n\n      if (codecs.length === 0) {\n        codecs = ['avc1.4d400d', 'mp4a.40.2'];\n      }\n\n      buffer = new VirtualSourceBuffer(this, codecs);\n\n      if (this.sourceBuffers.length !== 0) {\n        // If another VirtualSourceBuffer already exists, then we are creating a\n        // SourceBuffer for an alternate audio track and therefore we know that\n        // the source has both an audio and video track.\n        // That means we should trigger the manual creation of the real\n        // SourceBuffers instead of waiting for the transmuxer to return data\n        this.sourceBuffers[0].createRealSourceBuffers_();\n        buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n        // a second source buffer is ever created\n\n        this.sourceBuffers[0].audioDisabled_ = true;\n      }\n    } else {\n      // delegate to the native implementation\n      buffer = this.nativeMediaSource_.addSourceBuffer(type);\n    }\n\n    this.sourceBuffers.push(buffer);\n    return buffer;\n  };\n\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget$) {\n  inherits(DashPlaylistLoader, _EventTarget$); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this10 = possibleConstructorReturn(this, _EventTarget$.call(this));\n\n    _this10.hls_ = hls;\n    _this10.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this10.on('minimumUpdatePeriod', function () {\n      _this10.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this10.on('mediaupdatetimeout', function () {\n      _this10.refreshMedia_();\n    }); // initialize the loader state\n\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this10.srcUrl = srcUrlOrPlaylist;\n      _this10.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn(_this10);\n    }\n\n    _this10.masterPlaylistLoader_ = masterPlaylistLoader;\n    _this10.state = 'HAVE_METADATA';\n    _this10.started = true; // we only should have one playlist so select it\n\n    _this10.media(srcUrlOrPlaylist); // trigger async to mimic behavior of HLS, where it must request a playlist\n\n\n    window$1.setTimeout(function () {\n      _this10.trigger('loadedmetadata');\n    }, 0);\n    return _this10;\n  }\n\n  DashPlaylistLoader.prototype.dispose = function dispose() {\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n  };\n\n  DashPlaylistLoader.prototype.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n\n  DashPlaylistLoader.prototype.media = function media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n\n    var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n\n      playlist = this.master.playlists[playlist];\n    }\n\n    var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n    this.state = 'HAVE_METADATA'; // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.media_ = playlist;\n    this.refreshMedia_(); // trigger media change if the active media has been updated\n\n    if (startingState !== 'HAVE_MASTER') {\n      this.trigger('mediachange');\n    }\n  };\n\n  DashPlaylistLoader.prototype.pause = function pause() {\n    this.stopRequest();\n\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  };\n\n  DashPlaylistLoader.prototype.load = function load() {\n    // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    this.trigger('loadedplaylist');\n  };\n  /**\n   * Parses the master xml string and updates playlist uri references\n   *\n   * @return {Object}\n   *         The parsed mpd manifest object\n   */\n\n\n  DashPlaylistLoader.prototype.parseMasterXml = function parseMasterXml() {\n    var master = mpdParser.parse(this.masterXml_, {\n      manifestUri: this.srcUrl,\n      clientOffset: this.clientOffset_\n    });\n    master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n    // but reference playlists by their URI throughout the project\n    // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n    for (var i = 0; i < master.playlists.length; i++) {\n      var phonyUri = 'placeholder-uri-' + i;\n      master.playlists[i].uri = phonyUri; // set up by URI references\n\n      master.playlists[phonyUri] = master.playlists[i];\n    } // set up phony URIs for the media group playlists since we won't have external\n    // URIs for DASH but reference playlists by their URI throughout the project\n\n\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (properties.playlists && properties.playlists.length) {\n        var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n        properties.playlists[0].uri = _phonyUri; // setup URI references\n\n        master.playlists[_phonyUri] = properties.playlists[0];\n      }\n    });\n    setupMediaPlaylists(master);\n    resolveMediaGroupUris(master);\n    return master;\n  };\n\n  DashPlaylistLoader.prototype.start = function start() {\n    var _this11 = this;\n\n    this.started = true; // request the specified URL\n\n    this.request = this.hls_.xhr({\n      uri: this.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this11.request) {\n        return;\n      } // clear the loader's request reference\n\n\n      _this11.request = null;\n\n      if (error) {\n        _this11.error = {\n          status: req.status,\n          message: 'DASH playlist request error at URL: ' + _this11.srcUrl,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (_this11.state === 'HAVE_NOTHING') {\n          _this11.started = false;\n        }\n\n        return _this11.trigger('error');\n      }\n\n      _this11.masterXml_ = req.responseText;\n\n      if (req.responseHeaders && req.responseHeaders.date) {\n        _this11.masterLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        _this11.masterLoaded_ = Date.now();\n      }\n\n      _this11.syncClientServerClock_(_this11.onClientServerClockSync_.bind(_this11));\n    });\n  };\n  /**\n   * Parses the master xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n\n  DashPlaylistLoader.prototype.syncClientServerClock_ = function syncClientServerClock_(done) {\n    var _this12 = this;\n\n    var utcTiming = mpdParser.parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.clientOffset_ = this.masterLoaded_ - Date.now();\n      return done();\n    }\n\n    if (utcTiming.method === 'DIRECT') {\n      this.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n\n    this.request = this.hls_.xhr({\n      uri: resolveUrl(this.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this12.request) {\n        return;\n      }\n\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        _this12.clientOffset_ = _this12.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      var serverTime = void 0;\n\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = _this12.masterLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n\n      _this12.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  };\n  /**\n   * Handler for after client/server clock synchronization has happened. Sets up\n   * xml refresh timer if specificed by the manifest.\n   */\n\n\n  DashPlaylistLoader.prototype.onClientServerClockSync_ = function onClientServerClockSync_() {\n    var _this13 = this;\n\n    this.master = this.parseMasterXml();\n    this.state = 'HAVE_MASTER';\n    this.trigger('loadedplaylist');\n\n    if (!this.media_) {\n      // no media playlist was specifically selected so start\n      // from the first listed one\n      this.media(this.master.playlists[0]);\n    } // trigger loadedmetadata to resolve setup of media groups\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n\n\n    window$1.setTimeout(function () {\n      _this13.trigger('loadedmetadata');\n    }, 0); // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n    // be refreshed when this is the case. The inter-op guide says that when the\n    // minimumUpdatePeriod is 0, the manifest should outline all currently available\n    // segments, but future segments may require an update. I think a good solution\n    // would be to update the manifest at the same rate that the media playlists\n    // are \"refreshed\", i.e. every targetDuration.\n\n    if (this.master.minimumUpdatePeriod) {\n      window$1.setTimeout(function () {\n        _this13.trigger('minimumUpdatePeriod');\n      }, this.master.minimumUpdatePeriod);\n    }\n  };\n  /**\n   * Sends request to refresh the master xml and updates the parsed master manifest\n   * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n   */\n\n\n  DashPlaylistLoader.prototype.refreshXml_ = function refreshXml_() {\n    var _this14 = this;\n\n    this.request = this.hls_.xhr({\n      uri: this.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this14.request) {\n        return;\n      } // clear the loader's request reference\n\n\n      _this14.request = null;\n\n      if (error) {\n        _this14.error = {\n          status: req.status,\n          message: 'DASH playlist request error at URL: ' + _this14.srcUrl,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (_this14.state === 'HAVE_NOTHING') {\n          _this14.started = false;\n        }\n\n        return _this14.trigger('error');\n      }\n\n      _this14.masterXml_ = req.responseText;\n\n      var newMaster = _this14.parseMasterXml();\n\n      _this14.master = updateMaster$1(_this14.master, newMaster);\n      window$1.setTimeout(function () {\n        _this14.trigger('minimumUpdatePeriod');\n      }, _this14.master.minimumUpdatePeriod);\n    });\n  };\n  /**\n   * Refreshes the media playlist by re-parsing the master xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the master loader.\n   */\n\n\n  DashPlaylistLoader.prototype.refreshMedia_ = function refreshMedia_() {\n    var _this15 = this;\n\n    var oldMaster = void 0;\n    var newMaster = void 0;\n\n    if (this.masterPlaylistLoader_) {\n      oldMaster = this.masterPlaylistLoader_.master;\n      newMaster = this.masterPlaylistLoader_.parseMasterXml();\n    } else {\n      oldMaster = this.master;\n      newMaster = this.parseMasterXml();\n    }\n\n    var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n    if (updatedMaster) {\n      if (this.masterPlaylistLoader_) {\n        this.masterPlaylistLoader_.master = updatedMaster;\n      } else {\n        this.master = updatedMaster;\n      }\n\n      this.media_ = updatedMaster.playlists[this.media_.uri];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    if (!this.media().endList) {\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        _this15.trigger('mediaupdatetimeout');\n      }, refreshDelay(this.media(), !!updatedMaster));\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  SourceUpdater.prototype.createSourceBuffer_ = function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n    var _this16 = this;\n\n    this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n    this.logger_('created SourceBuffer');\n\n    if (sourceBufferEmitter) {\n      sourceBufferEmitter.trigger('sourcebufferadded');\n\n      if (this.mediaSource.sourceBuffers.length < 2) {\n        // There's another source buffer we must wait for before we can start updating\n        // our own (or else we can get into a bad state, i.e., appending video/audio data\n        // before the other video/audio source buffer is available and leading to a video\n        // or audio only buffer).\n        sourceBufferEmitter.on('sourcebufferadded', function () {\n          _this16.start_();\n        });\n        return;\n      }\n    }\n\n    this.start_();\n  };\n\n  SourceUpdater.prototype.start_ = function start_() {\n    var _this17 = this;\n\n    this.started_ = true; // run completion handlers and process callbacks as updateend\n    // events fire\n\n    this.onUpdateendCallback_ = function () {\n      var pendingCallback = _this17.pendingCallback_;\n      _this17.pendingCallback_ = null;\n\n      _this17.logger_('buffered [' + printableRange(_this17.buffered()) + ']');\n\n      if (pendingCallback) {\n        pendingCallback();\n      }\n\n      _this17.runCallback_();\n    };\n\n    this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n    this.runCallback_();\n  };\n  /**\n   * Aborts the current segment and resets the segment parser.\n   *\n   * @param {Function} done function to call when done\n   * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n   */\n\n\n  SourceUpdater.prototype.abort = function abort(done) {\n    var _this18 = this;\n\n    if (this.processedAppend_) {\n      this.queueCallback_(function () {\n        _this18.sourceBuffer_.abort();\n      }, done);\n    }\n  };\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {ArrayBuffer} bytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n\n  SourceUpdater.prototype.appendBuffer = function appendBuffer(bytes, done) {\n    var _this19 = this;\n\n    this.processedAppend_ = true;\n    this.queueCallback_(function () {\n      _this19.sourceBuffer_.appendBuffer(bytes);\n    }, done);\n  };\n  /**\n   * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n   *\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n   */\n\n\n  SourceUpdater.prototype.buffered = function buffered() {\n    if (!this.sourceBuffer_) {\n      return videojs$1.createTimeRanges();\n    }\n\n    return this.sourceBuffer_.buffered;\n  };\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {Number} start where to start the removal\n   * @param {Number} end where to end the removal\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n\n  SourceUpdater.prototype.remove = function remove(start, end) {\n    var _this20 = this;\n\n    if (this.processedAppend_) {\n      this.queueCallback_(function () {\n        _this20.logger_('remove [' + start + ' => ' + end + ']');\n\n        _this20.sourceBuffer_.remove(start, end);\n      }, noop);\n    }\n  };\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {Boolean} the updating status of the SourceBuffer\n   */\n\n\n  SourceUpdater.prototype.updating = function updating() {\n    return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n  };\n  /**\n   * Set/get the timestampoffset on the SourceBuffer\n   *\n   * @return {Number} the timestamp offset\n   */\n\n\n  SourceUpdater.prototype.timestampOffset = function timestampOffset(offset) {\n    var _this21 = this;\n\n    if (typeof offset !== 'undefined') {\n      this.queueCallback_(function () {\n        _this21.sourceBuffer_.timestampOffset = offset;\n      });\n      this.timestampOffset_ = offset;\n    }\n\n    return this.timestampOffset_;\n  };\n  /**\n   * Queue a callback to run\n   */\n\n\n  SourceUpdater.prototype.queueCallback_ = function queueCallback_(callback, done) {\n    this.callbacks_.push([callback.bind(this), done]);\n    this.runCallback_();\n  };\n  /**\n   * Run a queued callback\n   */\n\n\n  SourceUpdater.prototype.runCallback_ = function runCallback_() {\n    var callbacks = void 0;\n\n    if (!this.updating() && this.callbacks_.length && this.started_) {\n      callbacks = this.callbacks_.shift();\n      this.pendingCallback_ = callbacks[1];\n      callbacks[0]();\n    }\n  };\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n\n  SourceUpdater.prototype.dispose = function dispose() {\n    this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n    if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n      this.sourceBuffer_.abort();\n    }\n  };\n\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler); // this is an encrypted segment\n  // incrementally decrypt the segment\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\n\n\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n        return doneFn(worstError, segment);\n      }\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // filter out playlists without resolution information\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget3) {\n  inherits(SegmentLoader, _videojs$EventTarget3);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this22 = possibleConstructorReturn(this, _videojs$EventTarget3.call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this22.bandwidth = settings.bandwidth;\n    _this22.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this22.roundTrip = NaN;\n\n    _this22.resetStats_();\n\n    _this22.mediaIndex = null; // private settings\n\n    _this22.hasPlayed_ = settings.hasPlayed;\n    _this22.currentTime_ = settings.currentTime;\n    _this22.seekable_ = settings.seekable;\n    _this22.seeking_ = settings.seeking;\n    _this22.duration_ = settings.duration;\n    _this22.mediaSource_ = settings.mediaSource;\n    _this22.hls_ = settings.hls;\n    _this22.loaderType_ = settings.loaderType;\n    _this22.startingMedia_ = void 0;\n    _this22.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this22.goalBufferLength_ = settings.goalBufferLength;\n    _this22.sourceType_ = settings.sourceType;\n    _this22.state_ = 'INIT'; // private instance variables\n\n    _this22.checkBufferTimeout_ = null;\n    _this22.error_ = void 0;\n    _this22.currentTimeline_ = -1;\n    _this22.pendingSegment_ = null;\n    _this22.mimeType_ = null;\n    _this22.sourceUpdater_ = null;\n    _this22.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this22.activeInitSegmentId_ = null;\n    _this22.initSegments_ = {};\n    _this22.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this22.syncController_ = settings.syncController;\n    _this22.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this22.syncController_.on('syncinfoupdate', function () {\n      return _this22.trigger('syncinfoupdate');\n    });\n\n    _this22.mediaSource_.addEventListener('sourceopen', function () {\n      return _this22.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this22.fetchAtBuffer_ = false;\n    _this22.logger_ = logger('SegmentLoader[' + _this22.loaderType_ + ']');\n    Object.defineProperty(_this22, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this22;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.resetStats_ = function resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n  };\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n\n  SegmentLoader.prototype.dispose = function dispose() {\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n\n    if (this.sourceUpdater_) {\n      this.sourceUpdater_.dispose();\n    }\n\n    this.resetStats_();\n  };\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n\n  SegmentLoader.prototype.abort = function abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n\n      return;\n    }\n\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  };\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.abort_ = function abort_() {\n    if (this.pendingSegment_) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n\n    this.pendingSegment_ = null;\n  };\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n\n  SegmentLoader.prototype.error = function error(_error) {\n    if (typeof _error !== 'undefined') {\n      this.error_ = _error;\n    }\n\n    this.pendingSegment_ = null;\n    return this.error_;\n  };\n\n  SegmentLoader.prototype.endOfStream = function endOfStream() {\n    this.ended_ = true;\n    this.pause();\n    this.trigger('ended');\n  };\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  SegmentLoader.prototype.buffered_ = function buffered_() {\n    if (!this.sourceUpdater_) {\n      return videojs$1.createTimeRanges();\n    }\n\n    return this.sourceUpdater_.buffered();\n  };\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {Boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n\n  SegmentLoader.prototype.initSegment = function initSegment(map) {\n    var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set$$1 && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes\n      };\n    }\n\n    return storedMap || map;\n  };\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {Boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n\n  SegmentLoader.prototype.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n    // source updater or being in the INIT state with a mimeType is enough\n    // to say we have all the needed configuration to start loading.\n    this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n  };\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n\n  SegmentLoader.prototype.load = function load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // not sure if this is the best place for this\n\n\n    this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n\n    this.state = 'READY';\n  };\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.init_ = function init_() {\n    this.state = 'READY';\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n    this.resetEverything();\n    return this.monitorBuffer_();\n  };\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n\n  SegmentLoader.prototype.playlist = function playlist(newPlaylist) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!newPlaylist) {\n      return;\n    }\n\n    var oldPlaylist = this.playlist_;\n    var segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n\n    if (!this.hasPlayed_()) {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      };\n    }\n\n    var oldId = oldPlaylist ? oldPlaylist.id : null;\n    this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must \"resync\" the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        this.resyncLoader();\n      } // the rest of this function depends on `oldPlaylist` being defined\n\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff;\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n      // saved for the new playlist's segment, however, if the segment fell off the\n      // playlist, we can leave the old reference and just lose the timing info\n\n      if (segmentInfo.mediaIndex >= 0) {\n        segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n      }\n    }\n\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  };\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n\n  SegmentLoader.prototype.pause = function pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  };\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n\n  SegmentLoader.prototype.paused = function paused() {\n    return this.checkBufferTimeout_ === null;\n  };\n  /**\n   * create/set the following mimetype on the SourceBuffer through a\n   * SourceUpdater\n   *\n   * @param {String} mimeType the mime type string to use\n   * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n   * is added to the media source\n   */\n\n\n  SegmentLoader.prototype.mimeType = function mimeType(_mimeType, sourceBufferEmitter) {\n    if (this.mimeType_) {\n      return;\n    }\n\n    this.mimeType_ = _mimeType;\n    this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n  };\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   */\n\n\n  SegmentLoader.prototype.resetEverything = function resetEverything() {\n    this.ended_ = false;\n    this.resetLoader();\n    this.remove(0, this.duration_());\n    this.trigger('reseteverything');\n  };\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n\n  SegmentLoader.prototype.resetLoader = function resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  };\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n\n  SegmentLoader.prototype.resyncLoader = function resyncLoader() {\n    this.mediaIndex = null;\n    this.syncPoint_ = null;\n    this.abort();\n  };\n  /**\n   * Remove any data in the source buffer between start and end times\n   * @param {Number} start - the start time of the region to remove from the buffer\n   * @param {Number} end - the end time of the region to remove from the buffer\n   */\n\n\n  SegmentLoader.prototype.remove = function remove(start, end) {\n    if (this.sourceUpdater_) {\n      this.sourceUpdater_.remove(start, end);\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n  };\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.monitorBuffer_ = function monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  };\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.monitorBufferTick_ = function monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  };\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.fillBuffer_ = function fillBuffer_() {\n    if (this.sourceUpdater_.updating()) {\n      return;\n    }\n\n    if (!this.syncPoint_) {\n      this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    } // see if we need to begin loading immediately\n\n\n    var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n    if (isEndOfStream) {\n      this.endOfStream();\n      return;\n    }\n\n    if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n      return;\n    } // We will need to change timestampOffset of the sourceBuffer if either of\n    // the following conditions are true:\n    // - The segment.timeline !== this.currentTimeline\n    //   (we are crossing a discontinuity somehow)\n    // - The \"timestampOffset\" for the start of this segment is less than\n    //   the currently set timestampOffset\n\n\n    if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n      this.syncController_.reset();\n      segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n    }\n\n    this.loadSegment_(segmentInfo);\n  };\n  /**\n   * Determines what segment request should be made, given current playback\n   * state.\n   *\n   * @param {TimeRanges} buffered - the state of the buffer\n   * @param {Object} playlist - the playlist object to fetch segments from\n   * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n   * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n   * @param {Number} currentTime - the playback position in seconds\n   * @param {Object} syncPoint - a segment info object that describes the\n   * @returns {Object} a segment request object that describes the segment to load\n   */\n\n\n  SegmentLoader.prototype.checkBuffer_ = function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n    var lastBufferedEnd = 0;\n    var startOfSegment = void 0;\n\n    if (buffered.length) {\n      lastBufferedEnd = buffered.end(buffered.length - 1);\n    }\n\n    var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n    if (!playlist.segments.length) {\n      return null;\n    } // if there is plenty of content buffered, and the video has\n    // been played before relax for awhile\n\n\n    if (bufferedTime >= this.goalBufferLength_()) {\n      return null;\n    } // if the video has not yet played once, and we already have\n    // one segment downloaded do nothing\n\n\n    if (!hasPlayed && bufferedTime >= 1) {\n      return null;\n    } // When the syncPoint is null, there is no way of determining a good\n    // conservative segment index to fetch from\n    // The best thing to do here is to get the kind of sync-point data by\n    // making a request\n\n\n    if (syncPoint === null) {\n      mediaIndex = this.getSyncSegmentCandidate_(playlist);\n      return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n    } // Under normal playback conditions fetching is a simple walk forward\n\n\n    if (mediaIndex !== null) {\n      var segment = playlist.segments[mediaIndex];\n\n      if (segment && segment.end) {\n        startOfSegment = segment.end;\n      } else {\n        startOfSegment = lastBufferedEnd;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n    } // There is a sync-point but the lack of a mediaIndex indicates that\n    // we need to make a good conservative guess about which segment to\n    // fetch\n\n\n    if (this.fetchAtBuffer_) {\n      // Find the segment containing the end of the buffer\n      var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n      mediaIndex = mediaSourceInfo.mediaIndex;\n      startOfSegment = mediaSourceInfo.startTime;\n    } else {\n      // Find the segment containing currentTime\n      var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n      mediaIndex = _mediaSourceInfo.mediaIndex;\n      startOfSegment = _mediaSourceInfo.startTime;\n    }\n\n    return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n  };\n  /**\n   * The segment loader has no recourse except to fetch a segment in the\n   * current playlist and use the internal timestamps in that segment to\n   * generate a syncPoint. This function returns a good candidate index\n   * for that process.\n   *\n   * @param {Object} playlist - the playlist object to look for a\n   * @returns {Number} An index of a segment from the playlist to load\n   */\n\n\n  SegmentLoader.prototype.getSyncSegmentCandidate_ = function getSyncSegmentCandidate_(playlist) {\n    var _this23 = this;\n\n    if (this.currentTimeline_ === -1) {\n      return 0;\n    }\n\n    var segmentIndexArray = playlist.segments.map(function (s, i) {\n      return {\n        timeline: s.timeline,\n        segmentIndex: i\n      };\n    }).filter(function (s) {\n      return s.timeline === _this23.currentTimeline_;\n    });\n\n    if (segmentIndexArray.length) {\n      return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n    }\n\n    return Math.max(playlist.segments.length - 1, 0);\n  };\n\n  SegmentLoader.prototype.generateSegmentInfo_ = function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n    if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n      return null;\n    }\n\n    var segment = playlist.segments[mediaIndex];\n    return {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex: mediaIndex,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest: isSyncRequest,\n      startOfSegment: startOfSegment,\n      // the segment's playlist\n      playlist: playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment: segment\n    };\n  };\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @return {Boolean} True if the request was aborted, false otherwise\n   * @private\n   */\n\n\n  SegmentLoader.prototype.abortRequestEarly_ = function abortRequestEarly_(stats) {\n    if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return false;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return false;\n    }\n\n    var currentTime = this.currentTime_();\n    var measuredBandwidth = stats.bandwidth;\n    var segmentDuration = this.pendingSegment_.duration;\n    var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n      return false;\n    }\n\n    var switchCandidate = minRebufferMaxBandwidthSelector({\n      master: this.hls_.playlists.master,\n      currentTime: currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration: segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n\n    if (!switchCandidate) {\n      return;\n    }\n\n    var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n    var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return false;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.abort();\n    this.trigger('earlyabort');\n    return true;\n  };\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n\n  SegmentLoader.prototype.handleProgress_ = function handleProgress_(event, simpleSegment) {\n    if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n      return;\n    }\n\n    this.trigger('progress');\n  };\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.loadSegment_ = function loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n    this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n  };\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n\n  SegmentLoader.prototype.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n    var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  };\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @returns {Object} a simplified segment object copy\n   */\n\n\n  SegmentLoader.prototype.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var simpleSegment = {\n      resolvedUri: segment.resolvedUri,\n      byterange: segment.byterange,\n      requestId: segmentInfo.requestId\n    };\n\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = {\n        resolvedUri: segment.key.resolvedUri,\n        iv: iv\n      };\n    }\n\n    if (segment.map) {\n      simpleSegment.map = this.initSegment(segment.map);\n    }\n\n    return simpleSegment;\n  };\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n\n    if (simpleSegment.stats) {\n      this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n      this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n    } // The request was aborted and the SegmentLoader has already been reset\n\n\n    if (!this.pendingSegment_) {\n      this.mediaRequestsAborted += 1;\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n      // this is not a true error condition and nothing corrective needs\n      // to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.mediaRequestsTimedout += 1;\n        this.bandwidth = 1;\n        this.roundTrip = NaN;\n        this.trigger('bandwidthupdate');\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to blacklist the current playlist\n\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    } // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n\n    this.bandwidth = simpleSegment.stats.bandwidth;\n    this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegment(simpleSegment.map, true);\n    }\n\n    this.processSegmentResponse_(simpleSegment);\n  };\n  /**\n   * Move any important data from the simplified segment object\n   * back to the real segment object for future phases\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.processSegmentResponse_ = function processSegmentResponse_(simpleSegment) {\n    var segmentInfo = this.pendingSegment_;\n    segmentInfo.bytes = simpleSegment.bytes;\n\n    if (simpleSegment.map) {\n      segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n    }\n\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    this.handleSegment_();\n  };\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.handleSegment_ = function handleSegment_() {\n    var _this24 = this;\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var segment = segmentInfo.segment;\n    var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n    // dealing with. Although we're maintaining extra state, it helps to preserve the\n    // separation of segment loader from the actual source buffers.\n\n    if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n    // certain that all streams will provide it.\n    timingInfo.containsAudio || timingInfo.containsVideo)) {\n      this.startingMedia_ = {\n        containsAudio: timingInfo.containsAudio,\n        containsVideo: timingInfo.containsVideo\n      };\n    }\n\n    var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    }\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n\n    if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n      this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n      this.trigger('timestampoffset');\n    }\n\n    var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n    if (timelineMapping !== null) {\n      this.trigger({\n        type: 'segmenttimemapping',\n        mapping: timelineMapping\n      });\n    }\n\n    this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n    // before the content segment\n\n    if (segment.map) {\n      var initId = initSegmentId(segment.map);\n\n      if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n        var initSegment = this.initSegment(segment.map);\n        this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n          _this24.activeInitSegmentId_ = initId;\n        });\n      }\n    }\n\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n\n    this.logger_(segmentInfoString(segmentInfo));\n    this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n  };\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.handleUpdateEnd_ = function handleUpdateEnd_() {\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var segment = segmentInfo.segment;\n    var isWalkingForward = this.mediaIndex !== null;\n    this.pendingSegment_ = null;\n    this.recordThroughput_(segmentInfo);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.state = 'READY';\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.fetchAtBuffer_ = true;\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n      this.resetEverything();\n      return;\n    } // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n\n    this.trigger('progress'); // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n    if (isEndOfStream) {\n      this.endOfStream();\n    }\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  };\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n\n  SegmentLoader.prototype.recordThroughput_ = function recordThroughput_(segmentInfo) {\n    var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  };\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n\n  SegmentLoader.prototype.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n\n    var segment = segmentInfo.segment;\n    var start = segment.start;\n    var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    var value = {\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.uri,\n      start: start,\n      end: end\n    };\n    var data = JSON.stringify(value);\n    var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  };\n\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\nvar uintToString = function uintToString(uintArray) {\n  return String.fromCharCode.apply(null, uintArray);\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this25 = possibleConstructorReturn(this, _SegmentLoader.call(this, settings, options));\n\n    _this25.mediaSource_ = null;\n    _this25.subtitlesTrack_ = null;\n    return _this25;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  VTTSegmentLoader.prototype.buffered_ = function buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n      return videojs$1.createTimeRanges();\n    }\n\n    var cues = this.subtitlesTrack_.cues;\n    var start = cues[0].startTime;\n    var end = cues[cues.length - 1].startTime;\n    return videojs$1.createTimeRanges([[start, end]]);\n  };\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {Boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n\n  VTTSegmentLoader.prototype.initSegment = function initSegment(map) {\n    var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set$$1 && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      var combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n\n    return storedMap || map;\n  };\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {Boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  };\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.init_ = function init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  };\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n\n  VTTSegmentLoader.prototype.track = function track(_track) {\n    if (typeof _track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n\n    this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n\n    return this.subtitlesTrack_;\n  };\n  /**\n   * Remove any data in the source buffer between start and end times\n   * @param {Number} start - the start time of the region to remove from the buffer\n   * @param {Number} end - the end time of the region to remove from the buffer\n   */\n\n\n  VTTSegmentLoader.prototype.remove = function remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  };\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.fillBuffer_ = function fillBuffer_() {\n    var _this26 = this;\n\n    if (!this.syncPoint_) {\n      this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    } // see if we need to begin loading immediately\n\n\n    var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n    segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      var checkTimestampOffset = function checkTimestampOffset() {\n        _this26.state = 'READY';\n\n        if (!_this26.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          _this26.monitorBuffer_();\n        }\n      };\n\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n\n    this.loadSegment_(segmentInfo);\n  };\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n\n  VTTSegmentLoader.prototype.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n    }\n\n    return segmentInfo;\n  };\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.handleSegment_ = function handleSegment_() {\n    var _this27 = this;\n\n    if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n\n    this.state = 'APPENDING';\n    var segmentInfo = this.pendingSegment_;\n    var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n      var loadHandler = function loadHandler() {\n        _this27.handleSegment_();\n      };\n\n      this.state = 'WAITING_ON_VTTJS';\n      this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n      this.subtitlesTrack_.tech_.one('vttjserror', function () {\n        _this27.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n        _this27.error({\n          message: 'Error loading vtt.js'\n        });\n\n        _this27.state = 'READY';\n\n        _this27.pause();\n\n        _this27.trigger('error');\n      });\n      return;\n    }\n\n    segment.requested = true;\n\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.error({\n        message: e.message\n      });\n      this.state = 'READY';\n      this.pause();\n      return this.trigger('error');\n    }\n\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration;\n\n    if (segmentInfo.cues.length) {\n      // remove any overlapping cues to prevent doubling\n      this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n    }\n\n    segmentInfo.cues.forEach(function (cue) {\n      _this27.subtitlesTrack_.addCue(cue);\n    });\n    this.handleUpdateEnd_();\n  };\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n    var decoder = void 0;\n    var decodeBytesToString = false;\n\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n\n    var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n    parser.ontimestampmap = function (map) {\n      return segmentInfo.timestampmap = map;\n    };\n\n    parser.onparsingerror = function (error) {\n      videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n\n    if (segmentInfo.segment.map) {\n      var mapData = segmentInfo.segment.map.bytes;\n\n      if (decodeBytesToString) {\n        mapData = uintToString(mapData);\n      }\n\n      parser.parse(mapData);\n    }\n\n    var segmentData = segmentInfo.bytes;\n\n    if (decodeBytesToString) {\n      segmentData = uintToString(segmentData);\n    }\n\n    parser.parse(segmentData);\n    parser.flush();\n  };\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    var segment = segmentInfo.segment;\n\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n\n    var timestampmap = segmentInfo.timestampmap;\n    var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(function (cue) {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n\n    if (!playlist.syncInfo) {\n      var firstStart = segmentInfo.cues[0].startTime;\n      var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  };\n\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        adOffset = _segment$cueOutCont$s[0];\n        adTotal = _segment$cueOutCont$s[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget4) {\n  inherits(SyncController, _videojs$EventTarget4);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this28 = possibleConstructorReturn(this, _videojs$EventTarget4.call(this));\n\n    _this28.inspectCache_ = undefined; // ...for synching across variants\n\n    _this28.timelines = [];\n    _this28.discontinuities = [];\n    _this28.datetimeToDisplayTime = null;\n    _this28.logger_ = logger('SyncController');\n    return _this28;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  SyncController.prototype.getSyncPoint = function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  };\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @returns {Number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n\n  SyncController.prototype.getExpiredTime = function getExpiredTime(playlist, duration$$1) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n\n    var syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n\n    return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n  };\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Array}\n   *          A list of sync-point objects\n   */\n\n\n  SyncController.prototype.runStrategies_ = function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (var i = 0; i < syncPointStrategies.length; i++) {\n      var strategy = syncPointStrategies[i];\n      var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint: syncPoint\n        });\n      }\n    }\n\n    return syncPoints;\n  };\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {String} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {Number} target.value\n   *        The value to target for the specified key.\n   * @returns {Object}\n   *          The sync-point nearest the target\n   */\n\n\n  SyncController.prototype.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n    var bestSyncPoint = syncPoints[0].syncPoint;\n    var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    var bestStrategy = syncPoints[0].strategy;\n\n    for (var i = 1; i < syncPoints.length; i++) {\n      var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n\n    this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n    return bestSyncPoint;\n  };\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n\n  SyncController.prototype.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n      var lastRemovedSegment = oldPlaylist.segments[i];\n\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  };\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should\n   * only ever happen once at the start of playback.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n\n  SyncController.prototype.setDateTimeMapping = function setDateTimeMapping(playlist) {\n    if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n      this.datetimeToDisplayTime = -playlistTimestamp;\n    }\n  };\n  /**\n   * Reset the state of the inspection cache when we do a rendition\n   * switch\n   */\n\n\n  SyncController.prototype.reset = function reset() {\n    this.inspectCache_ = undefined;\n  };\n  /**\n   * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n   * and end of the segment in it's internal \"media time\". Used to generate\n   * mappings from that internal \"media time\" to the display time that is\n   * shown on the player.\n   *\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n\n  SyncController.prototype.probeSegmentInfo = function probeSegmentInfo(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var playlist = segmentInfo.playlist;\n    var timingInfo = void 0;\n\n    if (segment.map) {\n      timingInfo = this.probeMp4Segment_(segmentInfo);\n    } else {\n      timingInfo = this.probeTsSegment_(segmentInfo);\n    }\n\n    if (timingInfo) {\n      if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n        this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n        // now with segment timing information\n\n        if (!playlist.syncInfo) {\n          playlist.syncInfo = {\n            mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n            time: segment.start\n          };\n        }\n      }\n    }\n\n    return timingInfo;\n  };\n  /**\n   * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n   * in it's internal \"media time\".\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   * @return {object} The start and end time of the current segment in \"media time\"\n   */\n\n\n  SyncController.prototype.probeMp4Segment_ = function probeMp4Segment_(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var timescales = mp4probe.timescale(segment.map.bytes);\n    var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n    if (segmentInfo.timestampOffset !== null) {\n      segmentInfo.timestampOffset -= startTime;\n    }\n\n    return {\n      start: startTime,\n      end: startTime + segment.duration\n    };\n  };\n  /**\n   * Probe an mpeg2-ts segment to determine the start and end of the segment\n   * in it's internal \"media time\".\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   * @return {object} The start and end time of the current segment in \"media time\"\n   */\n\n\n  SyncController.prototype.probeTsSegment_ = function probeTsSegment_(segmentInfo) {\n    var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n    var segmentStartTime = void 0;\n    var segmentEndTime = void 0;\n\n    if (!timeInfo) {\n      return null;\n    }\n\n    if (timeInfo.video && timeInfo.video.length === 2) {\n      this.inspectCache_ = timeInfo.video[1].dts;\n      segmentStartTime = timeInfo.video[0].dtsTime;\n      segmentEndTime = timeInfo.video[1].dtsTime;\n    } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n      this.inspectCache_ = timeInfo.audio[1].dts;\n      segmentStartTime = timeInfo.audio[0].dtsTime;\n      segmentEndTime = timeInfo.audio[1].dtsTime;\n    }\n\n    return {\n      start: segmentStartTime,\n      end: segmentEndTime,\n      containsVideo: timeInfo.video && timeInfo.video.length === 2,\n      containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n    };\n  };\n\n  SyncController.prototype.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n\n    return this.timelines[timeline].time;\n  };\n\n  SyncController.prototype.mappingForTimeline = function mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n\n    return this.timelines[timeline].mapping;\n  };\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @returns {Boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n\n  SyncController.prototype.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n    var segment = segmentInfo.segment;\n    var mappingObj = this.timelines[segmentInfo.timeline];\n\n    if (segmentInfo.timestampOffset !== null) {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      this.timelines[segmentInfo.timeline] = mappingObj;\n      this.trigger('timestampoffset');\n      this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n      segment.start = segmentInfo.startOfSegment;\n      segment.end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      segment.start = timingInfo.start + mappingObj.mapping;\n      segment.end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n\n  SyncController.prototype.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n    var playlist = segmentInfo.playlist;\n    var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        var accuracy = Math.abs(mediaIndexDiff);\n\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          var time = void 0;\n\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n          } else {\n            time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n          }\n\n          this.discontinuities[discontinuity] = {\n            time: time,\n            accuracy: accuracy\n          };\n        }\n      }\n    }\n  };\n\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          window_1.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget5) {\n  inherits(MasterPlaylistController, _videojs$EventTarget5);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this29 = possibleConstructorReturn(this, _videojs$EventTarget5.call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this29.withCredentials = withCredentials;\n    _this29.tech_ = tech;\n    _this29.hls_ = tech.hls;\n    _this29.sourceType_ = sourceType;\n    _this29.useCueTags_ = useCueTags;\n    _this29.blacklistDuration = blacklistDuration;\n    _this29.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this29.useCueTags_) {\n      _this29.cueTagsTrack_ = _this29.tech_.addTextTrack('metadata', 'ad-cues');\n      _this29.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this29.requestOptions_ = {\n      withCredentials: _this29.withCredentials,\n      timeout: null\n    };\n    _this29.mediaTypes_ = createMediaTypes();\n    _this29.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this29.mediaSource.addEventListener('sourceopen', _this29.handleSourceOpen_.bind(_this29));\n\n    _this29.seekable_ = videojs$1.createTimeRanges();\n\n    _this29.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this29.syncController_ = new SyncController(options);\n    _this29.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this29.decrypter_ = new Decrypter$1();\n    var segmentLoaderSettings = {\n      hls: _this29.hls_,\n      mediaSource: _this29.mediaSource,\n      currentTime: _this29.tech_.currentTime.bind(_this29.tech_),\n      seekable: function seekable() {\n        return _this29.seekable();\n      },\n      seeking: function seeking() {\n        return _this29.tech_.seeking();\n      },\n      duration: function duration() {\n        return _this29.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this29.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this29.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this29.syncController_,\n      decrypter: _this29.decrypter_,\n      sourceType: _this29.sourceType_\n    };\n    _this29.masterPlaylistLoader_ = _this29.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this29.hls_, _this29.withCredentials) : new PlaylistLoader(url, _this29.hls_, _this29.withCredentials);\n\n    _this29.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this29.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this29.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this29.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this29.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this29.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this29[stat + '_'] = sumLoaderStat.bind(_this29, stat);\n    });\n    _this29.logger_ = logger('MPC');\n\n    _this29.masterPlaylistLoader_.load();\n\n    return _this29;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n    var _this30 = this;\n\n    this.masterPlaylistLoader_.on('loadedmetadata', function () {\n      var media = _this30.masterPlaylistLoader_.media();\n\n      var requestTimeout = _this30.masterPlaylistLoader_.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(_this30.masterPlaylistLoader_.master, _this30.masterPlaylistLoader_.media())) {\n        _this30.requestOptions_.timeout = 0;\n      } else {\n        _this30.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n\n      if (media.endList && _this30.tech_.preload() !== 'none') {\n        _this30.mainSegmentLoader_.playlist(media, _this30.requestOptions_);\n\n        _this30.mainSegmentLoader_.load();\n      }\n\n      setupMediaGroups({\n        sourceType: _this30.sourceType_,\n        segmentLoaders: {\n          AUDIO: _this30.audioSegmentLoader_,\n          SUBTITLES: _this30.subtitleSegmentLoader_,\n          main: _this30.mainSegmentLoader_\n        },\n        tech: _this30.tech_,\n        requestOptions: _this30.requestOptions_,\n        masterPlaylistLoader: _this30.masterPlaylistLoader_,\n        hls: _this30.hls_,\n        master: _this30.master(),\n        mediaTypes: _this30.mediaTypes_,\n        blacklistCurrentPlaylist: _this30.blacklistCurrentPlaylist.bind(_this30)\n      });\n\n      _this30.triggerPresenceUsage_(_this30.master(), media);\n\n      try {\n        _this30.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create SourceBuffers', e);\n        return _this30.mediaSource.endOfStream('decode');\n      }\n\n      _this30.setupFirstPlay();\n\n      _this30.trigger('selectedinitialmedia');\n    });\n    this.masterPlaylistLoader_.on('loadedplaylist', function () {\n      var updatedPlaylist = _this30.masterPlaylistLoader_.media();\n\n      if (!updatedPlaylist) {\n        // blacklist any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        _this30.excludeUnsupportedVariants_();\n\n        var selectedMedia = void 0;\n\n        if (_this30.enableLowInitialPlaylist) {\n          selectedMedia = _this30.selectInitialPlaylist();\n        }\n\n        if (!selectedMedia) {\n          selectedMedia = _this30.selectPlaylist();\n        }\n\n        _this30.initialMedia_ = selectedMedia;\n\n        _this30.masterPlaylistLoader_.media(_this30.initialMedia_);\n\n        return;\n      }\n\n      if (_this30.useCueTags_) {\n        _this30.updateAdCues_(updatedPlaylist);\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `mediachange`\n\n\n      _this30.mainSegmentLoader_.playlist(updatedPlaylist, _this30.requestOptions_);\n\n      _this30.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n      // as it is possible that it was temporarily stopped while waiting for\n      // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n      if (!_this30.tech_.paused()) {\n        _this30.mainSegmentLoader_.load();\n      }\n\n      if (!updatedPlaylist.endList) {\n        var addSeekableRange = function addSeekableRange() {\n          var seekable$$1 = _this30.seekable();\n\n          if (seekable$$1.length !== 0) {\n            _this30.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n          }\n        };\n\n        if (_this30.duration() !== Infinity) {\n          var onDurationchange = function onDurationchange() {\n            if (_this30.duration() === Infinity) {\n              addSeekableRange();\n            } else {\n              _this30.tech_.one('durationchange', onDurationchange);\n            }\n          };\n\n          _this30.tech_.one('durationchange', onDurationchange);\n        } else {\n          addSeekableRange();\n        }\n      }\n    });\n    this.masterPlaylistLoader_.on('error', function () {\n      _this30.blacklistCurrentPlaylist(_this30.masterPlaylistLoader_.error);\n    });\n    this.masterPlaylistLoader_.on('mediachanging', function () {\n      _this30.mainSegmentLoader_.abort();\n\n      _this30.mainSegmentLoader_.pause();\n    });\n    this.masterPlaylistLoader_.on('mediachange', function () {\n      var media = _this30.masterPlaylistLoader_.media();\n\n      var requestTimeout = _this30.masterPlaylistLoader_.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(_this30.masterPlaylistLoader_.master, _this30.masterPlaylistLoader_.media())) {\n        _this30.requestOptions_.timeout = 0;\n      } else {\n        _this30.requestOptions_.timeout = requestTimeout;\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n\n      _this30.mainSegmentLoader_.playlist(media, _this30.requestOptions_);\n\n      _this30.mainSegmentLoader_.load();\n\n      _this30.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.masterPlaylistLoader_.on('playlistunchanged', function () {\n      var updatedPlaylist = _this30.masterPlaylistLoader_.media();\n\n      var playlistOutdated = _this30.stuckAtPlaylistEnd_(updatedPlaylist);\n\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // blacklist it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        _this30.blacklistCurrentPlaylist({\n          message: 'Playlist no longer updating.'\n        }); // useful for monitoring QoS\n\n\n        _this30.tech_.trigger('playliststuck');\n      }\n    });\n    this.masterPlaylistLoader_.on('renditiondisabled', function () {\n      _this30.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-disabled'\n      });\n    });\n    this.masterPlaylistLoader_.on('renditionenabled', function () {\n      _this30.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-enabled'\n      });\n    });\n  };\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n    var mediaGroups = master.mediaGroups || {};\n    var defaultDemuxed = true;\n    var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n    for (var mediaGroup in mediaGroups.AUDIO) {\n      for (var label in mediaGroups.AUDIO[mediaGroup]) {\n        var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-demuxed'\n      });\n    }\n\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-webvtt'\n      });\n    }\n\n    if (Hls.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-aes'\n      });\n    }\n\n    if (Hls.Playlist.isFmp4(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-fmp4'\n      });\n    }\n\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-alternate-audio'\n      });\n    }\n\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-playlist-cue-tags'\n      });\n    }\n  };\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n    var _this31 = this;\n\n    this.mainSegmentLoader_.on('bandwidthupdate', function () {\n      var nextPlaylist = _this31.selectPlaylist();\n\n      var currentPlaylist = _this31.masterPlaylistLoader_.media();\n\n      var buffered = _this31.tech_.buffered();\n\n      var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this31.tech_.currentTime() : 0;\n\n      var bufferLowWaterLine = _this31.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n      // This is because in LIVE, the player plays 3 segments from the end of the\n      // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n      // in those segments, a viewer will never experience a rendition upswitch.\n\n\n      if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n      // duration is below the max potential low water line\n      _this31.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n      nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n      // buffer while loading a higher rendition.\n      forwardBuffer >= bufferLowWaterLine) {\n        _this31.masterPlaylistLoader_.media(nextPlaylist);\n      }\n\n      _this31.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('progress', function () {\n      _this31.trigger('progress');\n    });\n    this.mainSegmentLoader_.on('error', function () {\n      _this31.blacklistCurrentPlaylist(_this31.mainSegmentLoader_.error());\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', function () {\n      _this31.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', function () {\n      _this31.tech_.trigger({\n        type: 'usage',\n        name: 'hls-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', function () {\n      _this31.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('ended', function () {\n      _this31.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', function () {\n      _this31.blacklistCurrentPlaylist({\n        message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n      }, ABORT_EARLY_BLACKLIST_SECONDS);\n    });\n    this.mainSegmentLoader_.on('reseteverything', function () {\n      // If playing an MTS stream, a videojs.MediaSource is listening for\n      // hls-reset to reset caption parsing state in the transmuxer\n      _this31.tech_.trigger('hls-reset');\n    });\n    this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n      // If playing an MTS stream in html, a videojs.MediaSource is listening for\n      // hls-segment-time-mapping update its internal mapping of stream to display time\n      _this31.tech_.trigger({\n        type: 'hls-segment-time-mapping',\n        mapping: event.mapping\n      });\n    });\n    this.audioSegmentLoader_.on('ended', function () {\n      _this31.onEndOfStream();\n    });\n  };\n\n  MasterPlaylistController.prototype.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  };\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n\n  MasterPlaylistController.prototype.load = function load() {\n    this.mainSegmentLoader_.load();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  };\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method may perform destructive actions, like\n   * removing already buffered content, to readjust the currently\n   * active playlist quickly.\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.fastQualityChange_ = function fastQualityChange_() {\n    var media = this.selectPlaylist();\n\n    if (media !== this.masterPlaylistLoader_.media()) {\n      this.masterPlaylistLoader_.media(media);\n      this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n    }\n  };\n  /**\n   * Begin playback.\n   */\n\n\n  MasterPlaylistController.prototype.play = function play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n\n    if (this.hasPlayed_()) {\n      this.load();\n    }\n\n    var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable$$1.start(0)) {\n        return this.tech_.setCurrentTime(seekable$$1.end(seekable$$1.length - 1));\n      }\n    }\n  };\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n\n  MasterPlaylistController.prototype.setupFirstPlay = function setupFirstPlay() {\n    var _this32 = this;\n\n    var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_()) {\n      return false;\n    } // when the video is a live stream\n\n\n    if (!media.endList) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n\n      if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', function () {\n          _this32.trigger('firstplay');\n\n          _this32.tech_.setCurrentTime(seekable$$1.end(0));\n\n          _this32.hasPlayed_ = function () {\n            return true;\n          };\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable$$1.end(0));\n    }\n\n    this.hasPlayed_ = function () {\n      return true;\n    }; // we can begin loading now that everything is ready\n\n\n    this.load();\n    return true;\n  };\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.handleSourceOpen_ = function handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    try {\n      this.setupSourceBuffers_();\n    } catch (e) {\n      videojs$1.log.warn('Failed to create Source Buffers', e);\n      return this.mediaSource.endOfStream('decode');\n    } // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n\n    if (this.tech_.autoplay()) {\n      var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, function (e) {});\n      }\n    }\n\n    this.trigger('sourceopen');\n  };\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.onEndOfStream = function onEndOfStream() {\n    var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      // if the audio playlist loader exists, then alternate audio is active\n      if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n\n    if (isEndOfStream) {\n      this.mediaSource.endOfStream();\n    }\n  };\n  /**\n   * Check if a playlist has stopped being updated\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n\n  MasterPlaylistController.prototype.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n    var seekable$$1 = this.seekable();\n\n    if (!seekable$$1.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n\n    var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n\n    var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n\n    var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  };\n  /**\n   * Blacklists a playlist when an error occurs for a set amount of time\n   * making it unavailable for selection by the rendition selection algorithm\n   * and then forces a new playlist (rendition) selection.\n   *\n   * @param {Object=} error an optional error that may include the playlist\n   * to blacklist\n   * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n   * playlist\n   */\n\n\n  MasterPlaylistController.prototype.blacklistCurrentPlaylist = function blacklistCurrentPlaylist() {\n    var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var blacklistDuration = arguments[1];\n    var currentPlaylist = void 0;\n    var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // blacklisted instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n\n    currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n    blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the master OR while we were disposing of the tech\n\n    if (!currentPlaylist) {\n      this.error = error;\n\n      try {\n        return this.mediaSource.endOfStream('network');\n      } catch (e) {\n        return this.trigger('error');\n      }\n    }\n\n    var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n    if (isFinalRendition) {\n      // Never blacklisting this playlist because it's final rendition\n      videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n      this.tech_.trigger('retryplaylist');\n      return this.masterPlaylistLoader_.load(isFinalRendition);\n    } // Blacklist this playlist\n\n\n    currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n    this.tech_.trigger('blacklistplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'hls-rendition-blacklisted'\n    }); // Select a new playlist\n\n    nextPlaylist = this.selectPlaylist();\n    videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n    return this.masterPlaylistLoader_.media(nextPlaylist);\n  };\n  /**\n   * Pause all segment loaders\n   */\n\n\n  MasterPlaylistController.prototype.pauseLoading = function pauseLoading() {\n    this.mainSegmentLoader_.pause();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n    }\n  };\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n\n  MasterPlaylistController.prototype.setCurrentTime = function setCurrentTime(currentTime) {\n    var buffered = findRange(this.tech_.buffered(), currentTime);\n\n    if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n\n    if (!this.masterPlaylistLoader_.media().segments) {\n      return 0;\n    } // In flash playback, the segment loaders should be reset on every seek, even\n    // in buffer seeks. If the seek location is already buffered, continue buffering as\n    // usual\n    // TODO: redo this comment\n\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n\n    this.load();\n  };\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n\n  MasterPlaylistController.prototype.duration = function duration() {\n    if (!this.masterPlaylistLoader_) {\n      return 0;\n    }\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n\n    return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n  };\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n\n  MasterPlaylistController.prototype.seekable = function seekable() {\n    return this.seekable_;\n  };\n\n  MasterPlaylistController.prototype.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n    var mainSeekable = void 0;\n    var audioSeekable = void 0;\n\n    if (!this.masterPlaylistLoader_) {\n      return;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      return;\n    }\n\n    var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n\n    mainSeekable = Hls.Playlist.seekable(media, expired);\n\n    if (mainSeekable.length === 0) {\n      return;\n    }\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        return;\n      }\n\n      audioSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    }\n\n    this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n    this.tech_.trigger('seekablechanged');\n  };\n  /**\n   * Update the player duration\n   */\n\n\n  MasterPlaylistController.prototype.updateDuration = function updateDuration() {\n    var _this33 = this;\n\n    var oldDuration = this.mediaSource.duration;\n    var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    var buffered = this.tech_.buffered();\n\n    var setDuration = function setDuration() {\n      _this33.mediaSource.duration = newDuration;\n\n      _this33.tech_.trigger('durationchange');\n\n      _this33.mediaSource.removeEventListener('sourceopen', setDuration);\n    };\n\n    if (buffered.length > 0) {\n      newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n    } // if the duration has changed, invalidate the cached value\n\n\n    if (oldDuration !== newDuration) {\n      // update the duration\n      if (this.mediaSource.readyState !== 'open') {\n        this.mediaSource.addEventListener('sourceopen', setDuration);\n      } else {\n        setDuration();\n      }\n    }\n  };\n  /**\n   * dispose of the MasterPlaylistController and everything\n   * that it controls\n   */\n\n\n  MasterPlaylistController.prototype.dispose = function dispose() {\n    var _this34 = this;\n\n    this.decrypter_.terminate();\n    this.masterPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      var groups = _this34.mediaTypes_[type].groups;\n\n      for (var id in groups) {\n        groups[id].forEach(function (group) {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n  };\n  /**\n   * return the master playlist object if we have one\n   *\n   * @return {Object} the master playlist object that we parsed\n   */\n\n\n  MasterPlaylistController.prototype.master = function master() {\n    return this.masterPlaylistLoader_.master;\n  };\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n\n  MasterPlaylistController.prototype.media = function media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.masterPlaylistLoader_.media() || this.initialMedia_;\n  };\n  /**\n   * setup our internal source buffers on our segment Loaders\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.setupSourceBuffers_ = function setupSourceBuffers_() {\n    var media = this.masterPlaylistLoader_.media();\n    var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n    // attached\n\n    if (!media || this.mediaSource.readyState !== 'open') {\n      return;\n    }\n\n    mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n    if (mimeTypes.length < 1) {\n      this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n      return this.mediaSource.endOfStream('decode');\n    }\n\n    this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n    // selection\n\n    this.excludeIncompatibleVariants_(media);\n  };\n\n  MasterPlaylistController.prototype.configureLoaderMimeTypes_ = function configureLoaderMimeTypes_(mimeTypes) {\n    // If the content is demuxed, we can't start appending segments to a source buffer\n    // until both source buffers are set up, or else the browser may not let us add the\n    // second source buffer (it will assume we are playing either audio only or video\n    // only).\n    var sourceBufferEmitter = // If there is more than one mime type\n    mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n    mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n    // only with alternate audio)\n    mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n    new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n    // video only, or muxed content.\n    null;\n    this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n    if (mimeTypes[1]) {\n      this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n    }\n  };\n  /**\n   * Blacklists playlists with codecs that are unsupported by the browser.\n   */\n\n\n  MasterPlaylistController.prototype.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n    this.master().playlists.forEach(function (variant) {\n      if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n        variant.excludeUntil = Infinity;\n      }\n    });\n  };\n  /**\n   * Blacklist playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current master playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(media) {\n    var codecCount = 2;\n    var videoCodec = null;\n    var codecs = void 0;\n\n    if (media.attributes.CODECS) {\n      codecs = parseCodecs(media.attributes.CODECS);\n      videoCodec = codecs.videoCodec;\n      codecCount = codecs.codecCount;\n    }\n\n    this.master().playlists.forEach(function (variant) {\n      var variantCodecs = {\n        codecCount: 2,\n        videoCodec: null\n      };\n\n      if (variant.attributes.CODECS) {\n        variantCodecs = parseCodecs(variant.attributes.CODECS);\n      } // if the streams differ in the presence or absence of audio or\n      // video, they are incompatible\n\n\n      if (variantCodecs.codecCount !== codecCount) {\n        variant.excludeUntil = Infinity;\n      } // if h.264 is specified on the current playlist, some flavor of\n      // it must be specified on all compatible variants\n\n\n      if (variantCodecs.videoCodec !== videoCodec) {\n        variant.excludeUntil = Infinity;\n      }\n    });\n  };\n\n  MasterPlaylistController.prototype.updateAdCues_ = function updateAdCues_(media) {\n    var offset = 0;\n    var seekable$$1 = this.seekable();\n\n    if (seekable$$1.length) {\n      offset = seekable$$1.start(0);\n    }\n\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  };\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {Number} Desired forward buffer length in seconds\n   */\n\n\n  MasterPlaylistController.prototype.goalBufferLength = function goalBufferLength() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.GOAL_BUFFER_LENGTH;\n    var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  };\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {Number} Desired buffer low water line in seconds\n   */\n\n\n  MasterPlaylistController.prototype.bufferLowWaterLine = function bufferLowWaterLine() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.BUFFER_LOW_WATER_LINE;\n    var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, max);\n  };\n\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation); // Get a reference to a bound version of fastQualityChange_\n\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this35 = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this35.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this35.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this35.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this35.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this35.logger_('dispose');\n\n      _this35.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this35.tech_.off('waiting', waitingHandler);\n\n      _this35.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this35.tech_.off('canplay', canPlayHandler);\n\n      if (_this35.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this35.checkCurrentTimeTimeout_);\n      }\n\n      _this35.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.monitorCurrentTime_ = function monitorCurrentTime_() {\n    this.checkCurrentTime_();\n\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  };\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.checkCurrentTime_ = function checkCurrentTime_() {\n    if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = this.tech_.currentTime();\n      return;\n    }\n\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  };\n  /**\n   * Cancels any pending timers and resets the 'timeupdate' mechanism\n   * designed to detect that we are stalled\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.cancelTimer_ = function cancelTimer_() {\n    this.consecutiveUpdates = 0;\n\n    if (this.timer_) {\n      this.logger_('cancelTimer_');\n      clearTimeout(this.timer_);\n    }\n\n    this.timer_ = null;\n  };\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {Boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.fixesBadSeeks_ = function fixesBadSeeks_() {\n    var seeking = this.tech_.seeking();\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n    var seekTo = void 0;\n\n    if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n      var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n\n    if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n      var seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + SAFE_TIME_DELTA;\n    }\n\n    if (typeof seekTo !== 'undefined') {\n      this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.waiting_ = function waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n    var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-unknown-waiting'\n      });\n      return;\n    }\n  };\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {Boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.techWaiting_ = function techWaiting_() {\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n\n    if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n      // Tech is seeking or bad seek fixed, no action needed\n      return true;\n    }\n\n    if (this.tech_.seeking() || this.timer_ !== null) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var livePoint = seekable.end(seekable.length - 1);\n      this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-live-resync'\n      });\n      return true;\n    }\n\n    var buffered = this.tech_.buffered();\n    var nextRange = findNextRange(buffered, currentTime);\n\n    if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-video-underflow'\n      });\n      return true;\n    } // check for gap\n\n\n    if (nextRange.length > 0) {\n      var difference = nextRange.start(0) - currentTime;\n      this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n      this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n    return false;\n  };\n\n  PlaybackWatcher.prototype.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n\n    if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n      return true;\n    }\n\n    return false;\n  };\n\n  PlaybackWatcher.prototype.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n      return true;\n    }\n\n    return false;\n  };\n\n  PlaybackWatcher.prototype.videoUnderflow_ = function videoUnderflow_(nextRange, buffered, currentTime) {\n    if (nextRange.length === 0) {\n      // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n      var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n      if (gap) {\n        this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n    var buffered = this.tech_.buffered();\n    var currentTime = this.tech_.currentTime();\n    var nextRange = findNextRange(buffered, currentTime);\n    this.cancelTimer_();\n\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'hls-gap-skip'\n    });\n  };\n\n  PlaybackWatcher.prototype.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    var gaps = findGaps(buffered);\n\n    for (var i = 0; i < gaps.length; i++) {\n      var start = gaps.start(i);\n      var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start: start,\n          end: end\n        };\n      }\n    }\n\n    return null;\n  };\n\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.0.0\";\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: aesDecrypter.Decrypter,\n  AsyncStream: aesDecrypter.AsyncStream,\n  decrypt: aesDecrypter.decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // 0.5 MB/s\n\nvar INITIAL_BANDWIDTH = 4194304; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this36 = possibleConstructorReturn(this, _Component.call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this36;\n          }\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this36; // deprecated, for backwards compatibility\n\n      _player.dash = _this36;\n    }\n\n    _this36.tech_ = tech;\n    _this36.source_ = source;\n    _this36.stats = {};\n    _this36.ignoreNextSeekingEvent_ = false;\n\n    _this36.setOptions_(); // overriding native HLS only works if audio tracks have been emulated\n    // error early if we're misconfigured:\n\n\n    if (_this36.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this36.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this36.tech_.el())) {\n        _this36.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n\n    _this36.on(_this36.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n\n    _this36.on(_this36.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this36.on(_this36.tech_, 'play', _this36.play);\n\n    return _this36;\n  }\n\n  HlsHandler.prototype.setOptions_ = function setOptions_() {\n    var _this37 = this; // defaults\n\n\n    this.options_.withCredentials = this.options_.withCredentials || false;\n\n    if (typeof this.options_.blacklistDuration !== 'number') {\n      this.options_.blacklistDuration = 5 * 60;\n    } // start playlist selection at a reasonable bandwidth for\n    // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'bandwidth'].forEach(function (option) {\n      if (typeof _this37.source_[option] !== 'undefined') {\n        _this37.options_[option] = _this37.source_[option];\n      }\n    });\n    this.bandwidth = this.options_.bandwidth;\n  };\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n\n  HlsHandler.prototype.src = function src(_src, type) {\n    var _this38 = this; // do nothing if the src is falsey\n\n\n    if (!_src) {\n      return;\n    }\n\n    this.setOptions_(); // add master playlist controller options\n\n    this.options_.url = this.source_.src;\n    this.options_.tech = this.tech_;\n    this.options_.externHls = Hls$1;\n    this.options_.sourceType = simpleTypeFromSourceType(type);\n    this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n    this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n      seekable: function seekable() {\n        return _this38.seekable();\n      }\n    }));\n    this.masterPlaylistController_.on('error', function () {\n      var player = videojs$1.players[_this38.tech_.options_.playerId];\n      player.error(_this38.masterPlaylistController_.error);\n    }); // `this` in selectPlaylist should be the HlsHandler for backwards\n    // compatibility with < v2\n\n    this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n    this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n    this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get: function get$$1() {\n          return this.masterPlaylistController_.selectPlaylist;\n        },\n        set: function set$$1(selectPlaylist) {\n          this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get: function get$$1() {\n          return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set: function set$$1(throughput) {\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get: function get$$1() {\n          return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n        },\n        set: function set$$1(bandwidth) {\n          this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get: function get$$1() {\n          var invBandwidth = 1 / (this.bandwidth || 1);\n          var invThroughput = void 0;\n\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n\n          var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set: function set$$1() {\n          videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: function get$$1() {\n          return _this38.bandwidth || 0;\n        },\n        enumerable: true\n      },\n      mediaRequests: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequests_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequestsAborted_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequestsErrored_() || 0;\n        },\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaTransferDuration_() || 0;\n        },\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaBytesTransferred_() || 0;\n        },\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n        },\n        enumerable: true\n      },\n      buffered: {\n        get: function get$$1() {\n          return timeRangesToArray(_this38.tech_.buffered());\n        },\n        enumerable: true\n      },\n      currentTime: {\n        get: function get$$1() {\n          return _this38.tech_.currentTime();\n        },\n        enumerable: true\n      },\n      currentSource: {\n        get: function get$$1() {\n          return _this38.tech_.currentSource_;\n        },\n        enumerable: true\n      },\n      currentTech: {\n        get: function get$$1() {\n          return _this38.tech_.name_;\n        },\n        enumerable: true\n      },\n      duration: {\n        get: function get$$1() {\n          return _this38.tech_.duration();\n        },\n        enumerable: true\n      },\n      master: {\n        get: function get$$1() {\n          return _this38.playlists.master;\n        },\n        enumerable: true\n      },\n      playerDimensions: {\n        get: function get$$1() {\n          return _this38.tech_.currentDimensions();\n        },\n        enumerable: true\n      },\n      seekable: {\n        get: function get$$1() {\n          return timeRangesToArray(_this38.tech_.seekable());\n        },\n        enumerable: true\n      },\n      timestamp: {\n        get: function get$$1() {\n          return Date.now();\n        },\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: function get$$1() {\n          return _this38.tech_.getVideoPlaybackQuality();\n        },\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      // Add the manual rendition mix-in to HlsHandler\n      renditionSelectionMixin(_this38);\n      setupEmeOptions(_this38);\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.masterPlaylistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.masterPlaylistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.tech_.ready(function () {\n      return _this38.setupQualityLevels_();\n    }); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n\n    this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n  };\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n\n  HlsHandler.prototype.setupQualityLevels_ = function setupQualityLevels_() {\n    var _this39 = this;\n\n    var player = videojs$1.players[this.tech_.options_.playerId];\n\n    if (player && player.qualityLevels) {\n      this.qualityLevels_ = player.qualityLevels();\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        handleHlsLoadedMetadata(_this39.qualityLevels_, _this39);\n      });\n      this.playlists.on('mediachange', function () {\n        handleHlsMediaChange(_this39.qualityLevels_, _this39.playlists);\n      });\n    }\n  };\n  /**\n   * Begin playing the video.\n   */\n\n\n  HlsHandler.prototype.play = function play() {\n    this.masterPlaylistController_.play();\n  };\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n\n\n  HlsHandler.prototype.setCurrentTime = function setCurrentTime(currentTime) {\n    this.masterPlaylistController_.setCurrentTime(currentTime);\n  };\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n\n\n  HlsHandler.prototype.duration = function duration() {\n    return this.masterPlaylistController_.duration();\n  };\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n\n\n  HlsHandler.prototype.seekable = function seekable() {\n    return this.masterPlaylistController_.seekable();\n  };\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n\n  HlsHandler.prototype.dispose = function dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n\n    if (this.masterPlaylistController_) {\n      this.masterPlaylistController_.dispose();\n    }\n\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nmodule.exports = videojs$1;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/video.js/dist/video.cjs.js"],"names":["_interopDefault","ex","window$1","require","document","tsml","xhr","vtt","safeParseTuple","URLToolkit","m3u8Parser","mpdParser","mp4probe","tsInspector","aesDecrypter","version","log","level","history","logByType","type","args","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","concat","console","fn","info","test","Array","isArray","_len","arguments","length","_key","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","inherits","subClass","superClass","Object","create","value","enumerable","writable","configurable","setPrototypeOf","__proto__","possibleConstructorReturn","self","call","ReferenceError","taggedTemplateLiteralLoose","strings","raw","toString","keys","object","isObject","each","forEach","key","reduce","initial","undefined","accum","assign","target","sources","apply","source","isPlain","computedStyle","el","prop","getComputedStyle","cs","_templateObject","isNonBlankString","str","throwIfWhitespace","classRegExp","className","isReal","isEl","nodeType","isInFrame","parent","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","val","indexOf","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","addClass","classToAdd","add","trim","removeClass","classToRemove","remove","split","filter","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","i","name","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","result","k","height","parseFloat","width","findPosition","box","left","top","docEl","documentElement","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","Math","round","getPointerPosition","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","y","max","min","isTextNode","emptyEl","removeChild","normalizeContent","map","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","Date","getTime","getData","id","hasData","removeData","e","_cleanUpEvents","elem","data","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","opts","defineProperty","get","addEventListener","passiveEvents","on","guid","hash","handlersCopy","slice","m","n","options","passive","attachEvent","removeType","t","splice","trigger","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","player","autoSetupTimeout","wait","vjs","setTimeout","readyState","createStyleElement","style","setTextContent","styleSheet","cssText","bind","uid","bound","throttle","last","now","throttled","debounce","immediate","timeout","_later","later","clearTimeout","EventTarget","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","every","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","on$$1","_this","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","one$$1","_this2","_normalizeListenArgs2","wrapper","largs","off$$1","targetOrType","typeOrListener","trigger$$1","evented","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","charAt","titleCaseEquals","str1","str2","mergeOptions","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","createEl$$1","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","replace","match","index","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","childNodes","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","some","wchild","isTech","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","$$$1","$$$$1","hasClass$$1","addClass$$1","removeClass$$1","toggleClass$$1","show","hide","lockShowing","unlockShowing","getAttribute$$1","setAttribute$$1","removeAttribute$$1","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","Boolean","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","pop","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","DocumentTouch","browser","rangeCheck","fnName","maxIndex","getRange","valueIndex","ranges","rangeIndex","createTimeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","_i","MediaError","message","defaultMessages","status","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","acc","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","json","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ESC","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","label","previouslyActiveEl_","handleKeyPress","close","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","get$$1","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","selected","VideoTrackList","set","set$$1","TextTrackList","nonLanguageTextTrackKind","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","url","props","a","href","addToBody","host","protocol","div","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","toLowerCase","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","parse","groupCollapsed","groupEnd","flush","loadTrack","uri","cors","err","response","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","mode","default_","default","activeCues_","activeCues","changed","timeupdateHandler","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","createTrackHelper","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","bufferedPercent$$1","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","next","setSourceHelper","setTech","mw","get$1","reduceRight","middlewareIterator","set$1","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","s","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","floor","h","gm","gh","isNaN","Infinity","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","STEP_SECONDS","UPDATE_REFRESH_INTERVAL","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","isFullscreen","requestFullscreen","exitFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","haveTitle","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","title","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","Number","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","values","JSON","localStorage","getItem","setItem","stringify","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","r","_templateObject$2","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","name$$1","languages_","poster_","controls_","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","_width","width_","_height","height_","techEl","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","techOptions","autoplay","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","b","finder","_ref2","sourceOrder","_this8","notSupportedMessage","middlewareSource","src_","_this9","sourceTech","currentSources","currentSource","currentType","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3","_ref3$track","String","toJSON","createModal","_this10","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","createPluginFactory","PluginSubClass","Function","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","_inherits","super_","extendFn","subClassMethods","methods","normalizeId","videojs$1","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","getPlayers","nId","_tag","_player","getAllPlayers","comp","writeable","extend","addLanguage","_mergeOptions","createTimeRange","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateSegments","offset","resolveSegmentUris","segment","baseUri","resolvedUri","updateMaster","media","playlist","playlists","segments","mediaSequence","mergedPlaylist","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","delay","targetDuration","PlaylistLoader","srcUrl","hls","withCredentials","hls_","req","playlistRequestError","haveMetadata","xhr$$1","startingState","responseText","manifest","media_","endList","mediaUpdateTimeout","stopRequest","oldRequest","onreadystatechange","abort","mediaChange","started","isFinalRendition","backwardDuration","endSequence","precise","forwardDuration","intervalDuration","expired","backward","forward","totalDuration","sumDurations","startIndex","endIndex","durations","_i2","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","seekableStart","seekableEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","scale","pow","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","mediaIndex","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","size","BANDWIDTH","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","byteLength","headers","responseHeaders","timedout","aborted","statusCode","originalAbort","textRange","range","formatHexString","substring","formatAsciiString","fromCharCode","createTransferableMessage","transferable","ArrayBuffer","isView","bytes","buffer","byteOffset","initSegmentId","initSegment","byterange","hexDump","step","hex","ascii","tagDump","textRanges","utils","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","results","findRange","findNextRange","findGaps","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","createTextTracksIfNecessary","sourceBuffer","mediaSource","inbandTextTracks_","trackId","captionStreams","metadataTrack_","inBandMetadataTrackDispatchType","dispatchType","removeCuesFromTrack","deprecateOldCue","frame","privateData","durationOfVideo","dur","abs","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","stream","timestampOffset","videoDuration","mediaSource_","cueTime","frames","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","sort","idx","cueGroup","nextTime","win","window","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","ShimWorker","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","Uint8Array","revokeObjectURL","terminate","createObjectURL","Blob","blob","getBlob","worker","term","TransmuxWorker","document$$1","transmuxerWorker","commonjsGlobal","global","window_1","UINT32_MAX","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","vmhd","charCodeAt","payload","view","DataView","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","flags","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","Stream","init","callbacks","pipe","destination","flushSource","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","parseSei","payloadType","payloadSize","subarray","parseUserData","sei","parseCaptionPackets","pts","userData","count","ccData","CaptionStream","captionPackets_","ccStreams_","Cea608Stream","cc","nalUnitType","escapedRBSP","dts","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","topRow_","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","row_","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","BASE_","EXT_","CONTROL_","OFFSET_","char","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","MAX_TS","RO_THRESH","handleRollover","reference","direction","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","timestampRolloverStream","percentEncode","parseUtf8","decodeURIComponent","parseIso88591","unescape","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","_MetadataStream","MetadataStream","tagSize","bufferSize","chunk","frameStart","frameSize","frameHeader","dataAlignmentIndicator","d","timeStamp","metadataStream","TimestampRolloverStream$1","_TransportPacketStream","_TransportParseStream","_ElementaryStream","MP2T_PACKET_LENGTH","SYNC_BYTE","TransportPacketStream","bytesInBuffer","everything","TransportParseStream","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","streamType","pid","processPes_","STREAM_TYPES","h264","adts","ElementaryStream","timedMetadata","parsePes","pes","ptsDtsFlags","packetLength","flushStream","stream$$1","forceFlush","packetData","packetFlushable","fragment","timelineStartInfo","codec","m2ts","PAT_PID","m2ts_1","_AdtsStream","ADTS_SAMPLING_FREQUENCIES","AdtsStream","frameNum","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","getUint32","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","expGolomb","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","NalByteStream","syncPoint","swapBuffer","H264Stream","nalByteStream","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","expGolombDecoder","lastScale","nextScale","deltaScale","emulationPreventionBytesPositions","newLength","newData","sourceIndex","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","aspectRatioIdc","ceil","_AacStream","AacStream","setTimestamp","timestamp","parseId3TagSize","header","byteIndex","returnSize","footerPresent","parseAdtsSize","lowThree","middle","highTwo","bytesLeft","tempLength","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","arr","coneOfSilence","silence","ONE_SECOND_IN_TS","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","sampleRate","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","ONE_SECOND_IN_TS$1","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","createDefaultSample","isLikelyAacData","collectDtsInfo","clearDtsInfo","calculateTrackBaseMediaDecodeTime","arrayEquals","sumFrameByteLengths","array","currentObj","sum","AudioSegmentStream","adtsFrames","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","trimAdtsFramesByEarliestDts_","keepOriginalTimestamps","prefixWithSilence_","generateSampleTable_","concatenateFrameData_","baseMediaDecodeTimeTs","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","silentFrame","minSegmentDts","currentFrame","minSegmentPts","VideoSegmentStream","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","gops","resetStream_","groupNalsIntoFrames_","groupFramesIntoGops_","keyFrame","getGopForFusion_","nalCount","extendFirstKeyFrame_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","concatenateNalData_","halfSecond","allowableOverlap","nearestDistance","dtsDistance","nearestGopObj","currentGop","currentGopObj","currentNal","baseDataOffset","nalsByteLength","numberOfNals","totalByteLength","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","maxSegmentPts","maxSegmentDts","CoalesceStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","timelineStartPts","Transmuxer","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","parseStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","transmuxer","generator","classCallCheck$$1","createClass$$1","protoProps","staticProps","wireTransmuxerEvents","initArray","typedArray","action","gopInfo","MessageHandlers","setTimestampOffset","appendStart","TransmuxerWorker","messageHandlers","isAudioCodec","isVideoCodec","parseContentType","parameters","parameter","pair","translateLegacyCodecs","codecs","orig","profile","avcLevel","profileHex","avcLevelHex","makeWrappedSourceBuffer","mimeType","addSourceBuffer","updating","realBuffer_","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","VirtualSourceBuffer","_videojs$EventTarget","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","arity","extents","videoBuffered","audioBuffered","processPendingSegments_","createRealSourceBuffers_","codecProperty","nativeMediaSource_","shouldTrigger","appendBuffer","sortedSegments","segmentObj","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","originalError","HtmlMediaSource","_videojs$EventTarget2","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","addSeekableRange_","parsedType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","objectUrlPrefix","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","DashPlaylistLoader","_EventTarget$","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","parseMasterXml","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","_this11","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","done","_this12","utcTiming","parseUTCTiming","serverTime","_this13","_this14","_this15","updatedMaster","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","_this16","sourceBuffer_","start_","_this17","started_","onUpdateendCallback_","pendingCallback","runCallback_","_this18","queueCallback_","_this19","_this20","_this21","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","byterangeStr","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","loaded","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","Uint32Array","handleInitSegmentResponse","handleSegmentResponse","encryptedBytes","decryptSegment","decrypter","doneFn","decryptionHandler","requestId","decrypted","encrypted","iv","getMostImportantError","prev","waitForCompletion","endOfAllRequests","worstError","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","responseType","keyRequestCallback","keyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","parseCodecs","codecCount","parsed","mapLegacyAvcCodecs","codecString","makeMimeTypeString","container","getContainerType","getCodecs","mediaAttributes","CODECS","audioProfileFromDefault","audioGroupId","AUDIO","audioGroup","audioType","mimeTypesForPlaylist","containerType","codecInfo","isMuxed","isMaat","groupId","codecStrings","justAudio","justVideo","bothVideoAudio","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","RESOLUTION","simpleSelector","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","systemBandwidth","minRebufferMaxBandwidthSelector","duration$$1","currentTimeline","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","finite","isFinite","illegalMediaSwitch","loaderType","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","seekable$$1","removeToTime","segmentInfoString","segmentInfo","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","timeline","SegmentLoader","_videojs$EventTarget3","_this22","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","decrypter_","syncController_","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","endOfStream","buffered_","storedMap","couldBeginLoading_","playlist_","setDateTimeMapping","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","resyncLoader","mediaSequenceDiff","saveExpiredSegmentInfo","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","checkBuffer_","isEndOfStream","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","_this23","segmentIndexArray","isSyncRequest","random","abortRequestEarly_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","handleProgress_","simpleSegment","trimBackBuffer_","createSimplifiedSegmentObj_","segmentRequestFinished_","processSegmentResponse_","handleSegment_","_this24","timingInfo","probeSegmentInfo","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","resolution","VTT_LINE_TERMINATORS","uintToString","uintArray","VTTSegmentLoader","_SegmentLoader","_this25","subtitlesTrack_","combinedByteLength","combinedSegment","_track","_this26","skipEmptySegments_","timestampOffsetForTimeline","checkTimestampOffset","_this27","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","tsprobe","inspect","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","dateTimeObject","segmentTime","segmentStart","distance","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","_videojs$EventTarget4","_this28","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timescales","timescale","timeInfo","segmentStartTime","segmentEndTime","dtsTime","accuracy","mediaIndexDiff","Decrypter$1","decrypterWorker","unpad","padded","inherits$$1","possibleConstructorReturn$$1","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","decrypt$$1","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","processJob_","job","ntoh","word","initVector","encrypted32","Int32Array","decipher","decrypted32","init0","init1","init2","init3","wordIx","Decrypter$$1","STEP","asyncStream_","decryptChunk_","DecrypterWorker","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","previousActiveLoader","onTrackChanged","_settings$segmentLoad2","onError","blacklistCurrentPlaylist","defaultTrack","SUBTITLES","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groups","groupPlaylists","variantLabel","matchingPlaylists","_settings$mediaTypes$2","forced","CLOSEDCAPTIONS","_settings$mediaTypes$3","instreamId","variants","setupMediaGroups","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","_videojs$EventTarget5","_this29","externHls","useCueTags","enableLowInitialPlaylist","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","_this30","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","onDurationchange","playlistOutdated","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","_this31","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","mediaSecondsLoaded_","fastQualityChange_","ended","_this32","absolutePlaylistEnd","pauseLoading","mainSeekable","audioSeekable","_this33","oldDuration","newDuration","setDuration","_this34","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","variantCodecs","enableFunction","loader","playlistUri","changePlaylistFn","incompatible","currentlyEnabled","Representation","hlsHandler","fastChangeFunction","masterPlaylistController_","renditionSelectionMixin","representations","timerCancelEvents","PlaybackWatcher","_this35","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","seekTo","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","errorHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$1","Hls$1","Decrypter","AsyncStream","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","INITIAL_BANDWIDTH","simpleTypeFromSourceType","dashRE","handleHlsMediaChange","qualityLevels","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","setupEmeOptions","eme","sourceOptions","source_","keySystems","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","_this36","vhs","dash","ignoreNextSeekingEvent_","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","_this37","option","_this38","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","currentTech","playerDimensions","setupQualityLevels_","_this39","qualityLevels_","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback","module","exports"],"mappings":"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","sourcesContent":["/**\n * @license\n * Video.js 7.0.3 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar window$1 = _interopDefault(require('global/window'));\nvar document = _interopDefault(require('global/document'));\nvar tsml = _interopDefault(require('tsml'));\nvar xhr = _interopDefault(require('xhr'));\nvar vtt = _interopDefault(require('videojs-vtt.js'));\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\nvar URLToolkit = _interopDefault(require('url-toolkit'));\nvar m3u8Parser = require('m3u8-parser');\nvar mpdParser = require('mpd-parser');\nvar mp4probe = _interopDefault(require('mux.js/lib/mp4/probe'));\nvar tsInspector = _interopDefault(require('mux.js/lib/tools/ts-inspector.js'));\nvar aesDecrypter = require('aes-decrypter');\n\nvar version = \"7.0.3\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose}.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    fn = bind(this, fn);\n\n    var timeoutId = window$1.setTimeout(fn, timeout);\n    var disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      var id = window$1.requestAnimationFrame(fn);\n      var disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && /Chrome/i.test(USER_AGENT);\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/Chrome\\/(\\d+)/);\n\n  if (match && match[1]) {\n    return parseFloat(match[1]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = IS_SAFARI || IS_IOS;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n *\n * @private\n */\nfunction constructColor(color, opacity) {\n  return 'rgba(' +\n  // color looks like \"#f0e\"\n  parseInt(color[1] + color[1], 16) + ',' + parseInt(color[2] + color[2], 16) + ',' + parseInt(color[3] + color[3], 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    event.preventDefault();\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      // TODO: May need to be either menuitemcheckbox or menuitemradio,\n      //       and may need logical grouping of menu items.\n      _this.el_.setAttribute('role', 'menuitemcheckbox');\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts int into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 so we could focus on the player element\n    tag.setAttribute('tabindex', '-1');\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'autoplay': this.options_.autoplay,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log$1('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = { src: src, type: type };\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this4 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this4.updateSourceCaches_(_this4.techGet_('currentSrc'));\n          }\n\n          _this4.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this5 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this5.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   * @deprecated As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      this.play();\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a `Promise` only if the browser returns one and the player\n   *         is ready to begin playback. For some browsers and all non-ready\n   *         situations, this will return `undefined`.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this6 = this;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this6.playWaitingForReady_ = false;\n        silencePromise(_this6.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      return this.techGet_('play');\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this6.playOnLoadstart_ = null;\n        silencePromise(_this6.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this7 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this7.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this8 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this8.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this8.cache_.sources = sources;\n      _this8.updateSourceCaches_(middlewareSource);\n\n      var err = _this8.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this8.src(sources.slice(1));\n        }\n\n        _this8.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this8.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this8.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this8.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this9 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this9.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay attribute.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should autoplay\n   *        - false means that we should not autoplay\n   *\n   * @return {string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    if (value !== undefined) {\n      this.techCall_('setAutoplay', value);\n      this.options_.autoplay = value;\n      return;\n    }\n    return this.techGet_('autoplay', value);\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this10 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this10.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.0.0\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck(this, PlaylistLoader);\n\n    var _this2 = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this2.srcUrl = srcUrl;\n    _this2.hls_ = hls;\n    _this2.withCredentials = withCredentials;\n\n    if (!_this2.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this2.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this2.on('mediaupdatetimeout', function () {\n      if (_this2.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this2.state = 'HAVE_CURRENT_METADATA';\n\n      _this2.request = _this2.hls_.xhr({\n        uri: resolveUrl(_this2.master.uri, _this2.media().uri),\n        withCredentials: _this2.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        if (error) {\n          return _this2.playlistRequestError(_this2.request, _this2.media().uri, 'HAVE_METADATA');\n        }\n\n        _this2.haveMetadata(_this2.request, _this2.media().uri);\n      });\n    });\n    return _this2;\n  }\n\n  PlaylistLoader.prototype.playlistRequestError = function playlistRequestError(xhr$$1, url, startingState) {\n    // any in-flight request is now finished\n    this.request = null;\n\n    if (startingState) {\n      this.state = startingState;\n    }\n\n    this.error = {\n      playlist: this.master.playlists[url],\n      status: xhr$$1.status,\n      message: 'HLS playlist request error at URL: ' + url,\n      responseText: xhr$$1.responseText,\n      code: xhr$$1.status >= 500 ? 4 : 2\n    };\n\n    this.trigger('error');\n  };\n\n  // update the playlist loader's state in response to a new or\n  // updated playlist.\n\n\n  PlaylistLoader.prototype.haveMetadata = function haveMetadata(xhr$$1, url) {\n    var _this3 = this;\n\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n\n    var parser = new m3u8Parser.Parser();\n\n    parser.push(xhr$$1.responseText);\n    parser.end();\n    parser.manifest.uri = url;\n    // m3u8-parser does not attach an attributes property to media playlists so make\n    // sure that the property is attached to avoid undefined reference errors\n    parser.manifest.attributes = parser.manifest.attributes || {};\n\n    // merge this playlist into the master\n    var update = updateMaster(this.master, parser.manifest);\n\n    this.targetDuration = parser.manifest.targetDuration;\n\n    if (update) {\n      this.master = update;\n      this.media_ = this.master.playlists[parser.manifest.uri];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    // refresh live playlists after a target duration passes\n    if (!this.media().endList) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        _this3.trigger('mediaupdatetimeout');\n      }, refreshDelay(this.media(), !!update));\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  /**\n   * Abort any outstanding work and clean up.\n   */\n\n\n  PlaylistLoader.prototype.dispose = function dispose() {\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n  };\n\n  PlaylistLoader.prototype.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n\n  /**\n   * When called without any arguments, returns the currently\n   * active media playlist. When called with a single argument,\n   * triggers the playlist loader to asynchronously switch to the\n   * specified media playlist. Calling this method while the\n   * loader is in the HAVE_NOTHING causes an error to be emitted\n   * but otherwise has no effect.\n   *\n   * @param {Object=} playlist the parsed media playlist\n   * object to switch to\n   * @return {Playlist} the current loaded media\n   */\n\n\n  PlaylistLoader.prototype.media = function media(playlist) {\n    var _this4 = this;\n\n    // getter\n    if (!playlist) {\n      return this.media_;\n    }\n\n    // setter\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n\n    var startingState = this.state;\n\n    // find the playlist object if the target playlist has been\n    // specified by URI\n    if (typeof playlist === 'string') {\n      if (!this.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.master.playlists[playlist];\n    }\n\n    var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n    // switch to fully loaded playlists immediately\n    if (this.master.playlists[playlist.uri].endList) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist;\n\n      // trigger media change if the active media has been updated\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    }\n\n    // switching to the active playlist is a no-op\n    if (!mediaChange) {\n      return;\n    }\n\n    this.state = 'SWITCHING_MEDIA';\n\n    // there is already an outstanding playlist request\n    if (this.request) {\n      if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    }\n\n    // request the new playlist\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.request = this.hls_.xhr({\n      uri: resolveUrl(this.master.uri, playlist.uri),\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this4.request) {\n        return;\n      }\n\n      if (error) {\n        return _this4.playlistRequestError(_this4.request, playlist.uri, startingState);\n      }\n\n      _this4.haveMetadata(req, playlist.uri);\n\n      // fire loadedmetadata the first time a media playlist is loaded\n      if (startingState === 'HAVE_MASTER') {\n        _this4.trigger('loadedmetadata');\n      } else {\n        _this4.trigger('mediachange');\n      }\n    });\n  };\n\n  /**\n   * pause loading of the playlist\n   */\n\n\n  PlaylistLoader.prototype.pause = function pause() {\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n    // Need to restore state now that no activity is happening\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MASTER';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  };\n\n  /**\n   * start loading of the playlist\n   */\n\n\n  PlaylistLoader.prototype.load = function load(isFinalRendition) {\n    var _this5 = this;\n\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n\n    var media = this.media();\n\n    if (isFinalRendition) {\n      var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        return _this5.load();\n      }, delay);\n      return;\n    }\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  };\n\n  /**\n   * start loading of the playlist\n   */\n\n\n  PlaylistLoader.prototype.start = function start() {\n    var _this6 = this;\n\n    this.started = true;\n\n    // request the specified URL\n    this.request = this.hls_.xhr({\n      uri: this.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this6.request) {\n        return;\n      }\n\n      // clear the loader's request reference\n      _this6.request = null;\n\n      if (error) {\n        _this6.error = {\n          status: req.status,\n          message: 'HLS playlist request error at URL: ' + _this6.srcUrl,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (_this6.state === 'HAVE_NOTHING') {\n          _this6.started = false;\n        }\n        return _this6.trigger('error');\n      }\n\n      var parser = new m3u8Parser.Parser();\n\n      parser.push(req.responseText);\n      parser.end();\n\n      _this6.state = 'HAVE_MASTER';\n\n      parser.manifest.uri = _this6.srcUrl;\n\n      // loaded a master playlist\n      if (parser.manifest.playlists) {\n        _this6.master = parser.manifest;\n\n        setupMediaPlaylists(_this6.master);\n        resolveMediaGroupUris(_this6.master);\n\n        _this6.trigger('loadedplaylist');\n        if (!_this6.request) {\n          // no media playlist was specifically selected so start\n          // from the first listed one\n          _this6.media(parser.manifest.playlists[0]);\n        }\n        return;\n      }\n\n      // loaded a media playlist\n      // infer a master playlist if none was previously requested\n      _this6.master = {\n        mediaGroups: {\n          'AUDIO': {},\n          'VIDEO': {},\n          'CLOSED-CAPTIONS': {},\n          'SUBTITLES': {}\n        },\n        uri: window$1.location.href,\n        playlists: [{\n          uri: _this6.srcUrl,\n          id: 0\n        }]\n      };\n      _this6.master.playlists[_this6.srcUrl] = _this6.master.playlists[0];\n      _this6.master.playlists[0].resolvedUri = _this6.srcUrl;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      _this6.master.playlists[0].attributes = _this6.master.playlists[0].attributes || {};\n      _this6.haveMetadata(req, _this6.srcUrl);\n      return _this6.trigger('loadedmetadata');\n    });\n  };\n\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i2 = startIndex; _i2 < endIndex; _i2++) {\n    durations += playlist.segments[_i2].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref2) {\n  var bytes = _ref2.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      this.captionPackets_ = this.captionPackets_.concat(parseCaptionPackets(event.pts, userData));\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 1;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 2;\n          this.mode_ = 'rollUp';\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.topRow_ = BOTTOM_ROW - 3;\n          this.mode_ = 'rollUp';\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[BOTTOM_ROW] = this.nonDisplayed_[BOTTOM_ROW].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          this.mode_ = 'paintOn';\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[BOTTOM_ROW] = this.displayed_[BOTTOM_ROW].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode (not supported)\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[BOTTOM_ROW];\n\n      baseRow += text;\n      this.displayed_[BOTTOM_ROW] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < BOTTOM_ROW; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[BOTTOM_ROW] = '';\n    };\n\n    // paintOn mode is not implemented\n    Cea608Stream.prototype.paintOn = function () {};\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the stream.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n          flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS = 90000,\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var createDefaultSample, isLikelyAacData, collectDtsInfo, clearDtsInfo, calculateTrackBaseMediaDecodeTime, arrayEquals, sumFrameByteLengths;\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0\n        }\n      };\n    };\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      this.push = function (nalUnit) {\n        collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = this.groupNalsIntoFrames_(nalUnits);\n        gops = this.groupFramesIntoGops_(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = this.extendFirstKeyFrame_(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = this.generateSampleTable_(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(this.concatenateNalData_(gops));\n\n        track.baseMediaDecodeTime = calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      this.extendFirstKeyFrame_ = function (gops) {\n        var currentGop;\n\n        if (!gops[0][0].keyFrame && gops.length > 1) {\n          // Remove the first GOP\n          currentGop = gops.shift();\n\n          gops.byteLength -= currentGop.byteLength;\n          gops.nalCount -= currentGop.nalCount;\n\n          // Extend the first frame of what is now the\n          // first gop to cover the time period of the\n          // frames we just removed\n          gops[0][0].dts = currentGop.dts;\n          gops[0][0].pts = currentGop.pts;\n          gops[0][0].duration += currentGop.duration;\n        }\n\n        return gops;\n      };\n\n      // Convert an array of nal units into an array of frames with each frame being\n      // composed of the nal units that make up that frame\n      // Also keep track of cummulative data about the frame from the nal units such\n      // as the frame duration, starting pts, etc.\n      this.groupNalsIntoFrames_ = function (nalUnits) {\n        var i,\n            currentNal,\n            currentFrame = [],\n            frames = [];\n\n        currentFrame.byteLength = 0;\n\n        for (i = 0; i < nalUnits.length; i++) {\n          currentNal = nalUnits[i];\n\n          // Split on 'aud'-type nal units\n          if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n            // Since the very first nal unit is expected to be an AUD\n            // only push to the frames array when currentFrame is not empty\n            if (currentFrame.length) {\n              currentFrame.duration = currentNal.dts - currentFrame.dts;\n              frames.push(currentFrame);\n            }\n            currentFrame = [currentNal];\n            currentFrame.byteLength = currentNal.data.byteLength;\n            currentFrame.pts = currentNal.pts;\n            currentFrame.dts = currentNal.dts;\n          } else {\n            // Specifically flag key frames for ease of use later\n            if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n              currentFrame.keyFrame = true;\n            }\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            currentFrame.byteLength += currentNal.data.byteLength;\n            currentFrame.push(currentNal);\n          }\n        }\n\n        // For the last frame, use the duration of the previous frame if we\n        // have nothing better to go on\n        if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n          currentFrame.duration = frames[frames.length - 1].duration;\n        }\n\n        // Push the final frame\n        frames.push(currentFrame);\n        return frames;\n      };\n\n      // Convert an array of frames into an array of Gop with each Gop being composed\n      // of the frames that make up that Gop\n      // Also keep track of cummulative data about the Gop from the frames such as the\n      // Gop duration, starting pts, etc.\n      this.groupFramesIntoGops_ = function (frames) {\n        var i,\n            currentFrame,\n            currentGop = [],\n            gops = [];\n\n        // We must pre-set some of the values on the Gop since we\n        // keep running totals of these values\n        currentGop.byteLength = 0;\n        currentGop.nalCount = 0;\n        currentGop.duration = 0;\n        currentGop.pts = frames[0].pts;\n        currentGop.dts = frames[0].dts;\n\n        // store some metadata about all the Gops\n        gops.byteLength = 0;\n        gops.nalCount = 0;\n        gops.duration = 0;\n        gops.pts = frames[0].pts;\n        gops.dts = frames[0].dts;\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          if (currentFrame.keyFrame) {\n            // Since the very first frame is expected to be an keyframe\n            // only push to the gops array when currentGop is not empty\n            if (currentGop.length) {\n              gops.push(currentGop);\n              gops.byteLength += currentGop.byteLength;\n              gops.nalCount += currentGop.nalCount;\n              gops.duration += currentGop.duration;\n            }\n\n            currentGop = [currentFrame];\n            currentGop.nalCount = currentFrame.length;\n            currentGop.byteLength = currentFrame.byteLength;\n            currentGop.pts = currentFrame.pts;\n            currentGop.dts = currentFrame.dts;\n            currentGop.duration = currentFrame.duration;\n          } else {\n            currentGop.duration += currentFrame.duration;\n            currentGop.nalCount += currentFrame.length;\n            currentGop.byteLength += currentFrame.byteLength;\n            currentGop.push(currentFrame);\n          }\n        }\n\n        if (gops.length && currentGop.duration <= 0) {\n          currentGop.duration = gops[gops.length - 1].duration;\n        }\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n\n        // push the final Gop\n        gops.push(currentGop);\n        return gops;\n      };\n\n      // generate the track's sample table from an array of gops\n      this.generateSampleTable_ = function (gops, baseDataOffset) {\n        var h,\n            i,\n            sample,\n            currentGop,\n            currentFrame,\n            dataOffset = baseDataOffset || 0,\n            samples = [];\n\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            sample = createDefaultSample();\n\n            sample.dataOffset = dataOffset;\n            sample.compositionTimeOffset = currentFrame.pts - currentFrame.dts;\n            sample.duration = currentFrame.duration;\n            sample.size = 4 * currentFrame.length; // Space for nal unit size\n            sample.size += currentFrame.byteLength;\n\n            if (currentFrame.keyFrame) {\n              sample.flags.dependsOn = 2;\n            }\n\n            dataOffset += sample.size;\n\n            samples.push(sample);\n          }\n        }\n        return samples;\n      };\n\n      // generate the track's raw mdat data from an array of gops\n      this.concatenateNalData_ = function (gops) {\n        var h,\n            i,\n            j,\n            currentGop,\n            currentFrame,\n            currentNal,\n            dataOffset = 0,\n            nalsByteLength = gops.byteLength,\n            numberOfNals = gops.nalCount,\n            totalByteLength = nalsByteLength + 4 * numberOfNals,\n            data = new Uint8Array(totalByteLength),\n            view = new DataView(data.buffer);\n\n        // For each Gop..\n        for (h = 0; h < gops.length; h++) {\n          currentGop = gops[h];\n\n          // For each Frame..\n          for (i = 0; i < currentGop.length; i++) {\n            currentFrame = currentGop[i];\n\n            // For each NAL..\n            for (j = 0; j < currentFrame.length; j++) {\n              currentNal = currentFrame[j];\n\n              view.setUint32(dataOffset, currentNal.data.byteLength);\n              dataOffset += 4;\n              data.set(currentNal.data, dataOffset);\n              dataOffset += currentNal.data.byteLength;\n            }\n          }\n        }\n        return data;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$1;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var mp4 = {\n      generator: mp4Generator,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        window_1.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          window_1.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        window_1.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        window_1.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers();\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file codec-utils.js\n */\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Player} player\n *        The player instance\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, player, mapping) {\n  if (!player || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((player.currentTime() - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this7 = possibleConstructorReturn(this, _videojs$EventTarget.call(this, videojs$1.EventTarget));\n\n    _this7.timestampOffset_ = 0;\n    _this7.pendingBuffers_ = [];\n    _this7.bufferUpdating_ = false;\n\n    _this7.mediaSource_ = mediaSource;\n    _this7.codecs_ = codecs;\n    _this7.audioCodec_ = null;\n    _this7.videoCodec_ = null;\n    _this7.audioDisabled_ = false;\n    _this7.appendAudioInitSegment_ = true;\n    _this7.gopBuffer_ = [];\n    _this7.timeMapping_ = 0;\n    _this7.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this7.safeAppend_\n    };\n\n    _this7.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this7.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this7.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this7.transmuxer_ = new TransmuxWorker();\n    _this7.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this7.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this7.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this7.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this7.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this7, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this7, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this7, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this7, 'buffered', {\n      get: function get$$1() {\n        var start = null;\n        var end = null;\n        var arity = 0;\n        var extents = [];\n        var ranges = [];\n\n        // neither buffer has been created yet\n        if (!this.videoBuffer_ && !this.audioBuffer_) {\n          return videojs$1.createTimeRange();\n        }\n\n        // only one buffer is configured\n        if (!this.videoBuffer_) {\n          return this.audioBuffer_.buffered;\n        }\n        if (!this.audioBuffer_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are configured\n        if (this.audioDisabled_) {\n          return this.videoBuffer_.buffered;\n        }\n\n        // both buffers are empty\n        if (this.videoBuffer_.buffered.length === 0 && this.audioBuffer_.buffered.length === 0) {\n          return videojs$1.createTimeRange();\n        }\n\n        // Handle the case where we have both buffers and create an\n        // intersection of the two\n        var videoBuffered = this.videoBuffer_.buffered;\n        var audioBuffered = this.audioBuffer_.buffered;\n        var count = videoBuffered.length;\n\n        // A) Gather up all start and end times\n        while (count--) {\n          extents.push({ time: videoBuffered.start(count), type: 'start' });\n          extents.push({ time: videoBuffered.end(count), type: 'end' });\n        }\n        count = audioBuffered.length;\n        while (count--) {\n          extents.push({ time: audioBuffered.start(count), type: 'start' });\n          extents.push({ time: audioBuffered.end(count), type: 'end' });\n        }\n        // B) Sort them by time\n        extents.sort(function (a, b) {\n          return a.time - b.time;\n        });\n\n        // C) Go along one by one incrementing arity for start and decrementing\n        //    arity for ends\n        for (count = 0; count < extents.length; count++) {\n          if (extents[count].type === 'start') {\n            arity++;\n\n            // D) If arity is ever incremented to 2 we are entering an\n            //    overlapping range\n            if (arity === 2) {\n              start = extents[count].time;\n            }\n          } else if (extents[count].type === 'end') {\n            arity--;\n\n            // E) If arity is ever decremented to 1 we leaving an\n            //    overlapping range\n            if (arity === 1) {\n              end = extents[count].time;\n            }\n          }\n\n          // F) Record overlapping ranges\n          if (start !== null && end !== null) {\n            ranges.push([start, end]);\n            start = null;\n            end = null;\n          }\n        }\n\n        return videojs$1.createTimeRanges(ranges);\n      }\n    });\n    return _this7;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  VirtualSourceBuffer.prototype.data_ = function data_(event) {\n    var segment = event.data.segment;\n\n    // Cast ArrayBuffer to TypedArray\n    segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n    segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n    createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n    // Add the segments to the pendingBuffers array\n    this.pendingBuffers_.push(segment);\n    return;\n  };\n\n  /**\n   * When we get a done event from the transmuxer\n   * we call this function and we process all\n   * of the pending data that we have been saving in the\n   * data_ function\n   *\n   * @private\n   * @param {Event} event the done event from the transmuxer\n   */\n\n\n  VirtualSourceBuffer.prototype.done_ = function done_(event) {\n    // Don't process and append data if the mediaSource is closed\n    if (this.mediaSource_.readyState === 'closed') {\n      this.pendingBuffers_.length = 0;\n      return;\n    }\n\n    // All buffers should have been flushed from the muxer\n    // start processing anything we have received\n    this.processPendingSegments_();\n    return;\n  };\n\n  /**\n   * Create our internal native audio/video source buffers and add\n   * event handlers to them with the following conditions:\n   * 1. they do not already exist on the mediaSource\n   * 2. this VSB has a codec for them\n   *\n   * @private\n   */\n\n\n  VirtualSourceBuffer.prototype.createRealSourceBuffers_ = function createRealSourceBuffers_() {\n    var _this8 = this;\n\n    var types = ['audio', 'video'];\n\n    types.forEach(function (type) {\n      // Don't create a SourceBuffer of this type if we don't have a\n      // codec for it\n      if (!_this8[type + 'Codec_']) {\n        return;\n      }\n\n      // Do nothing if a SourceBuffer of this type already exists\n      if (_this8[type + 'Buffer_']) {\n        return;\n      }\n\n      var buffer = null;\n\n      // If the mediasource already has a SourceBuffer for the codec\n      // use that\n      if (_this8.mediaSource_[type + 'Buffer_']) {\n        buffer = _this8.mediaSource_[type + 'Buffer_'];\n        // In multiple audio track cases, the audio source buffer is disabled\n        // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n        // than createRealSourceBuffers_ is called to create the second\n        // VirtualSourceBuffer because that happens as a side-effect of\n        // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n        // the audioBuffer is essentially \"ownerless\" and no one will toggle\n        // the `updating` state back to false once the `updateend` event is received\n        //\n        // Setting `updating` to false manually will work around this\n        // situation and allow work to continue\n        buffer.updating = false;\n      } else {\n        var codecProperty = type + 'Codec_';\n        var mimeType = type + '/mp4;codecs=\"' + _this8[codecProperty] + '\"';\n\n        buffer = makeWrappedSourceBuffer(_this8.mediaSource_.nativeMediaSource_, mimeType);\n\n        _this8.mediaSource_[type + 'Buffer_'] = buffer;\n      }\n\n      _this8[type + 'Buffer_'] = buffer;\n\n      // Wire up the events to the SourceBuffer\n      ['update', 'updatestart', 'updateend'].forEach(function (event) {\n        buffer.addEventListener(event, function () {\n          // if audio is disabled\n          if (type === 'audio' && _this8.audioDisabled_) {\n            return;\n          }\n\n          if (event === 'updateend') {\n            _this8[type + 'Buffer_'].updating = false;\n          }\n\n          var shouldTrigger = types.every(function (t) {\n            // skip checking audio's updating status if audio\n            // is not enabled\n            if (t === 'audio' && _this8.audioDisabled_) {\n              return true;\n            }\n            // if the other type if updating we don't trigger\n            if (type !== t && _this8[t + 'Buffer_'] && _this8[t + 'Buffer_'].updating) {\n              return false;\n            }\n            return true;\n          });\n\n          if (shouldTrigger) {\n            return _this8.trigger(event);\n          }\n        });\n      });\n    });\n  };\n\n  /**\n   * Emulate the native mediasource function, but our function will\n   * send all of the proposed segments to the transmuxer so that we\n   * can transmux them before we append them to our internal\n   * native source buffers in the correct format.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n   * @param {Uint8Array} segment the segment to append to the buffer\n   */\n\n\n  VirtualSourceBuffer.prototype.appendBuffer = function appendBuffer(segment) {\n    // Start the internal \"updating\" state\n    this.bufferUpdating_ = true;\n\n    if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n      var audioBuffered = this.audioBuffer_.buffered;\n\n      this.transmuxer_.postMessage({\n        action: 'setAudioAppendStart',\n        appendStart: audioBuffered.end(audioBuffered.length - 1)\n      });\n    }\n\n    if (this.videoBuffer_) {\n      this.transmuxer_.postMessage({\n        action: 'alignGopsWith',\n        gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_, this.timeMapping_)\n      });\n    }\n\n    this.transmuxer_.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: segment.buffer,\n\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset: segment.byteOffset,\n      byteLength: segment.byteLength\n    }, [segment.buffer]);\n    this.transmuxer_.postMessage({ action: 'flush' });\n  };\n\n  /**\n   * Appends gop information (timing and byteLength) received by the transmuxer for the\n   * gops appended in the last call to appendBuffer\n   *\n   * @param {Event} event\n   *        The gopInfo event from the transmuxer\n   * @param {Array} event.data.gopInfo\n   *        List of gop info to append\n   */\n\n\n  VirtualSourceBuffer.prototype.appendGopInfo_ = function appendGopInfo_(event) {\n    this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n  };\n\n  /**\n   * Emulate the native mediasource function and remove parts\n   * of the buffer from any of our internal buffers that exist\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n   * @param {Double} start position to start the remove at\n   * @param {Double} end position to end the remove at\n   */\n\n\n  VirtualSourceBuffer.prototype.remove = function remove(start, end) {\n    if (this.videoBuffer_) {\n      this.videoBuffer_.updating = true;\n      this.videoBuffer_.remove(start, end);\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n    }\n    if (!this.audioDisabled_ && this.audioBuffer_) {\n      this.audioBuffer_.updating = true;\n      this.audioBuffer_.remove(start, end);\n    }\n\n    // Remove Metadata Cues (id3)\n    removeCuesFromTrack(start, end, this.metadataTrack_);\n\n    // Remove Any Captions\n    if (this.inbandTextTracks_) {\n      for (var track in this.inbandTextTracks_) {\n        removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n      }\n    }\n  };\n\n  /**\n   * Process any segments that the muxer has output\n   * Concatenate segments together based on type and append them into\n   * their respective sourceBuffers\n   *\n   * @private\n   */\n\n\n  VirtualSourceBuffer.prototype.processPendingSegments_ = function processPendingSegments_() {\n    var sortedSegments = {\n      video: {\n        segments: [],\n        bytes: 0\n      },\n      audio: {\n        segments: [],\n        bytes: 0\n      },\n      captions: [],\n      metadata: []\n    };\n\n    // Sort segments into separate video/audio arrays and\n    // keep track of their total byte lengths\n    sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n      var type = segment.type;\n      var data = segment.data;\n      var initSegment = segment.initSegment;\n\n      segmentObj[type].segments.push(data);\n      segmentObj[type].bytes += data.byteLength;\n\n      segmentObj[type].initSegment = initSegment;\n\n      // Gather any captions into a single array\n      if (segment.captions) {\n        segmentObj.captions = segmentObj.captions.concat(segment.captions);\n      }\n\n      if (segment.info) {\n        segmentObj[type].info = segment.info;\n      }\n\n      // Gather any metadata into a single array\n      if (segment.metadata) {\n        segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n      }\n\n      return segmentObj;\n    }, sortedSegments);\n\n    // Create the real source buffers if they don't exist by now since we\n    // finally are sure what tracks are contained in the source\n    if (!this.videoBuffer_ && !this.audioBuffer_) {\n      // Remove any codecs that may have been specified by default but\n      // are no longer applicable now\n      if (sortedSegments.video.bytes === 0) {\n        this.videoCodec_ = null;\n      }\n      if (sortedSegments.audio.bytes === 0) {\n        this.audioCodec_ = null;\n      }\n\n      this.createRealSourceBuffers_();\n    }\n\n    if (sortedSegments.audio.info) {\n      this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n    }\n    if (sortedSegments.video.info) {\n      this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n    }\n\n    if (this.appendAudioInitSegment_) {\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n        sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n      }\n      this.appendAudioInitSegment_ = false;\n    }\n\n    var triggerUpdateend = false;\n\n    // Merge multiple video and audio segments into one and append\n    if (this.videoBuffer_ && sortedSegments.video.bytes) {\n      sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n      sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n      this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      // TODO: are video tracks the only ones with text tracks?\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n    } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n      // The transmuxer did not return any bytes of video, meaning it was all trimmed\n      // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n      // will never be triggered by this source buffer, which will cause contrib-hls\n      // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n      // will be triggered by the audio buffer, which will be sent upwards since the video\n      // buffer will not be in an updating state.\n      triggerUpdateend = true;\n    }\n\n    if (!this.audioDisabled_ && this.audioBuffer_) {\n      this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n    }\n\n    this.pendingBuffers_.length = 0;\n\n    if (triggerUpdateend) {\n      this.trigger('updateend');\n    }\n\n    // We are no longer in the internal \"updating\" state\n    this.bufferUpdating_ = false;\n  };\n\n  /**\n   * Combine all segments into a single Uint8Array and then append them\n   * to the destination buffer\n   *\n   * @param {Object} segmentObj\n   * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n   * @private\n   */\n\n\n  VirtualSourceBuffer.prototype.concatAndAppendSegments_ = function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n    var offset = 0;\n    var tempBuffer = void 0;\n\n    if (segmentObj.bytes) {\n      tempBuffer = new Uint8Array(segmentObj.bytes);\n\n      // Combine the individual segments into one large typed-array\n      segmentObj.segments.forEach(function (segment) {\n        tempBuffer.set(segment, offset);\n        offset += segment.byteLength;\n      });\n\n      try {\n        destinationBuffer.updating = true;\n        destinationBuffer.appendBuffer(tempBuffer);\n      } catch (error) {\n        if (this.mediaSource_.player_) {\n          this.mediaSource_.player_.error({\n            code: -3,\n            type: 'APPEND_BUFFER_ERR',\n            message: error.message,\n            originalError: error\n          });\n        }\n      }\n    }\n  };\n\n  /**\n   * Emulate the native mediasource function. abort any soureBuffer\n   * actions and throw out any un-appended data.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n   */\n\n\n  VirtualSourceBuffer.prototype.abort = function abort() {\n    if (this.videoBuffer_) {\n      this.videoBuffer_.abort();\n    }\n    if (!this.audioDisabled_ && this.audioBuffer_) {\n      this.audioBuffer_.abort();\n    }\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({ action: 'reset' });\n    }\n    this.pendingBuffers_.length = 0;\n    this.bufferUpdating_ = false;\n  };\n\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget2) {\n  inherits(HtmlMediaSource, _videojs$EventTarget2);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this9 = possibleConstructorReturn(this, _videojs$EventTarget2.call(this));\n\n    var property = void 0;\n\n    _this9.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this9.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this9.nativeMediaSource_[property] === 'function') {\n        _this9[property] = _this9.nativeMediaSource_[property].bind(_this9.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this9.duration_ = NaN;\n    Object.defineProperty(_this9, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this9, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this9, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this9, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this9.sourceBuffers = [];\n\n    _this9.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this9.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this9.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this9.sourceBuffers.length === 1) {\n        var sourceBuffer = _this9.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this9.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this9.player_.audioTracks().length; i++) {\n        var track = _this9.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this9.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this9.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this9.onPlayerMediachange_ = function () {\n      _this9.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this9.onHlsReset_ = function () {\n      _this9.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this9.onHlsSegmentTimeMapping_ = function (event) {\n      _this9.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this9);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this9.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this9.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this9.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this9.player_.tech_.on('hls-reset', _this9.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this9.player_.tech_.on('hls-segment-time-mapping', _this9.onHlsSegmentTimeMapping_);\n\n      if (_this9.player_.audioTracks && _this9.player_.audioTracks()) {\n        _this9.player_.audioTracks().on('change', _this9.updateActiveSourceBuffers_);\n        _this9.player_.audioTracks().on('addtrack', _this9.updateActiveSourceBuffers_);\n        _this9.player_.audioTracks().on('removetrack', _this9.updateActiveSourceBuffers_);\n      }\n\n      _this9.player_.on('mediachange', _this9.onPlayerMediachange_);\n    });\n\n    _this9.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this9.duration);\n\n      for (var i = 0; i < _this9.sourceBuffers.length; i++) {\n        var sourcebuffer = _this9.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this9.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this9;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  HtmlMediaSource.prototype.addSeekableRange_ = function addSeekableRange_(start, end) {\n    var error = void 0;\n\n    if (this.duration !== Infinity) {\n      error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n      error.name = 'InvalidStateError';\n      error.code = 11;\n      throw error;\n    }\n\n    if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n      this.nativeMediaSource_.duration = end;\n    }\n  };\n\n  /**\n   * Add a source buffer to the media source.\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n   * @param {String} type the content-type of the content\n   * @return {Object} the created source buffer\n   */\n\n\n  HtmlMediaSource.prototype.addSourceBuffer = function addSourceBuffer(type) {\n    var buffer = void 0;\n    var parsedType = parseContentType(type);\n\n    // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n    // stream segments into fragmented MP4s\n    if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n      var codecs = [];\n\n      if (parsedType.parameters && parsedType.parameters.codecs) {\n        codecs = parsedType.parameters.codecs.split(',');\n        codecs = translateLegacyCodecs(codecs);\n        codecs = codecs.filter(function (codec) {\n          return isAudioCodec(codec) || isVideoCodec(codec);\n        });\n      }\n\n      if (codecs.length === 0) {\n        codecs = ['avc1.4d400d', 'mp4a.40.2'];\n      }\n\n      buffer = new VirtualSourceBuffer(this, codecs);\n\n      if (this.sourceBuffers.length !== 0) {\n        // If another VirtualSourceBuffer already exists, then we are creating a\n        // SourceBuffer for an alternate audio track and therefore we know that\n        // the source has both an audio and video track.\n        // That means we should trigger the manual creation of the real\n        // SourceBuffers instead of waiting for the transmuxer to return data\n        this.sourceBuffers[0].createRealSourceBuffers_();\n        buffer.createRealSourceBuffers_();\n\n        // Automatically disable the audio on the first source buffer if\n        // a second source buffer is ever created\n        this.sourceBuffers[0].audioDisabled_ = true;\n      }\n    } else {\n      // delegate to the native implementation\n      buffer = this.nativeMediaSource_.addSourceBuffer(type);\n    }\n\n    this.sourceBuffers.push(buffer);\n    return buffer;\n  };\n\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget$) {\n  inherits(DashPlaylistLoader, _EventTarget$);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this10 = possibleConstructorReturn(this, _EventTarget$.call(this));\n\n    _this10.hls_ = hls;\n    _this10.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this10.on('minimumUpdatePeriod', function () {\n      _this10.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this10.on('mediaupdatetimeout', function () {\n      _this10.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this10.srcUrl = srcUrlOrPlaylist;\n      _this10.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn(_this10);\n    }\n\n    _this10.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this10.state = 'HAVE_METADATA';\n    _this10.started = true;\n    // we only should have one playlist so select it\n    _this10.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this10.trigger('loadedmetadata');\n    }, 0);\n    return _this10;\n  }\n\n  DashPlaylistLoader.prototype.dispose = function dispose() {\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n  };\n\n  DashPlaylistLoader.prototype.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n\n  DashPlaylistLoader.prototype.media = function media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    }\n\n    // setter\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n\n    var startingState = this.state;\n\n    // find the playlist object if the target playlist has been specified by URI\n    if (typeof playlist === 'string') {\n      if (!this.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.master.playlists[playlist];\n    }\n\n    var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n    this.state = 'HAVE_METADATA';\n\n    // switching to the active playlist is a no-op\n    if (!mediaChange) {\n      return;\n    }\n\n    // switching from an already loaded playlist\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.media_ = playlist;\n\n    this.refreshMedia_();\n\n    // trigger media change if the active media has been updated\n    if (startingState !== 'HAVE_MASTER') {\n      this.trigger('mediachange');\n    }\n  };\n\n  DashPlaylistLoader.prototype.pause = function pause() {\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  };\n\n  DashPlaylistLoader.prototype.load = function load() {\n    // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  /**\n   * Parses the master xml string and updates playlist uri references\n   *\n   * @return {Object}\n   *         The parsed mpd manifest object\n   */\n\n\n  DashPlaylistLoader.prototype.parseMasterXml = function parseMasterXml() {\n    var master = mpdParser.parse(this.masterXml_, {\n      manifestUri: this.srcUrl,\n      clientOffset: this.clientOffset_\n    });\n\n    master.uri = this.srcUrl;\n\n    // Set up phony URIs for the playlists since we won't have external URIs for DASH\n    // but reference playlists by their URI throughout the project\n    // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n    for (var i = 0; i < master.playlists.length; i++) {\n      var phonyUri = 'placeholder-uri-' + i;\n\n      master.playlists[i].uri = phonyUri;\n      // set up by URI references\n      master.playlists[phonyUri] = master.playlists[i];\n    }\n\n    // set up phony URIs for the media group playlists since we won't have external\n    // URIs for DASH but reference playlists by their URI throughout the project\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (properties.playlists && properties.playlists.length) {\n        var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n        properties.playlists[0].uri = _phonyUri;\n        // setup URI references\n        master.playlists[_phonyUri] = properties.playlists[0];\n      }\n    });\n\n    setupMediaPlaylists(master);\n    resolveMediaGroupUris(master);\n\n    return master;\n  };\n\n  DashPlaylistLoader.prototype.start = function start() {\n    var _this11 = this;\n\n    this.started = true;\n\n    // request the specified URL\n    this.request = this.hls_.xhr({\n      uri: this.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this11.request) {\n        return;\n      }\n\n      // clear the loader's request reference\n      _this11.request = null;\n\n      if (error) {\n        _this11.error = {\n          status: req.status,\n          message: 'DASH playlist request error at URL: ' + _this11.srcUrl,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (_this11.state === 'HAVE_NOTHING') {\n          _this11.started = false;\n        }\n        return _this11.trigger('error');\n      }\n\n      _this11.masterXml_ = req.responseText;\n\n      if (req.responseHeaders && req.responseHeaders.date) {\n        _this11.masterLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        _this11.masterLoaded_ = Date.now();\n      }\n\n      _this11.syncClientServerClock_(_this11.onClientServerClockSync_.bind(_this11));\n    });\n  };\n\n  /**\n   * Parses the master xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n\n  DashPlaylistLoader.prototype.syncClientServerClock_ = function syncClientServerClock_(done) {\n    var _this12 = this;\n\n    var utcTiming = mpdParser.parseUTCTiming(this.masterXml_);\n\n    // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n    if (utcTiming === null) {\n      this.clientOffset_ = this.masterLoaded_ - Date.now();\n      return done();\n    }\n\n    if (utcTiming.method === 'DIRECT') {\n      this.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n\n    this.request = this.hls_.xhr({\n      uri: resolveUrl(this.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this12.request) {\n        return;\n      }\n\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        _this12.clientOffset_ = _this12.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      var serverTime = void 0;\n\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = _this12.masterLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n\n      _this12.clientOffset_ = serverTime - Date.now();\n\n      done();\n    });\n  };\n\n  /**\n   * Handler for after client/server clock synchronization has happened. Sets up\n   * xml refresh timer if specificed by the manifest.\n   */\n\n\n  DashPlaylistLoader.prototype.onClientServerClockSync_ = function onClientServerClockSync_() {\n    var _this13 = this;\n\n    this.master = this.parseMasterXml();\n\n    this.state = 'HAVE_MASTER';\n\n    this.trigger('loadedplaylist');\n\n    if (!this.media_) {\n      // no media playlist was specifically selected so start\n      // from the first listed one\n      this.media(this.master.playlists[0]);\n    }\n    // trigger loadedmetadata to resolve setup of media groups\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this13.trigger('loadedmetadata');\n    }, 0);\n\n    // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n    // be refreshed when this is the case. The inter-op guide says that when the\n    // minimumUpdatePeriod is 0, the manifest should outline all currently available\n    // segments, but future segments may require an update. I think a good solution\n    // would be to update the manifest at the same rate that the media playlists\n    // are \"refreshed\", i.e. every targetDuration.\n    if (this.master.minimumUpdatePeriod) {\n      window$1.setTimeout(function () {\n        _this13.trigger('minimumUpdatePeriod');\n      }, this.master.minimumUpdatePeriod);\n    }\n  };\n\n  /**\n   * Sends request to refresh the master xml and updates the parsed master manifest\n   * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n   */\n\n\n  DashPlaylistLoader.prototype.refreshXml_ = function refreshXml_() {\n    var _this14 = this;\n\n    this.request = this.hls_.xhr({\n      uri: this.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this14.request) {\n        return;\n      }\n\n      // clear the loader's request reference\n      _this14.request = null;\n\n      if (error) {\n        _this14.error = {\n          status: req.status,\n          message: 'DASH playlist request error at URL: ' + _this14.srcUrl,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (_this14.state === 'HAVE_NOTHING') {\n          _this14.started = false;\n        }\n        return _this14.trigger('error');\n      }\n\n      _this14.masterXml_ = req.responseText;\n\n      var newMaster = _this14.parseMasterXml();\n\n      _this14.master = updateMaster$1(_this14.master, newMaster);\n\n      window$1.setTimeout(function () {\n        _this14.trigger('minimumUpdatePeriod');\n      }, _this14.master.minimumUpdatePeriod);\n    });\n  };\n\n  /**\n   * Refreshes the media playlist by re-parsing the master xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the master loader.\n   */\n\n\n  DashPlaylistLoader.prototype.refreshMedia_ = function refreshMedia_() {\n    var _this15 = this;\n\n    var oldMaster = void 0;\n    var newMaster = void 0;\n\n    if (this.masterPlaylistLoader_) {\n      oldMaster = this.masterPlaylistLoader_.master;\n      newMaster = this.masterPlaylistLoader_.parseMasterXml();\n    } else {\n      oldMaster = this.master;\n      newMaster = this.parseMasterXml();\n    }\n\n    var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n    if (updatedMaster) {\n      if (this.masterPlaylistLoader_) {\n        this.masterPlaylistLoader_.master = updatedMaster;\n      } else {\n        this.master = updatedMaster;\n      }\n      this.media_ = updatedMaster.playlists[this.media_.uri];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    if (!this.media().endList) {\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        _this15.trigger('mediaupdatetimeout');\n      }, refreshDelay(this.media(), !!updatedMaster));\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  SourceUpdater.prototype.createSourceBuffer_ = function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n    var _this16 = this;\n\n    this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n    this.logger_('created SourceBuffer');\n\n    if (sourceBufferEmitter) {\n      sourceBufferEmitter.trigger('sourcebufferadded');\n\n      if (this.mediaSource.sourceBuffers.length < 2) {\n        // There's another source buffer we must wait for before we can start updating\n        // our own (or else we can get into a bad state, i.e., appending video/audio data\n        // before the other video/audio source buffer is available and leading to a video\n        // or audio only buffer).\n        sourceBufferEmitter.on('sourcebufferadded', function () {\n          _this16.start_();\n        });\n        return;\n      }\n    }\n\n    this.start_();\n  };\n\n  SourceUpdater.prototype.start_ = function start_() {\n    var _this17 = this;\n\n    this.started_ = true;\n\n    // run completion handlers and process callbacks as updateend\n    // events fire\n    this.onUpdateendCallback_ = function () {\n      var pendingCallback = _this17.pendingCallback_;\n\n      _this17.pendingCallback_ = null;\n\n      _this17.logger_('buffered [' + printableRange(_this17.buffered()) + ']');\n\n      if (pendingCallback) {\n        pendingCallback();\n      }\n\n      _this17.runCallback_();\n    };\n\n    this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n    this.runCallback_();\n  };\n\n  /**\n   * Aborts the current segment and resets the segment parser.\n   *\n   * @param {Function} done function to call when done\n   * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n   */\n\n\n  SourceUpdater.prototype.abort = function abort(done) {\n    var _this18 = this;\n\n    if (this.processedAppend_) {\n      this.queueCallback_(function () {\n        _this18.sourceBuffer_.abort();\n      }, done);\n    }\n  };\n\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {ArrayBuffer} bytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n\n  SourceUpdater.prototype.appendBuffer = function appendBuffer(bytes, done) {\n    var _this19 = this;\n\n    this.processedAppend_ = true;\n    this.queueCallback_(function () {\n      _this19.sourceBuffer_.appendBuffer(bytes);\n    }, done);\n  };\n\n  /**\n   * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n   *\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n   */\n\n\n  SourceUpdater.prototype.buffered = function buffered() {\n    if (!this.sourceBuffer_) {\n      return videojs$1.createTimeRanges();\n    }\n    return this.sourceBuffer_.buffered;\n  };\n\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {Number} start where to start the removal\n   * @param {Number} end where to end the removal\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n\n  SourceUpdater.prototype.remove = function remove(start, end) {\n    var _this20 = this;\n\n    if (this.processedAppend_) {\n      this.queueCallback_(function () {\n        _this20.logger_('remove [' + start + ' => ' + end + ']');\n        _this20.sourceBuffer_.remove(start, end);\n      }, noop);\n    }\n  };\n\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {Boolean} the updating status of the SourceBuffer\n   */\n\n\n  SourceUpdater.prototype.updating = function updating() {\n    return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n  };\n\n  /**\n   * Set/get the timestampoffset on the SourceBuffer\n   *\n   * @return {Number} the timestamp offset\n   */\n\n\n  SourceUpdater.prototype.timestampOffset = function timestampOffset(offset) {\n    var _this21 = this;\n\n    if (typeof offset !== 'undefined') {\n      this.queueCallback_(function () {\n        _this21.sourceBuffer_.timestampOffset = offset;\n      });\n      this.timestampOffset_ = offset;\n    }\n    return this.timestampOffset_;\n  };\n\n  /**\n   * Queue a callback to run\n   */\n\n\n  SourceUpdater.prototype.queueCallback_ = function queueCallback_(callback, done) {\n    this.callbacks_.push([callback.bind(this), done]);\n    this.runCallback_();\n  };\n\n  /**\n   * Run a queued callback\n   */\n\n\n  SourceUpdater.prototype.runCallback_ = function runCallback_() {\n    var callbacks = void 0;\n\n    if (!this.updating() && this.callbacks_.length && this.started_) {\n      callbacks = this.callbacks_.shift();\n      this.pendingCallback_ = callbacks[1];\n      callbacks[0]();\n    }\n  };\n\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n\n  SourceUpdater.prototype.dispose = function dispose() {\n    this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n    if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n      this.sourceBuffer_.abort();\n    }\n  };\n\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget3) {\n  inherits(SegmentLoader, _videojs$EventTarget3);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this22 = possibleConstructorReturn(this, _videojs$EventTarget3.call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this22.bandwidth = settings.bandwidth;\n    _this22.throughput = { rate: 0, count: 0 };\n    _this22.roundTrip = NaN;\n    _this22.resetStats_();\n    _this22.mediaIndex = null;\n\n    // private settings\n    _this22.hasPlayed_ = settings.hasPlayed;\n    _this22.currentTime_ = settings.currentTime;\n    _this22.seekable_ = settings.seekable;\n    _this22.seeking_ = settings.seeking;\n    _this22.duration_ = settings.duration;\n    _this22.mediaSource_ = settings.mediaSource;\n    _this22.hls_ = settings.hls;\n    _this22.loaderType_ = settings.loaderType;\n    _this22.startingMedia_ = void 0;\n    _this22.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this22.goalBufferLength_ = settings.goalBufferLength;\n    _this22.sourceType_ = settings.sourceType;\n    _this22.state_ = 'INIT';\n\n    // private instance variables\n    _this22.checkBufferTimeout_ = null;\n    _this22.error_ = void 0;\n    _this22.currentTimeline_ = -1;\n    _this22.pendingSegment_ = null;\n    _this22.mimeType_ = null;\n    _this22.sourceUpdater_ = null;\n    _this22.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this22.activeInitSegmentId_ = null;\n    _this22.initSegments_ = {};\n\n    _this22.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this22.syncController_ = settings.syncController;\n    _this22.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this22.syncController_.on('syncinfoupdate', function () {\n      return _this22.trigger('syncinfoupdate');\n    });\n\n    _this22.mediaSource_.addEventListener('sourceopen', function () {\n      return _this22.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this22.fetchAtBuffer_ = false;\n\n    _this22.logger_ = logger('SegmentLoader[' + _this22.loaderType_ + ']');\n\n    Object.defineProperty(_this22, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this22;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.resetStats_ = function resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n  };\n\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n\n  SegmentLoader.prototype.dispose = function dispose() {\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.sourceUpdater_) {\n      this.sourceUpdater_.dispose();\n    }\n    this.resetStats_();\n  };\n\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n\n  SegmentLoader.prototype.abort = function abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n\n    this.abort_();\n\n    // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n    this.state = 'READY';\n\n    // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  };\n\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.abort_ = function abort_() {\n    if (this.pendingSegment_) {\n      this.pendingSegment_.abortRequests();\n    }\n\n    // clear out the segment being processed\n    this.pendingSegment_ = null;\n  };\n\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n\n  SegmentLoader.prototype.error = function error(_error) {\n    if (typeof _error !== 'undefined') {\n      this.error_ = _error;\n    }\n\n    this.pendingSegment_ = null;\n    return this.error_;\n  };\n\n  SegmentLoader.prototype.endOfStream = function endOfStream() {\n    this.ended_ = true;\n    this.pause();\n    this.trigger('ended');\n  };\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  SegmentLoader.prototype.buffered_ = function buffered_() {\n    if (!this.sourceUpdater_) {\n      return videojs$1.createTimeRanges();\n    }\n\n    return this.sourceUpdater_.buffered();\n  };\n\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {Boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n\n  SegmentLoader.prototype.initSegment = function initSegment(map) {\n    var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set$$1 && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes\n      };\n    }\n\n    return storedMap || map;\n  };\n\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {Boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n\n  SegmentLoader.prototype.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && (\n    // the source updater is created when init_ is called, so either having a\n    // source updater or being in the INIT state with a mimeType is enough\n    // to say we have all the needed configuration to start loading.\n    this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n  };\n\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n\n  SegmentLoader.prototype.load = function load() {\n    // un-pause\n    this.monitorBuffer_();\n\n    // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n    if (!this.playlist_) {\n      return;\n    }\n\n    // not sure if this is the best place for this\n    this.syncController_.setDateTimeMapping(this.playlist_);\n\n    // if all the configuration is ready, initialize and begin loading\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n\n    // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n\n    this.state = 'READY';\n  };\n\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.init_ = function init_() {\n    this.state = 'READY';\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n    this.resetEverything();\n    return this.monitorBuffer_();\n  };\n\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n\n  SegmentLoader.prototype.playlist = function playlist(newPlaylist) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!newPlaylist) {\n      return;\n    }\n\n    var oldPlaylist = this.playlist_;\n    var segmentInfo = this.pendingSegment_;\n\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options;\n\n    // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    if (!this.hasPlayed_()) {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      };\n    }\n\n    var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n    this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n    // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n    this.trigger('syncinfoupdate');\n\n    // if we were unpaused but waiting for a playlist, start\n    // buffering now\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must \"resync\" the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        this.resyncLoader();\n      }\n\n      // the rest of this function depends on `oldPlaylist` being defined\n      return;\n    }\n\n    // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n    this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n    // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff;\n    }\n\n    // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleUpdateEnd_` after the segment has been successfully appended\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n      // we need to update the referenced segment so that timing information is\n      // saved for the new playlist's segment, however, if the segment fell off the\n      // playlist, we can leave the old reference and just lose the timing info\n      if (segmentInfo.mediaIndex >= 0) {\n        segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n      }\n    }\n\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  };\n\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n\n  SegmentLoader.prototype.pause = function pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n\n      this.checkBufferTimeout_ = null;\n    }\n  };\n\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n\n  SegmentLoader.prototype.paused = function paused() {\n    return this.checkBufferTimeout_ === null;\n  };\n\n  /**\n   * create/set the following mimetype on the SourceBuffer through a\n   * SourceUpdater\n   *\n   * @param {String} mimeType the mime type string to use\n   * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n   * is added to the media source\n   */\n\n\n  SegmentLoader.prototype.mimeType = function mimeType(_mimeType, sourceBufferEmitter) {\n    if (this.mimeType_) {\n      return;\n    }\n\n    this.mimeType_ = _mimeType;\n    this.sourceBufferEmitter_ = sourceBufferEmitter;\n    // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n  };\n\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   */\n\n\n  SegmentLoader.prototype.resetEverything = function resetEverything() {\n    this.ended_ = false;\n    this.resetLoader();\n    this.remove(0, this.duration_());\n    this.trigger('reseteverything');\n  };\n\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n\n  SegmentLoader.prototype.resetLoader = function resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  };\n\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n\n  SegmentLoader.prototype.resyncLoader = function resyncLoader() {\n    this.mediaIndex = null;\n    this.syncPoint_ = null;\n    this.abort();\n  };\n\n  /**\n   * Remove any data in the source buffer between start and end times\n   * @param {Number} start - the start time of the region to remove from the buffer\n   * @param {Number} end - the end time of the region to remove from the buffer\n   */\n\n\n  SegmentLoader.prototype.remove = function remove(start, end) {\n    if (this.sourceUpdater_) {\n      this.sourceUpdater_.remove(start, end);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n  };\n\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.monitorBuffer_ = function monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  };\n\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.monitorBufferTick_ = function monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  };\n\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.fillBuffer_ = function fillBuffer_() {\n    if (this.sourceUpdater_.updating()) {\n      return;\n    }\n\n    if (!this.syncPoint_) {\n      this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    }\n\n    // see if we need to begin loading immediately\n    var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n    if (isEndOfStream) {\n      this.endOfStream();\n      return;\n    }\n\n    if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n      return;\n    }\n\n    // We will need to change timestampOffset of the sourceBuffer if either of\n    // the following conditions are true:\n    // - The segment.timeline !== this.currentTimeline\n    //   (we are crossing a discontinuity somehow)\n    // - The \"timestampOffset\" for the start of this segment is less than\n    //   the currently set timestampOffset\n    if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n      this.syncController_.reset();\n      segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n    }\n\n    this.loadSegment_(segmentInfo);\n  };\n\n  /**\n   * Determines what segment request should be made, given current playback\n   * state.\n   *\n   * @param {TimeRanges} buffered - the state of the buffer\n   * @param {Object} playlist - the playlist object to fetch segments from\n   * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n   * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n   * @param {Number} currentTime - the playback position in seconds\n   * @param {Object} syncPoint - a segment info object that describes the\n   * @returns {Object} a segment request object that describes the segment to load\n   */\n\n\n  SegmentLoader.prototype.checkBuffer_ = function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n    var lastBufferedEnd = 0;\n    var startOfSegment = void 0;\n\n    if (buffered.length) {\n      lastBufferedEnd = buffered.end(buffered.length - 1);\n    }\n\n    var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n    if (!playlist.segments.length) {\n      return null;\n    }\n\n    // if there is plenty of content buffered, and the video has\n    // been played before relax for awhile\n    if (bufferedTime >= this.goalBufferLength_()) {\n      return null;\n    }\n\n    // if the video has not yet played once, and we already have\n    // one segment downloaded do nothing\n    if (!hasPlayed && bufferedTime >= 1) {\n      return null;\n    }\n\n    // When the syncPoint is null, there is no way of determining a good\n    // conservative segment index to fetch from\n    // The best thing to do here is to get the kind of sync-point data by\n    // making a request\n    if (syncPoint === null) {\n      mediaIndex = this.getSyncSegmentCandidate_(playlist);\n      return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n    }\n\n    // Under normal playback conditions fetching is a simple walk forward\n    if (mediaIndex !== null) {\n      var segment = playlist.segments[mediaIndex];\n\n      if (segment && segment.end) {\n        startOfSegment = segment.end;\n      } else {\n        startOfSegment = lastBufferedEnd;\n      }\n      return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n    }\n\n    // There is a sync-point but the lack of a mediaIndex indicates that\n    // we need to make a good conservative guess about which segment to\n    // fetch\n    if (this.fetchAtBuffer_) {\n      // Find the segment containing the end of the buffer\n      var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n      mediaIndex = mediaSourceInfo.mediaIndex;\n      startOfSegment = mediaSourceInfo.startTime;\n    } else {\n      // Find the segment containing currentTime\n      var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n      mediaIndex = _mediaSourceInfo.mediaIndex;\n      startOfSegment = _mediaSourceInfo.startTime;\n    }\n\n    return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n  };\n\n  /**\n   * The segment loader has no recourse except to fetch a segment in the\n   * current playlist and use the internal timestamps in that segment to\n   * generate a syncPoint. This function returns a good candidate index\n   * for that process.\n   *\n   * @param {Object} playlist - the playlist object to look for a\n   * @returns {Number} An index of a segment from the playlist to load\n   */\n\n\n  SegmentLoader.prototype.getSyncSegmentCandidate_ = function getSyncSegmentCandidate_(playlist) {\n    var _this23 = this;\n\n    if (this.currentTimeline_ === -1) {\n      return 0;\n    }\n\n    var segmentIndexArray = playlist.segments.map(function (s, i) {\n      return {\n        timeline: s.timeline,\n        segmentIndex: i\n      };\n    }).filter(function (s) {\n      return s.timeline === _this23.currentTimeline_;\n    });\n\n    if (segmentIndexArray.length) {\n      return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n    }\n\n    return Math.max(playlist.segments.length - 1, 0);\n  };\n\n  SegmentLoader.prototype.generateSegmentInfo_ = function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n    if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n      return null;\n    }\n\n    var segment = playlist.segments[mediaIndex];\n\n    return {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex: mediaIndex,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest: isSyncRequest,\n      startOfSegment: startOfSegment,\n      // the segment's playlist\n      playlist: playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment: segment\n    };\n  };\n\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @return {Boolean} True if the request was aborted, false otherwise\n   * @private\n   */\n\n\n  SegmentLoader.prototype.abortRequestEarly_ = function abortRequestEarly_(stats) {\n    if (this.hls_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return false;\n    }\n\n    // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return false;\n    }\n\n    var currentTime = this.currentTime_();\n    var measuredBandwidth = stats.bandwidth;\n    var segmentDuration = this.pendingSegment_.duration;\n\n    var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n    // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n    var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n    // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n    if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n      return false;\n    }\n\n    var switchCandidate = minRebufferMaxBandwidthSelector({\n      master: this.hls_.playlists.master,\n      currentTime: currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration: segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n\n    if (!switchCandidate) {\n      return;\n    }\n\n    var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n    var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n    var minimumTimeSaving = 0.5;\n\n    // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n    if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return false;\n    }\n\n    // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.abort();\n    this.trigger('earlyabort');\n    return true;\n  };\n\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n\n  SegmentLoader.prototype.handleProgress_ = function handleProgress_(event, simpleSegment) {\n    if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n      return;\n    }\n\n    this.trigger('progress');\n  };\n\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.loadSegment_ = function loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n\n    segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.createSimplifiedSegmentObj_(segmentInfo),\n    // progress callback\n    this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n  };\n\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n\n  SegmentLoader.prototype.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n    var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n    // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  };\n\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @returns {Object} a simplified segment object copy\n   */\n\n\n  SegmentLoader.prototype.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var simpleSegment = {\n      resolvedUri: segment.resolvedUri,\n      byterange: segment.byterange,\n      requestId: segmentInfo.requestId\n    };\n\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n      simpleSegment.key = {\n        resolvedUri: segment.key.resolvedUri,\n        iv: iv\n      };\n    }\n\n    if (segment.map) {\n      simpleSegment.map = this.initSegment(segment.map);\n    }\n\n    return simpleSegment;\n  };\n\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n\n    if (simpleSegment.stats) {\n      this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n      this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n    }\n\n    // The request was aborted and the SegmentLoader has already been reset\n    if (!this.pendingSegment_) {\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n\n    // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n\n    // an error occurred from the active pendingSegment_ so reset everything\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n\n      // the requests were aborted just record the aborted stat and exit\n      // this is not a true error condition and nothing corrective needs\n      // to be done\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      this.pause();\n\n      // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.mediaRequestsTimedout += 1;\n        this.bandwidth = 1;\n        this.roundTrip = NaN;\n        this.trigger('bandwidthupdate');\n        return;\n      }\n\n      // if control-flow has arrived here, then the error is real\n      // emit an error event to blacklist the current playlist\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n\n    // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n    this.bandwidth = simpleSegment.stats.bandwidth;\n    this.roundTrip = simpleSegment.stats.roundTripTime;\n\n    // if this request included an initialization segment, save that data\n    // to the initSegment cache\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegment(simpleSegment.map, true);\n    }\n\n    this.processSegmentResponse_(simpleSegment);\n  };\n\n  /**\n   * Move any important data from the simplified segment object\n   * back to the real segment object for future phases\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.processSegmentResponse_ = function processSegmentResponse_(simpleSegment) {\n    var segmentInfo = this.pendingSegment_;\n\n    segmentInfo.bytes = simpleSegment.bytes;\n    if (simpleSegment.map) {\n      segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n    }\n\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    this.handleSegment_();\n  };\n\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.handleSegment_ = function handleSegment_() {\n    var _this24 = this;\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var segment = segmentInfo.segment;\n    var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n    // When we have our first timing info, determine what media types this loader is\n    // dealing with. Although we're maintaining extra state, it helps to preserve the\n    // separation of segment loader from the actual source buffers.\n    if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n    // Guard against cases where we're not getting timing info at all until we are\n    // certain that all streams will provide it.\n    timingInfo.containsAudio || timingInfo.containsVideo)) {\n      this.startingMedia_ = {\n        containsAudio: timingInfo.containsAudio,\n        containsVideo: timingInfo.containsVideo\n      };\n    }\n\n    var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    }\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n\n    if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n      this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n      // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n      this.trigger('timestampoffset');\n    }\n\n    var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n    if (timelineMapping !== null) {\n      this.trigger({\n        type: 'segmenttimemapping',\n        mapping: timelineMapping\n      });\n    }\n\n    this.state = 'APPENDING';\n\n    // if the media initialization segment is changing, append it\n    // before the content segment\n    if (segment.map) {\n      var initId = initSegmentId(segment.map);\n\n      if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n        var initSegment = this.initSegment(segment.map);\n\n        this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n          _this24.activeInitSegmentId_ = initId;\n        });\n      }\n    }\n\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n\n    this.logger_(segmentInfoString(segmentInfo));\n\n    this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n  };\n\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n\n  SegmentLoader.prototype.handleUpdateEnd_ = function handleUpdateEnd_() {\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var segment = segmentInfo.segment;\n    var isWalkingForward = this.mediaIndex !== null;\n\n    this.pendingSegment_ = null;\n    this.recordThroughput_(segmentInfo);\n    this.addSegmentMetadataCue_(segmentInfo);\n\n    this.state = 'READY';\n\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.fetchAtBuffer_ = true;\n    this.currentTimeline_ = segmentInfo.timeline;\n\n    // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n    this.trigger('syncinfoupdate');\n\n    // If we previously appended a segment that ends more than 3 targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n    if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n      this.resetEverything();\n      return;\n    }\n\n    // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n\n    // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n    var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n    if (isEndOfStream) {\n      this.endOfStream();\n    }\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  };\n\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n\n  SegmentLoader.prototype.recordThroughput_ = function recordThroughput_(segmentInfo) {\n    var rate = this.throughput.rate;\n    // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n    var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n    // Multiply by 8000 to convert from bytes/millisecond to bits/second\n    var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n    // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  };\n\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n\n  SegmentLoader.prototype.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n\n    var segment = segmentInfo.segment;\n    var start = segment.start;\n    var end = segment.end;\n\n    // Do not try adding the cue if the start and end times are invalid.\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n    var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    var value = {\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.uri,\n      start: start,\n      end: end\n    };\n    var data = JSON.stringify(value);\n    var cue = new Cue(start, end, data);\n\n    // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n    cue.value = value;\n\n    this.segmentMetadataTrack_.addCue(cue);\n  };\n\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\nvar uintToString = function uintToString(uintArray) {\n  return String.fromCharCode.apply(null, uintArray);\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this25 = possibleConstructorReturn(this, _SegmentLoader.call(this, settings, options));\n\n    _this25.mediaSource_ = null;\n\n    _this25.subtitlesTrack_ = null;\n    return _this25;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  VTTSegmentLoader.prototype.buffered_ = function buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n      return videojs$1.createTimeRanges();\n    }\n\n    var cues = this.subtitlesTrack_.cues;\n    var start = cues[0].startTime;\n    var end = cues[cues.length - 1].startTime;\n\n    return videojs$1.createTimeRanges([[start, end]]);\n  };\n\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {Boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n\n  VTTSegmentLoader.prototype.initSegment = function initSegment(map) {\n    var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set$$1 && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      var combinedSegment = new Uint8Array(combinedByteLength);\n\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n\n    return storedMap || map;\n  };\n\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {Boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  };\n\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.init_ = function init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  };\n\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n\n  VTTSegmentLoader.prototype.track = function track(_track) {\n    if (typeof _track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n\n    this.subtitlesTrack_ = _track;\n\n    // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n\n    return this.subtitlesTrack_;\n  };\n\n  /**\n   * Remove any data in the source buffer between start and end times\n   * @param {Number} start - the start time of the region to remove from the buffer\n   * @param {Number} end - the end time of the region to remove from the buffer\n   */\n\n\n  VTTSegmentLoader.prototype.remove = function remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  };\n\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.fillBuffer_ = function fillBuffer_() {\n    var _this26 = this;\n\n    if (!this.syncPoint_) {\n      this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    }\n\n    // see if we need to begin loading immediately\n    var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n    segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      var checkTimestampOffset = function checkTimestampOffset() {\n        _this26.state = 'READY';\n        if (!_this26.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          _this26.monitorBuffer_();\n        }\n      };\n\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n\n    this.loadSegment_(segmentInfo);\n  };\n\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n\n  VTTSegmentLoader.prototype.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n    }\n    return segmentInfo;\n  };\n\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.handleSegment_ = function handleSegment_() {\n    var _this27 = this;\n\n    if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n\n    this.state = 'APPENDING';\n\n    var segmentInfo = this.pendingSegment_;\n    var segment = segmentInfo.segment;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n      var loadHandler = function loadHandler() {\n        _this27.handleSegment_();\n      };\n\n      this.state = 'WAITING_ON_VTTJS';\n      this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n      this.subtitlesTrack_.tech_.one('vttjserror', function () {\n        _this27.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n        _this27.error({\n          message: 'Error loading vtt.js'\n        });\n        _this27.state = 'READY';\n        _this27.pause();\n        _this27.trigger('error');\n      });\n\n      return;\n    }\n\n    segment.requested = true;\n\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.error({\n        message: e.message\n      });\n      this.state = 'READY';\n      this.pause();\n      return this.trigger('error');\n    }\n\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n    this.mediaSecondsLoaded += segment.duration;\n\n    if (segmentInfo.cues.length) {\n      // remove any overlapping cues to prevent doubling\n      this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n    }\n\n    segmentInfo.cues.forEach(function (cue) {\n      _this27.subtitlesTrack_.addCue(cue);\n    });\n\n    this.handleUpdateEnd_();\n  };\n\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n    var decoder = void 0;\n    var decodeBytesToString = false;\n\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n\n    var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = function (map) {\n      return segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = function (error) {\n      videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n\n    if (segmentInfo.segment.map) {\n      var mapData = segmentInfo.segment.map.bytes;\n\n      if (decodeBytesToString) {\n        mapData = uintToString(mapData);\n      }\n\n      parser.parse(mapData);\n    }\n\n    var segmentData = segmentInfo.bytes;\n\n    if (decodeBytesToString) {\n      segmentData = uintToString(segmentData);\n    }\n\n    parser.parse(segmentData);\n    parser.flush();\n  };\n\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n\n  VTTSegmentLoader.prototype.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    var segment = segmentInfo.segment;\n\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n\n    var timestampmap = segmentInfo.timestampmap;\n    var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n    segmentInfo.cues.forEach(function (cue) {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n\n    if (!playlist.syncInfo) {\n      var firstStart = segmentInfo.cues[0].startTime;\n      var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  };\n\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        adOffset = _segment$cueOutCont$s[0];\n        adTotal = _segment$cueOutCont$s[1];\n\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget4) {\n  inherits(SyncController, _videojs$EventTarget4);\n\n  function SyncController() {\n    classCallCheck(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this28 = possibleConstructorReturn(this, _videojs$EventTarget4.call(this));\n\n    _this28.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this28.timelines = [];\n    _this28.discontinuities = [];\n    _this28.datetimeToDisplayTime = null;\n\n    _this28.logger_ = logger('SyncController');\n    return _this28;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  SyncController.prototype.getSyncPoint = function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    }\n\n    // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n    return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n  };\n\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @returns {Number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n\n  SyncController.prototype.getExpiredTime = function getExpiredTime(playlist, duration$$1) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n    // Without sync-points, there is not enough information to determine the expired time\n    if (!syncPoints.length) {\n      return null;\n    }\n\n    var syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    });\n\n    // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n\n    return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n  };\n\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Array}\n   *          A list of sync-point objects\n   */\n\n\n  SyncController.prototype.runStrategies_ = function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoints = [];\n\n    // Try to find a sync-point in by utilizing various strategies...\n    for (var i = 0; i < syncPointStrategies.length; i++) {\n      var strategy = syncPointStrategies[i];\n      var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint: syncPoint\n        });\n      }\n    }\n\n    return syncPoints;\n  };\n\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {String} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {Number} target.value\n   *        The value to target for the specified key.\n   * @returns {Object}\n   *          The sync-point nearest the target\n   */\n\n\n  SyncController.prototype.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n    var bestSyncPoint = syncPoints[0].syncPoint;\n    var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    var bestStrategy = syncPoints[0].strategy;\n\n    for (var i = 1; i < syncPoints.length; i++) {\n      var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n\n    this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n    return bestSyncPoint;\n  };\n\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n\n  SyncController.prototype.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n    // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n    for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n      var lastRemovedSegment = oldPlaylist.segments[i];\n\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  };\n\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should\n   * only ever happen once at the start of playback.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n\n  SyncController.prototype.setDateTimeMapping = function setDateTimeMapping(playlist) {\n    if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n      this.datetimeToDisplayTime = -playlistTimestamp;\n    }\n  };\n\n  /**\n   * Reset the state of the inspection cache when we do a rendition\n   * switch\n   */\n\n\n  SyncController.prototype.reset = function reset() {\n    this.inspectCache_ = undefined;\n  };\n\n  /**\n   * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n   * and end of the segment in it's internal \"media time\". Used to generate\n   * mappings from that internal \"media time\" to the display time that is\n   * shown on the player.\n   *\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n\n  SyncController.prototype.probeSegmentInfo = function probeSegmentInfo(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var playlist = segmentInfo.playlist;\n    var timingInfo = void 0;\n\n    if (segment.map) {\n      timingInfo = this.probeMp4Segment_(segmentInfo);\n    } else {\n      timingInfo = this.probeTsSegment_(segmentInfo);\n    }\n\n    if (timingInfo) {\n      if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n        this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n        // If the playlist does not have sync information yet, record that information\n        // now with segment timing information\n        if (!playlist.syncInfo) {\n          playlist.syncInfo = {\n            mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n            time: segment.start\n          };\n        }\n      }\n    }\n\n    return timingInfo;\n  };\n\n  /**\n   * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n   * in it's internal \"media time\".\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   * @return {object} The start and end time of the current segment in \"media time\"\n   */\n\n\n  SyncController.prototype.probeMp4Segment_ = function probeMp4Segment_(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var timescales = mp4probe.timescale(segment.map.bytes);\n    var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n    if (segmentInfo.timestampOffset !== null) {\n      segmentInfo.timestampOffset -= startTime;\n    }\n\n    return {\n      start: startTime,\n      end: startTime + segment.duration\n    };\n  };\n\n  /**\n   * Probe an mpeg2-ts segment to determine the start and end of the segment\n   * in it's internal \"media time\".\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   * @return {object} The start and end time of the current segment in \"media time\"\n   */\n\n\n  SyncController.prototype.probeTsSegment_ = function probeTsSegment_(segmentInfo) {\n    var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n    var segmentStartTime = void 0;\n    var segmentEndTime = void 0;\n\n    if (!timeInfo) {\n      return null;\n    }\n\n    if (timeInfo.video && timeInfo.video.length === 2) {\n      this.inspectCache_ = timeInfo.video[1].dts;\n      segmentStartTime = timeInfo.video[0].dtsTime;\n      segmentEndTime = timeInfo.video[1].dtsTime;\n    } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n      this.inspectCache_ = timeInfo.audio[1].dts;\n      segmentStartTime = timeInfo.audio[0].dtsTime;\n      segmentEndTime = timeInfo.audio[1].dtsTime;\n    }\n\n    return {\n      start: segmentStartTime,\n      end: segmentEndTime,\n      containsVideo: timeInfo.video && timeInfo.video.length === 2,\n      containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n    };\n  };\n\n  SyncController.prototype.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  };\n\n  SyncController.prototype.mappingForTimeline = function mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  };\n\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @returns {Boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n\n  SyncController.prototype.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n    var segment = segmentInfo.segment;\n    var mappingObj = this.timelines[segmentInfo.timeline];\n\n    if (segmentInfo.timestampOffset !== null) {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      this.timelines[segmentInfo.timeline] = mappingObj;\n      this.trigger('timestampoffset');\n\n      this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n      segment.start = segmentInfo.startOfSegment;\n      segment.end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      segment.start = timingInfo.start + mappingObj.mapping;\n      segment.end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n\n  SyncController.prototype.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n    var playlist = segmentInfo.playlist;\n    var segment = segmentInfo.segment;\n\n    // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        var accuracy = Math.abs(mediaIndexDiff);\n\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          var time = void 0;\n\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n          } else {\n            time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n          }\n\n          this.discontinuities[discontinuity] = {\n            time: time,\n            accuracy: accuracy\n          };\n        }\n      }\n    }\n  };\n\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          window_1.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\nvar MasterPlaylistController = function (_videojs$EventTarget5) {\n  inherits(MasterPlaylistController, _videojs$EventTarget5);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this29 = possibleConstructorReturn(this, _videojs$EventTarget5.call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType;\n\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this29.withCredentials = withCredentials;\n    _this29.tech_ = tech;\n    _this29.hls_ = tech.hls;\n    _this29.sourceType_ = sourceType;\n    _this29.useCueTags_ = useCueTags;\n    _this29.blacklistDuration = blacklistDuration;\n    _this29.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this29.useCueTags_) {\n      _this29.cueTagsTrack_ = _this29.tech_.addTextTrack('metadata', 'ad-cues');\n      _this29.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this29.requestOptions_ = {\n      withCredentials: _this29.withCredentials,\n      timeout: null\n    };\n\n    _this29.mediaTypes_ = createMediaTypes();\n\n    _this29.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this29.mediaSource.addEventListener('sourceopen', _this29.handleSourceOpen_.bind(_this29));\n\n    _this29.seekable_ = videojs$1.createTimeRanges();\n    _this29.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this29.syncController_ = new SyncController(options);\n    _this29.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this29.decrypter_ = new Decrypter$1();\n\n    var segmentLoaderSettings = {\n      hls: _this29.hls_,\n      mediaSource: _this29.mediaSource,\n      currentTime: _this29.tech_.currentTime.bind(_this29.tech_),\n      seekable: function seekable() {\n        return _this29.seekable();\n      },\n      seeking: function seeking() {\n        return _this29.tech_.seeking();\n      },\n      duration: function duration() {\n        return _this29.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this29.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this29.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this29.syncController_,\n      decrypter: _this29.decrypter_,\n      sourceType: _this29.sourceType_\n    };\n\n    _this29.masterPlaylistLoader_ = _this29.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this29.hls_, _this29.withCredentials) : new PlaylistLoader(url, _this29.hls_, _this29.withCredentials);\n    _this29.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this29.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this29.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this29.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this29.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this29.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this29[stat + '_'] = sumLoaderStat.bind(_this29, stat);\n    });\n\n    _this29.logger_ = logger('MPC');\n\n    _this29.masterPlaylistLoader_.load();\n    return _this29;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n    var _this30 = this;\n\n    this.masterPlaylistLoader_.on('loadedmetadata', function () {\n      var media = _this30.masterPlaylistLoader_.media();\n      var requestTimeout = _this30.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n      // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n      if (isLowestEnabledRendition(_this30.masterPlaylistLoader_.master, _this30.masterPlaylistLoader_.media())) {\n        _this30.requestOptions_.timeout = 0;\n      } else {\n        _this30.requestOptions_.timeout = requestTimeout;\n      }\n\n      // if this isn't a live video and preload permits, start\n      // downloading segments\n      if (media.endList && _this30.tech_.preload() !== 'none') {\n        _this30.mainSegmentLoader_.playlist(media, _this30.requestOptions_);\n        _this30.mainSegmentLoader_.load();\n      }\n\n      setupMediaGroups({\n        sourceType: _this30.sourceType_,\n        segmentLoaders: {\n          AUDIO: _this30.audioSegmentLoader_,\n          SUBTITLES: _this30.subtitleSegmentLoader_,\n          main: _this30.mainSegmentLoader_\n        },\n        tech: _this30.tech_,\n        requestOptions: _this30.requestOptions_,\n        masterPlaylistLoader: _this30.masterPlaylistLoader_,\n        hls: _this30.hls_,\n        master: _this30.master(),\n        mediaTypes: _this30.mediaTypes_,\n        blacklistCurrentPlaylist: _this30.blacklistCurrentPlaylist.bind(_this30)\n      });\n\n      _this30.triggerPresenceUsage_(_this30.master(), media);\n\n      try {\n        _this30.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create SourceBuffers', e);\n        return _this30.mediaSource.endOfStream('decode');\n      }\n      _this30.setupFirstPlay();\n\n      _this30.trigger('selectedinitialmedia');\n    });\n\n    this.masterPlaylistLoader_.on('loadedplaylist', function () {\n      var updatedPlaylist = _this30.masterPlaylistLoader_.media();\n\n      if (!updatedPlaylist) {\n        // blacklist any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        _this30.excludeUnsupportedVariants_();\n\n        var selectedMedia = void 0;\n\n        if (_this30.enableLowInitialPlaylist) {\n          selectedMedia = _this30.selectInitialPlaylist();\n        }\n\n        if (!selectedMedia) {\n          selectedMedia = _this30.selectPlaylist();\n        }\n\n        _this30.initialMedia_ = selectedMedia;\n        _this30.masterPlaylistLoader_.media(_this30.initialMedia_);\n        return;\n      }\n\n      if (_this30.useCueTags_) {\n        _this30.updateAdCues_(updatedPlaylist);\n      }\n\n      // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `mediachange`\n      _this30.mainSegmentLoader_.playlist(updatedPlaylist, _this30.requestOptions_);\n      _this30.updateDuration();\n\n      // If the player isn't paused, ensure that the segment loader is running,\n      // as it is possible that it was temporarily stopped while waiting for\n      // a playlist (e.g., in case the playlist errored and we re-requested it).\n      if (!_this30.tech_.paused()) {\n        _this30.mainSegmentLoader_.load();\n      }\n\n      if (!updatedPlaylist.endList) {\n        var addSeekableRange = function addSeekableRange() {\n          var seekable$$1 = _this30.seekable();\n\n          if (seekable$$1.length !== 0) {\n            _this30.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n          }\n        };\n\n        if (_this30.duration() !== Infinity) {\n          var onDurationchange = function onDurationchange() {\n            if (_this30.duration() === Infinity) {\n              addSeekableRange();\n            } else {\n              _this30.tech_.one('durationchange', onDurationchange);\n            }\n          };\n\n          _this30.tech_.one('durationchange', onDurationchange);\n        } else {\n          addSeekableRange();\n        }\n      }\n    });\n\n    this.masterPlaylistLoader_.on('error', function () {\n      _this30.blacklistCurrentPlaylist(_this30.masterPlaylistLoader_.error);\n    });\n\n    this.masterPlaylistLoader_.on('mediachanging', function () {\n      _this30.mainSegmentLoader_.abort();\n      _this30.mainSegmentLoader_.pause();\n    });\n\n    this.masterPlaylistLoader_.on('mediachange', function () {\n      var media = _this30.masterPlaylistLoader_.media();\n      var requestTimeout = _this30.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n      // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n      if (isLowestEnabledRendition(_this30.masterPlaylistLoader_.master, _this30.masterPlaylistLoader_.media())) {\n        _this30.requestOptions_.timeout = 0;\n      } else {\n        _this30.requestOptions_.timeout = requestTimeout;\n      }\n\n      // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n      _this30.mainSegmentLoader_.playlist(media, _this30.requestOptions_);\n      _this30.mainSegmentLoader_.load();\n\n      _this30.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n\n    this.masterPlaylistLoader_.on('playlistunchanged', function () {\n      var updatedPlaylist = _this30.masterPlaylistLoader_.media();\n      var playlistOutdated = _this30.stuckAtPlaylistEnd_(updatedPlaylist);\n\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // blacklist it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        _this30.blacklistCurrentPlaylist({\n          message: 'Playlist no longer updating.'\n        });\n        // useful for monitoring QoS\n        _this30.tech_.trigger('playliststuck');\n      }\n    });\n\n    this.masterPlaylistLoader_.on('renditiondisabled', function () {\n      _this30.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n    });\n    this.masterPlaylistLoader_.on('renditionenabled', function () {\n      _this30.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n    });\n  };\n\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n    var mediaGroups = master.mediaGroups || {};\n    var defaultDemuxed = true;\n    var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n    for (var mediaGroup in mediaGroups.AUDIO) {\n      for (var label in mediaGroups.AUDIO[mediaGroup]) {\n        var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n\n    if (defaultDemuxed) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n    }\n\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n    }\n\n    if (Hls.Playlist.isAes(media)) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n    }\n\n    if (Hls.Playlist.isFmp4(media)) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n    }\n\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n    }\n\n    if (this.useCueTags_) {\n      this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n    }\n  };\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n    var _this31 = this;\n\n    this.mainSegmentLoader_.on('bandwidthupdate', function () {\n      var nextPlaylist = _this31.selectPlaylist();\n      var currentPlaylist = _this31.masterPlaylistLoader_.media();\n      var buffered = _this31.tech_.buffered();\n      var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this31.tech_.currentTime() : 0;\n\n      var bufferLowWaterLine = _this31.bufferLowWaterLine();\n\n      // If the playlist is live, then we want to not take low water line into account.\n      // This is because in LIVE, the player plays 3 segments from the end of the\n      // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n      // in those segments, a viewer will never experience a rendition upswitch.\n      if (!currentPlaylist.endList ||\n      // For the same reason as LIVE, we ignore the low water line when the VOD\n      // duration is below the max potential low water line\n      _this31.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n      // we want to switch down to lower resolutions quickly to continue playback, but\n      nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n      // ensure we have some buffer before we switch up to prevent us running out of\n      // buffer while loading a higher rendition.\n      forwardBuffer >= bufferLowWaterLine) {\n        _this31.masterPlaylistLoader_.media(nextPlaylist);\n      }\n\n      _this31.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('progress', function () {\n      _this31.trigger('progress');\n    });\n\n    this.mainSegmentLoader_.on('error', function () {\n      _this31.blacklistCurrentPlaylist(_this31.mainSegmentLoader_.error());\n    });\n\n    this.mainSegmentLoader_.on('syncinfoupdate', function () {\n      _this31.onSyncInfoUpdate_();\n    });\n\n    this.mainSegmentLoader_.on('timestampoffset', function () {\n      _this31.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', function () {\n      _this31.onSyncInfoUpdate_();\n    });\n\n    this.mainSegmentLoader_.on('ended', function () {\n      _this31.onEndOfStream();\n    });\n\n    this.mainSegmentLoader_.on('earlyabort', function () {\n      _this31.blacklistCurrentPlaylist({\n        message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n      }, ABORT_EARLY_BLACKLIST_SECONDS);\n    });\n\n    this.mainSegmentLoader_.on('reseteverything', function () {\n      // If playing an MTS stream, a videojs.MediaSource is listening for\n      // hls-reset to reset caption parsing state in the transmuxer\n      _this31.tech_.trigger('hls-reset');\n    });\n\n    this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n      // If playing an MTS stream in html, a videojs.MediaSource is listening for\n      // hls-segment-time-mapping update its internal mapping of stream to display time\n      _this31.tech_.trigger({\n        type: 'hls-segment-time-mapping',\n        mapping: event.mapping\n      });\n    });\n\n    this.audioSegmentLoader_.on('ended', function () {\n      _this31.onEndOfStream();\n    });\n  };\n\n  MasterPlaylistController.prototype.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  };\n\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n\n  MasterPlaylistController.prototype.load = function load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  };\n\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method may perform destructive actions, like\n   * removing already buffered content, to readjust the currently\n   * active playlist quickly.\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.fastQualityChange_ = function fastQualityChange_() {\n    var media = this.selectPlaylist();\n\n    if (media !== this.masterPlaylistLoader_.media()) {\n      this.masterPlaylistLoader_.media(media);\n\n      this.mainSegmentLoader_.resetLoader();\n      // don't need to reset audio as it is reset when media changes\n    }\n  };\n\n  /**\n   * Begin playback.\n   */\n\n\n  MasterPlaylistController.prototype.play = function play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n\n    if (this.hasPlayed_()) {\n      this.load();\n    }\n\n    var seekable$$1 = this.tech_.seekable();\n\n    // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable$$1.start(0)) {\n        return this.tech_.setCurrentTime(seekable$$1.end(seekable$$1.length - 1));\n      }\n    }\n  };\n\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n\n  MasterPlaylistController.prototype.setupFirstPlay = function setupFirstPlay() {\n    var _this32 = this;\n\n    var media = this.masterPlaylistLoader_.media();\n\n    // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n    if (!media || this.tech_.paused() || this.hasPlayed_()) {\n      return false;\n    }\n\n    // when the video is a live stream\n    if (!media.endList) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n\n      if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', function () {\n          _this32.trigger('firstplay');\n          _this32.tech_.setCurrentTime(seekable$$1.end(0));\n          _this32.hasPlayed_ = function () {\n            return true;\n          };\n        });\n\n        return false;\n      }\n\n      // trigger firstplay to inform the source handler to ignore the next seek event\n      this.trigger('firstplay');\n      // seek to the live point\n      this.tech_.setCurrentTime(seekable$$1.end(0));\n    }\n\n    this.hasPlayed_ = function () {\n      return true;\n    };\n    // we can begin loading now that everything is ready\n    this.load();\n    return true;\n  };\n\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.handleSourceOpen_ = function handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    try {\n      this.setupSourceBuffers_();\n    } catch (e) {\n      videojs$1.log.warn('Failed to create Source Buffers', e);\n      return this.mediaSource.endOfStream('decode');\n    }\n\n    // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n    if (this.tech_.autoplay()) {\n      var playPromise = this.tech_.play();\n\n      // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, function (e) {});\n      }\n    }\n\n    this.trigger('sourceopen');\n  };\n\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.onEndOfStream = function onEndOfStream() {\n    var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      // if the audio playlist loader exists, then alternate audio is active\n      if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n\n    if (isEndOfStream) {\n      this.mediaSource.endOfStream();\n    }\n  };\n\n  /**\n   * Check if a playlist has stopped being updated\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n\n  MasterPlaylistController.prototype.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n    var seekable$$1 = this.seekable();\n\n    if (!seekable$$1.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n\n    var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n    if (expired === null) {\n      return false;\n    }\n\n    // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n    var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    var bufferedEnd = buffered.end(buffered.length - 1);\n\n    // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  };\n\n  /**\n   * Blacklists a playlist when an error occurs for a set amount of time\n   * making it unavailable for selection by the rendition selection algorithm\n   * and then forces a new playlist (rendition) selection.\n   *\n   * @param {Object=} error an optional error that may include the playlist\n   * to blacklist\n   * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n   * playlist\n   */\n\n\n  MasterPlaylistController.prototype.blacklistCurrentPlaylist = function blacklistCurrentPlaylist() {\n    var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var blacklistDuration = arguments[1];\n\n    var currentPlaylist = void 0;\n    var nextPlaylist = void 0;\n\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // blacklisted instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n    blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n    // If there is no current playlist, then an error occurred while we were\n    // trying to load the master OR while we were disposing of the tech\n    if (!currentPlaylist) {\n      this.error = error;\n\n      try {\n        return this.mediaSource.endOfStream('network');\n      } catch (e) {\n        return this.trigger('error');\n      }\n    }\n\n    var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n    if (isFinalRendition) {\n      // Never blacklisting this playlist because it's final rendition\n      videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n      this.tech_.trigger('retryplaylist');\n      return this.masterPlaylistLoader_.load(isFinalRendition);\n    }\n    // Blacklist this playlist\n    currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n    this.tech_.trigger('blacklistplaylist');\n    this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n    // Select a new playlist\n    nextPlaylist = this.selectPlaylist();\n    videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n    return this.masterPlaylistLoader_.media(nextPlaylist);\n  };\n\n  /**\n   * Pause all segment loaders\n   */\n\n\n  MasterPlaylistController.prototype.pauseLoading = function pauseLoading() {\n    this.mainSegmentLoader_.pause();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n    }\n  };\n\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n\n  MasterPlaylistController.prototype.setCurrentTime = function setCurrentTime(currentTime) {\n    var buffered = findRange(this.tech_.buffered(), currentTime);\n\n    if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    }\n\n    // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n    if (!this.masterPlaylistLoader_.media().segments) {\n      return 0;\n    }\n\n    // In flash playback, the segment loaders should be reset on every seek, even\n    // in buffer seeks. If the seek location is already buffered, continue buffering as\n    // usual\n    // TODO: redo this comment\n    if (buffered && buffered.length) {\n      return currentTime;\n    }\n\n    // cancel outstanding requests so we begin buffering at the new\n    // location\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    }\n\n    // start segment loader loading in case they are paused\n    this.load();\n  };\n\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n\n  MasterPlaylistController.prototype.duration = function duration() {\n    if (!this.masterPlaylistLoader_) {\n      return 0;\n    }\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n\n    return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n  };\n\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n\n  MasterPlaylistController.prototype.seekable = function seekable() {\n    return this.seekable_;\n  };\n\n  MasterPlaylistController.prototype.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n    var mainSeekable = void 0;\n    var audioSeekable = void 0;\n\n    if (!this.masterPlaylistLoader_) {\n      return;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      return;\n    }\n\n    var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n\n    mainSeekable = Hls.Playlist.seekable(media, expired);\n\n    if (mainSeekable.length === 0) {\n      return;\n    }\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        return;\n      }\n\n      audioSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    }\n\n    this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n    this.tech_.trigger('seekablechanged');\n  };\n\n  /**\n   * Update the player duration\n   */\n\n\n  MasterPlaylistController.prototype.updateDuration = function updateDuration() {\n    var _this33 = this;\n\n    var oldDuration = this.mediaSource.duration;\n    var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    var buffered = this.tech_.buffered();\n    var setDuration = function setDuration() {\n      _this33.mediaSource.duration = newDuration;\n      _this33.tech_.trigger('durationchange');\n\n      _this33.mediaSource.removeEventListener('sourceopen', setDuration);\n    };\n\n    if (buffered.length > 0) {\n      newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n    }\n\n    // if the duration has changed, invalidate the cached value\n    if (oldDuration !== newDuration) {\n      // update the duration\n      if (this.mediaSource.readyState !== 'open') {\n        this.mediaSource.addEventListener('sourceopen', setDuration);\n      } else {\n        setDuration();\n      }\n    }\n  };\n\n  /**\n   * dispose of the MasterPlaylistController and everything\n   * that it controls\n   */\n\n\n  MasterPlaylistController.prototype.dispose = function dispose() {\n    var _this34 = this;\n\n    this.decrypter_.terminate();\n    this.masterPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      var groups = _this34.mediaTypes_[type].groups;\n\n      for (var id in groups) {\n        groups[id].forEach(function (group) {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n  };\n\n  /**\n   * return the master playlist object if we have one\n   *\n   * @return {Object} the master playlist object that we parsed\n   */\n\n\n  MasterPlaylistController.prototype.master = function master() {\n    return this.masterPlaylistLoader_.master;\n  };\n\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n\n  MasterPlaylistController.prototype.media = function media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.masterPlaylistLoader_.media() || this.initialMedia_;\n  };\n\n  /**\n   * setup our internal source buffers on our segment Loaders\n   *\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.setupSourceBuffers_ = function setupSourceBuffers_() {\n    var media = this.masterPlaylistLoader_.media();\n    var mimeTypes = void 0;\n\n    // wait until a media playlist is available and the Media Source is\n    // attached\n    if (!media || this.mediaSource.readyState !== 'open') {\n      return;\n    }\n\n    mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n    if (mimeTypes.length < 1) {\n      this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n      return this.mediaSource.endOfStream('decode');\n    }\n\n    this.configureLoaderMimeTypes_(mimeTypes);\n    // exclude any incompatible variant streams from future playlist\n    // selection\n    this.excludeIncompatibleVariants_(media);\n  };\n\n  MasterPlaylistController.prototype.configureLoaderMimeTypes_ = function configureLoaderMimeTypes_(mimeTypes) {\n    // If the content is demuxed, we can't start appending segments to a source buffer\n    // until both source buffers are set up, or else the browser may not let us add the\n    // second source buffer (it will assume we are playing either audio only or video\n    // only).\n    var sourceBufferEmitter =\n    // If there is more than one mime type\n    mimeTypes.length > 1 &&\n    // and the first mime type does not have muxed video and audio\n    mimeTypes[0].indexOf(',') === -1 &&\n    // and the two mime types are different (they can be the same in the case of audio\n    // only with alternate audio)\n    mimeTypes[0] !== mimeTypes[1] ?\n    // then we want to wait on the second source buffer\n    new videojs$1.EventTarget() :\n    // otherwise there is no need to wait as the content is either audio only,\n    // video only, or muxed content.\n    null;\n\n    this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n    if (mimeTypes[1]) {\n      this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n    }\n  };\n\n  /**\n   * Blacklists playlists with codecs that are unsupported by the browser.\n   */\n\n\n  MasterPlaylistController.prototype.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n    this.master().playlists.forEach(function (variant) {\n      if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n        variant.excludeUntil = Infinity;\n      }\n    });\n  };\n\n  /**\n   * Blacklist playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current master playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n\n  MasterPlaylistController.prototype.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(media) {\n    var codecCount = 2;\n    var videoCodec = null;\n    var codecs = void 0;\n\n    if (media.attributes.CODECS) {\n      codecs = parseCodecs(media.attributes.CODECS);\n      videoCodec = codecs.videoCodec;\n      codecCount = codecs.codecCount;\n    }\n\n    this.master().playlists.forEach(function (variant) {\n      var variantCodecs = {\n        codecCount: 2,\n        videoCodec: null\n      };\n\n      if (variant.attributes.CODECS) {\n        variantCodecs = parseCodecs(variant.attributes.CODECS);\n      }\n\n      // if the streams differ in the presence or absence of audio or\n      // video, they are incompatible\n      if (variantCodecs.codecCount !== codecCount) {\n        variant.excludeUntil = Infinity;\n      }\n\n      // if h.264 is specified on the current playlist, some flavor of\n      // it must be specified on all compatible variants\n      if (variantCodecs.videoCodec !== videoCodec) {\n        variant.excludeUntil = Infinity;\n      }\n    });\n  };\n\n  MasterPlaylistController.prototype.updateAdCues_ = function updateAdCues_(media) {\n    var offset = 0;\n    var seekable$$1 = this.seekable();\n\n    if (seekable$$1.length) {\n      offset = seekable$$1.start(0);\n    }\n\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  };\n\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {Number} Desired forward buffer length in seconds\n   */\n\n\n  MasterPlaylistController.prototype.goalBufferLength = function goalBufferLength() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.GOAL_BUFFER_LENGTH;\n    var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n    return Math.min(initial + currentTime * rate, max);\n  };\n\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {Number} Desired buffer low water line in seconds\n   */\n\n\n  MasterPlaylistController.prototype.bufferLowWaterLine = function bufferLowWaterLine() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.BUFFER_LOW_WATER_LINE;\n    var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n    return Math.min(initial + currentTime * rate, max);\n  };\n\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this35 = this;\n\n    classCallCheck(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this35.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this35.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this35.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this35.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this35.logger_('dispose');\n      _this35.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this35.tech_.off('waiting', waitingHandler);\n      _this35.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this35.tech_.off('canplay', canPlayHandler);\n      if (_this35.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this35.checkCurrentTimeTimeout_);\n      }\n      _this35.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.monitorCurrentTime_ = function monitorCurrentTime_() {\n    this.checkCurrentTime_();\n\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    }\n\n    // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  };\n\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.checkCurrentTime_ = function checkCurrentTime_() {\n    if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = this.tech_.currentTime();\n      return;\n    }\n\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  };\n\n  /**\n   * Cancels any pending timers and resets the 'timeupdate' mechanism\n   * designed to detect that we are stalled\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.cancelTimer_ = function cancelTimer_() {\n    this.consecutiveUpdates = 0;\n\n    if (this.timer_) {\n      this.logger_('cancelTimer_');\n      clearTimeout(this.timer_);\n    }\n\n    this.timer_ = null;\n  };\n\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {Boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.fixesBadSeeks_ = function fixesBadSeeks_() {\n    var seeking = this.tech_.seeking();\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n    var seekTo = void 0;\n\n    if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n      var seekableEnd = seekable.end(seekable.length - 1);\n\n      // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n      seekTo = seekableEnd;\n    }\n\n    if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n      var seekableStart = seekable.start(0);\n\n      // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n      seekTo = seekableStart + SAFE_TIME_DELTA;\n    }\n\n    if (typeof seekTo !== 'undefined') {\n      this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.waiting_ = function waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    }\n\n    // All tech waiting checks failed. Use last resort correction\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n    var currentRange = findRange(buffered, currentTime);\n\n    // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime);\n\n      this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n      // unknown waiting corrections may be useful for monitoring QoS\n      this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n      return;\n    }\n  };\n\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {Boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.techWaiting_ = function techWaiting_() {\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n\n    if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n      // Tech is seeking or bad seek fixed, no action needed\n      return true;\n    }\n\n    if (this.tech_.seeking() || this.timer_ !== null) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var livePoint = seekable.end(seekable.length - 1);\n\n      this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(livePoint);\n\n      // live window resyncs may be useful for monitoring QoS\n      this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n      return true;\n    }\n\n    var buffered = this.tech_.buffered();\n    var nextRange = findNextRange(buffered, currentTime);\n\n    if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime);\n\n      // video underflow may be useful for monitoring QoS\n      this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n      return true;\n    }\n\n    // check for gap\n    if (nextRange.length > 0) {\n      var difference = nextRange.start(0) - currentTime;\n\n      this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n      this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n      return true;\n    }\n\n    // All checks failed. Returning false to indicate failure to correct waiting\n    return false;\n  };\n\n  PlaybackWatcher.prototype.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n\n    if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n      return true;\n    }\n\n    return false;\n  };\n\n  PlaybackWatcher.prototype.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n      return true;\n    }\n\n    return false;\n  };\n\n  PlaybackWatcher.prototype.videoUnderflow_ = function videoUnderflow_(nextRange, buffered, currentTime) {\n    if (nextRange.length === 0) {\n      // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n      var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n      if (gap) {\n        this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n\n  PlaybackWatcher.prototype.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n    var buffered = this.tech_.buffered();\n    var currentTime = this.tech_.currentTime();\n    var nextRange = findNextRange(buffered, currentTime);\n\n    this.cancelTimer_();\n\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n    // only seek if we still have not played\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n    this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n  };\n\n  PlaybackWatcher.prototype.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    var gaps = findGaps(buffered);\n\n    for (var i = 0; i < gaps.length; i++) {\n      var start = gaps.start(i);\n      var end = gaps.end(i);\n\n      // gap is starts no more than 4 seconds back\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start: start,\n          end: end\n        };\n      }\n    }\n\n    return null;\n  };\n\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.0.0\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: aesDecrypter.Decrypter,\n  AsyncStream: aesDecrypter.AsyncStream,\n  decrypt: aesDecrypter.decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this36 = possibleConstructorReturn(this, _Component.call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech_.hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this36;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this36;\n      // deprecated, for backwards compatibility\n      _player.dash = _this36;\n    }\n\n    _this36.tech_ = tech;\n    _this36.source_ = source;\n    _this36.stats = {};\n    _this36.ignoreNextSeekingEvent_ = false;\n    _this36.setOptions_();\n\n    // overriding native HLS only works if audio tracks have been emulated\n    // error early if we're misconfigured:\n    if (_this36.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this36.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this36.tech_.el())) {\n        _this36.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n\n    _this36.on(_this36.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    _this36.on(_this36.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this36.on(_this36.tech_, 'play', _this36.play);\n    return _this36;\n  }\n\n  HlsHandler.prototype.setOptions_ = function setOptions_() {\n    var _this37 = this;\n\n    // defaults\n    this.options_.withCredentials = this.options_.withCredentials || false;\n\n    if (typeof this.options_.blacklistDuration !== 'number') {\n      this.options_.blacklistDuration = 5 * 60;\n    }\n\n    // start playlist selection at a reasonable bandwidth for\n    // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = INITIAL_BANDWIDTH;\n    }\n\n    // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n    // grab options passed to player.src\n    ['withCredentials', 'bandwidth'].forEach(function (option) {\n      if (typeof _this37.source_[option] !== 'undefined') {\n        _this37.options_[option] = _this37.source_[option];\n      }\n    });\n\n    this.bandwidth = this.options_.bandwidth;\n  };\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n\n  HlsHandler.prototype.src = function src(_src, type) {\n    var _this38 = this;\n\n    // do nothing if the src is falsey\n    if (!_src) {\n      return;\n    }\n    this.setOptions_();\n    // add master playlist controller options\n    this.options_.url = this.source_.src;\n    this.options_.tech = this.tech_;\n    this.options_.externHls = Hls$1;\n    this.options_.sourceType = simpleTypeFromSourceType(type);\n\n    this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n    this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n      seekable: function seekable() {\n        return _this38.seekable();\n      }\n    }));\n\n    this.masterPlaylistController_.on('error', function () {\n      var player = videojs$1.players[_this38.tech_.options_.playerId];\n\n      player.error(_this38.masterPlaylistController_.error);\n    });\n\n    // `this` in selectPlaylist should be the HlsHandler for backwards\n    // compatibility with < v2\n    this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n    this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n    // re-expose some internal objects for backwards compatibility with < v2\n    this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n    this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n    // Proxy assignment of some properties to the master playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get: function get$$1() {\n          return this.masterPlaylistController_.selectPlaylist;\n        },\n        set: function set$$1(selectPlaylist) {\n          this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get: function get$$1() {\n          return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set: function set$$1(throughput) {\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n          // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get: function get$$1() {\n          return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n        },\n        set: function set$$1(bandwidth) {\n          this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n          // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n          this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get: function get$$1() {\n          var invBandwidth = 1 / (this.bandwidth || 1);\n          var invThroughput = void 0;\n\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n\n          var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n          return systemBitrate;\n        },\n        set: function set$$1() {\n          videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: function get$$1() {\n          return _this38.bandwidth || 0;\n        },\n        enumerable: true\n      },\n      mediaRequests: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequests_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequestsAborted_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaRequestsErrored_() || 0;\n        },\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaTransferDuration_() || 0;\n        },\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaBytesTransferred_() || 0;\n        },\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: function get$$1() {\n          return _this38.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n        },\n        enumerable: true\n      },\n      buffered: {\n        get: function get$$1() {\n          return timeRangesToArray(_this38.tech_.buffered());\n        },\n        enumerable: true\n      },\n      currentTime: {\n        get: function get$$1() {\n          return _this38.tech_.currentTime();\n        },\n        enumerable: true\n      },\n      currentSource: {\n        get: function get$$1() {\n          return _this38.tech_.currentSource_;\n        },\n        enumerable: true\n      },\n      currentTech: {\n        get: function get$$1() {\n          return _this38.tech_.name_;\n        },\n        enumerable: true\n      },\n      duration: {\n        get: function get$$1() {\n          return _this38.tech_.duration();\n        },\n        enumerable: true\n      },\n      master: {\n        get: function get$$1() {\n          return _this38.playlists.master;\n        },\n        enumerable: true\n      },\n      playerDimensions: {\n        get: function get$$1() {\n          return _this38.tech_.currentDimensions();\n        },\n        enumerable: true\n      },\n      seekable: {\n        get: function get$$1() {\n          return timeRangesToArray(_this38.tech_.seekable());\n        },\n        enumerable: true\n      },\n      timestamp: {\n        get: function get$$1() {\n          return Date.now();\n        },\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: function get$$1() {\n          return _this38.tech_.getVideoPlaybackQuality();\n        },\n        enumerable: true\n      }\n    });\n\n    this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      // Add the manual rendition mix-in to HlsHandler\n      renditionSelectionMixin(_this38);\n      setupEmeOptions(_this38);\n    });\n\n    // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n    this.on(this.masterPlaylistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    });\n\n    // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n    this.on(this.masterPlaylistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n\n    this.tech_.ready(function () {\n      return _this38.setupQualityLevels_();\n    });\n\n    // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n    if (!this.tech_.el()) {\n      return;\n    }\n\n    this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n  };\n\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n\n  HlsHandler.prototype.setupQualityLevels_ = function setupQualityLevels_() {\n    var _this39 = this;\n\n    var player = videojs$1.players[this.tech_.options_.playerId];\n\n    if (player && player.qualityLevels) {\n      this.qualityLevels_ = player.qualityLevels();\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        handleHlsLoadedMetadata(_this39.qualityLevels_, _this39);\n      });\n\n      this.playlists.on('mediachange', function () {\n        handleHlsMediaChange(_this39.qualityLevels_, _this39.playlists);\n      });\n    }\n  };\n\n  /**\n   * Begin playing the video.\n   */\n\n\n  HlsHandler.prototype.play = function play() {\n    this.masterPlaylistController_.play();\n  };\n\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n\n\n  HlsHandler.prototype.setCurrentTime = function setCurrentTime(currentTime) {\n    this.masterPlaylistController_.setCurrentTime(currentTime);\n  };\n\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n\n\n  HlsHandler.prototype.duration = function duration() {\n    return this.masterPlaylistController_.duration();\n  };\n\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n\n\n  HlsHandler.prototype.seekable = function seekable() {\n    return this.masterPlaylistController_.seekable();\n  };\n\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n\n  HlsHandler.prototype.dispose = function dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.masterPlaylistController_) {\n      this.masterPlaylistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    _Component.prototype.dispose.call(this);\n  };\n\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nmodule.exports = videojs$1;\n"]},"metadata":{},"sourceType":"script"}
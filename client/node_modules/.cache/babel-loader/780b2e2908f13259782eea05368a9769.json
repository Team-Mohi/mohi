{"ast":null,"code":"import { Util } from 'leaflet';\nimport { RasterLayer } from './RasterLayer';\nimport { getUrlParams } from '../Util';\nimport mapService from '../Services/MapService';\nexport var DynamicMapLayer = RasterLayer.extend({\n  options: {\n    updateInterval: 150,\n    layers: false,\n    layerDefs: false,\n    timeOptions: false,\n    format: 'png32',\n    transparent: true,\n    f: 'json'\n  },\n  initialize: function initialize(options) {\n    options = getUrlParams(options);\n    this.service = mapService(options);\n    this.service.addEventParent(this);\n    Util.setOptions(this, options);\n  },\n  getDynamicLayers: function getDynamicLayers() {\n    return this.options.dynamicLayers;\n  },\n  setDynamicLayers: function setDynamicLayers(dynamicLayers) {\n    this.options.dynamicLayers = dynamicLayers;\n\n    this._update();\n\n    return this;\n  },\n  getLayers: function getLayers() {\n    return this.options.layers;\n  },\n  setLayers: function setLayers(layers) {\n    this.options.layers = layers;\n\n    this._update();\n\n    return this;\n  },\n  getLayerDefs: function getLayerDefs() {\n    return this.options.layerDefs;\n  },\n  setLayerDefs: function setLayerDefs(layerDefs) {\n    this.options.layerDefs = layerDefs;\n\n    this._update();\n\n    return this;\n  },\n  getTimeOptions: function getTimeOptions() {\n    return this.options.timeOptions;\n  },\n  setTimeOptions: function setTimeOptions(timeOptions) {\n    this.options.timeOptions = timeOptions;\n\n    this._update();\n\n    return this;\n  },\n  query: function query() {\n    return this.service.query();\n  },\n  identify: function identify() {\n    return this.service.identify();\n  },\n  find: function find() {\n    return this.service.find();\n  },\n  _getPopupData: function _getPopupData(e) {\n    var callback = Util.bind(function (error, featureCollection, response) {\n      if (error) {\n        return;\n      } // we really can't do anything here but authenticate or requesterror will fire\n\n\n      setTimeout(Util.bind(function () {\n        this._renderPopup(e.latlng, error, featureCollection, response);\n      }, this), 300);\n    }, this);\n    var identifyRequest;\n\n    if (this.options.popup) {\n      identifyRequest = this.options.popup.on(this._map).at(e.latlng);\n    } else {\n      identifyRequest = this.identify().on(this._map).at(e.latlng);\n    } // remove extraneous vertices from response features if it has not already been done\n\n\n    identifyRequest.params.maxAllowableOffset ? true : identifyRequest.simplify(this._map, 0.5);\n\n    if (!(this.options.popup && this.options.popup.params && this.options.popup.params.layers)) {\n      if (this.options.layers) {\n        identifyRequest.layers('visible:' + this.options.layers.join(','));\n      } else {\n        identifyRequest.layers('visible');\n      }\n    } // if present, pass layer ids and sql filters through to the identify task\n\n\n    if (this.options.layerDefs && typeof this.options.layerDefs !== 'string' && !identifyRequest.params.layerDefs) {\n      for (var id in this.options.layerDefs) {\n        if (this.options.layerDefs.hasOwnProperty(id)) {\n          identifyRequest.layerDef(id, this.options.layerDefs[id]);\n        }\n      }\n    }\n\n    identifyRequest.run(callback); // set the flags to show the popup\n\n    this._shouldRenderPopup = true;\n    this._lastClick = e.latlng;\n  },\n  _buildExportParams: function _buildExportParams() {\n    var sr = parseInt(this._map.options.crs.code.split(':')[1], 10);\n    var params = {\n      bbox: this._calculateBbox(),\n      size: this._calculateImageSize(),\n      dpi: 96,\n      format: this.options.format,\n      transparent: this.options.transparent,\n      bboxSR: sr,\n      imageSR: sr\n    };\n\n    if (this.options.dynamicLayers) {\n      params.dynamicLayers = this.options.dynamicLayers;\n    }\n\n    if (this.options.layers) {\n      if (this.options.layers.length === 0) {\n        return;\n      } else {\n        params.layers = 'show:' + this.options.layers.join(',');\n      }\n    }\n\n    if (this.options.layerDefs) {\n      params.layerDefs = typeof this.options.layerDefs === 'string' ? this.options.layerDefs : JSON.stringify(this.options.layerDefs);\n    }\n\n    if (this.options.timeOptions) {\n      params.timeOptions = JSON.stringify(this.options.timeOptions);\n    }\n\n    if (this.options.from && this.options.to) {\n      params.time = this.options.from.valueOf() + ',' + this.options.to.valueOf();\n    }\n\n    if (this.service.options.token) {\n      params.token = this.service.options.token;\n    }\n\n    if (this.options.proxy) {\n      params.proxy = this.options.proxy;\n    } // use a timestamp to bust server cache\n\n\n    if (this.options.disableCache) {\n      params._ts = Date.now();\n    }\n\n    return params;\n  },\n  _requestExport: function _requestExport(params, bounds) {\n    if (this.options.f === 'json') {\n      this.service.request('export', params, function (error, response) {\n        if (error) {\n          return;\n        } // we really can't do anything here but authenticate or requesterror will fire\n\n\n        if (this.options.token && response.href) {\n          response.href += '?token=' + this.options.token;\n        }\n\n        if (this.options.proxy && response.href) {\n          response.href = this.options.proxy + '?' + response.href;\n        }\n\n        if (response.href) {\n          this._renderImage(response.href, bounds);\n        } else {\n          this._renderImage(response.imageData, bounds, response.contentType);\n        }\n      }, this);\n    } else {\n      params.f = 'image';\n      var fullUrl = this.options.url + 'export' + Util.getParamString(params);\n\n      if (this.options.proxy) {\n        fullUrl = this.options.proxy + '?' + fullUrl;\n      }\n\n      this._renderImage(fullUrl, bounds);\n    }\n  }\n});\nexport function dynamicMapLayer(url, options) {\n  return new DynamicMapLayer(url, options);\n}\nexport default dynamicMapLayer;","map":{"version":3,"sources":["D:/Web/mohi/client/node_modules/esri-leaflet/src/Layers/DynamicMapLayer.js"],"names":["Util","RasterLayer","getUrlParams","mapService","DynamicMapLayer","extend","options","updateInterval","layers","layerDefs","timeOptions","format","transparent","f","initialize","service","addEventParent","setOptions","getDynamicLayers","dynamicLayers","setDynamicLayers","_update","getLayers","setLayers","getLayerDefs","setLayerDefs","getTimeOptions","setTimeOptions","query","identify","find","_getPopupData","e","callback","bind","error","featureCollection","response","setTimeout","_renderPopup","latlng","identifyRequest","popup","on","_map","at","params","maxAllowableOffset","simplify","join","id","hasOwnProperty","layerDef","run","_shouldRenderPopup","_lastClick","_buildExportParams","sr","parseInt","crs","code","split","bbox","_calculateBbox","size","_calculateImageSize","dpi","bboxSR","imageSR","length","JSON","stringify","from","to","time","valueOf","token","proxy","disableCache","_ts","Date","now","_requestExport","bounds","request","href","_renderImage","imageData","contentType","fullUrl","url","getParamString","dynamicMapLayer"],"mappings":"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","sourcesContent":["import { Util } from 'leaflet';\r\nimport { RasterLayer } from './RasterLayer';\r\nimport { getUrlParams } from '../Util';\r\nimport mapService from '../Services/MapService';\r\n\r\nexport var DynamicMapLayer = RasterLayer.extend({\r\n\r\n  options: {\r\n    updateInterval: 150,\r\n    layers: false,\r\n    layerDefs: false,\r\n    timeOptions: false,\r\n    format: 'png32',\r\n    transparent: true,\r\n    f: 'json'\r\n  },\r\n\r\n  initialize: function (options) {\r\n    options = getUrlParams(options);\r\n    this.service = mapService(options);\r\n    this.service.addEventParent(this);\r\n\r\n    Util.setOptions(this, options);\r\n  },\r\n\r\n  getDynamicLayers: function () {\r\n    return this.options.dynamicLayers;\r\n  },\r\n\r\n  setDynamicLayers: function (dynamicLayers) {\r\n    this.options.dynamicLayers = dynamicLayers;\r\n    this._update();\r\n    return this;\r\n  },\r\n\r\n  getLayers: function () {\r\n    return this.options.layers;\r\n  },\r\n\r\n  setLayers: function (layers) {\r\n    this.options.layers = layers;\r\n    this._update();\r\n    return this;\r\n  },\r\n\r\n  getLayerDefs: function () {\r\n    return this.options.layerDefs;\r\n  },\r\n\r\n  setLayerDefs: function (layerDefs) {\r\n    this.options.layerDefs = layerDefs;\r\n    this._update();\r\n    return this;\r\n  },\r\n\r\n  getTimeOptions: function () {\r\n    return this.options.timeOptions;\r\n  },\r\n\r\n  setTimeOptions: function (timeOptions) {\r\n    this.options.timeOptions = timeOptions;\r\n    this._update();\r\n    return this;\r\n  },\r\n\r\n  query: function () {\r\n    return this.service.query();\r\n  },\r\n\r\n  identify: function () {\r\n    return this.service.identify();\r\n  },\r\n\r\n  find: function () {\r\n    return this.service.find();\r\n  },\r\n\r\n  _getPopupData: function (e) {\r\n    var callback = Util.bind(function (error, featureCollection, response) {\r\n      if (error) { return; } // we really can't do anything here but authenticate or requesterror will fire\r\n      setTimeout(Util.bind(function () {\r\n        this._renderPopup(e.latlng, error, featureCollection, response);\r\n      }, this), 300);\r\n    }, this);\r\n\r\n    var identifyRequest;\r\n    if (this.options.popup) {\r\n      identifyRequest = this.options.popup.on(this._map).at(e.latlng);\r\n    } else {\r\n      identifyRequest = this.identify().on(this._map).at(e.latlng);\r\n    }\r\n\r\n    // remove extraneous vertices from response features if it has not already been done\r\n    identifyRequest.params.maxAllowableOffset ? true : identifyRequest.simplify(this._map, 0.5);\r\n\r\n    if (!(this.options.popup && this.options.popup.params && this.options.popup.params.layers)) {\r\n      if (this.options.layers) {\r\n        identifyRequest.layers('visible:' + this.options.layers.join(','));\r\n      } else {\r\n        identifyRequest.layers('visible');\r\n      }\r\n    }\r\n\r\n    // if present, pass layer ids and sql filters through to the identify task\r\n    if (this.options.layerDefs && typeof this.options.layerDefs !== 'string' && !identifyRequest.params.layerDefs) {\r\n      for (var id in this.options.layerDefs) {\r\n        if (this.options.layerDefs.hasOwnProperty(id)) {\r\n          identifyRequest.layerDef(id, this.options.layerDefs[id]);\r\n        }\r\n      }\r\n    }\r\n\r\n    identifyRequest.run(callback);\r\n\r\n    // set the flags to show the popup\r\n    this._shouldRenderPopup = true;\r\n    this._lastClick = e.latlng;\r\n  },\r\n\r\n  _buildExportParams: function () {\r\n    var sr = parseInt(this._map.options.crs.code.split(':')[1], 10);\r\n\r\n    var params = {\r\n      bbox: this._calculateBbox(),\r\n      size: this._calculateImageSize(),\r\n      dpi: 96,\r\n      format: this.options.format,\r\n      transparent: this.options.transparent,\r\n      bboxSR: sr,\r\n      imageSR: sr\r\n    };\r\n\r\n    if (this.options.dynamicLayers) {\r\n      params.dynamicLayers = this.options.dynamicLayers;\r\n    }\r\n\r\n    if (this.options.layers) {\r\n      if (this.options.layers.length === 0) {\r\n        return;\r\n      } else {\r\n        params.layers = 'show:' + this.options.layers.join(',');\r\n      }\r\n    }\r\n\r\n    if (this.options.layerDefs) {\r\n      params.layerDefs = typeof this.options.layerDefs === 'string' ? this.options.layerDefs : JSON.stringify(this.options.layerDefs);\r\n    }\r\n\r\n    if (this.options.timeOptions) {\r\n      params.timeOptions = JSON.stringify(this.options.timeOptions);\r\n    }\r\n\r\n    if (this.options.from && this.options.to) {\r\n      params.time = this.options.from.valueOf() + ',' + this.options.to.valueOf();\r\n    }\r\n\r\n    if (this.service.options.token) {\r\n      params.token = this.service.options.token;\r\n    }\r\n\r\n    if (this.options.proxy) {\r\n      params.proxy = this.options.proxy;\r\n    }\r\n\r\n    // use a timestamp to bust server cache\r\n    if (this.options.disableCache) {\r\n      params._ts = Date.now();\r\n    }\r\n\r\n    return params;\r\n  },\r\n\r\n  _requestExport: function (params, bounds) {\r\n    if (this.options.f === 'json') {\r\n      this.service.request('export', params, function (error, response) {\r\n        if (error) { return; } // we really can't do anything here but authenticate or requesterror will fire\r\n\r\n        if (this.options.token && response.href) {\r\n          response.href += ('?token=' + this.options.token);\r\n        }\r\n        if (this.options.proxy && response.href) {\r\n          response.href = this.options.proxy + '?' + response.href;\r\n        }\r\n        if (response.href) {\r\n          this._renderImage(response.href, bounds);\r\n        } else {\r\n          this._renderImage(response.imageData, bounds, response.contentType);\r\n        }\r\n      }, this);\r\n    } else {\r\n      params.f = 'image';\r\n      var fullUrl = this.options.url + 'export' + Util.getParamString(params);\r\n      if (this.options.proxy) {\r\n        fullUrl = this.options.proxy + '?' + fullUrl;\r\n      }\r\n      this._renderImage(fullUrl, bounds);\r\n    }\r\n  }\r\n});\r\n\r\nexport function dynamicMapLayer (url, options) {\r\n  return new DynamicMapLayer(url, options);\r\n}\r\n\r\nexport default dynamicMapLayer;\r\n"]},"metadata":{},"sourceType":"module"}